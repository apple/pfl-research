Search.setIndex({"docnames": ["guides/fl_introduction", "guides/simulation_distributed", "index", "installation", "reference/aggregate", "reference/algorithm", "reference/callback", "reference/common_types", "reference/context", "reference/data", "reference/environment_variables", "reference/exception", "reference/hyperparam", "reference/internal/bisect", "reference/internal/bridge", "reference/internal/distribution", "reference/internal/index", "reference/internal/ops", "reference/internal/platform", "reference/internal/privacy_loss_bound", "reference/internal/tree", "reference/metrics", "reference/model", "reference/postprocessor", "reference/privacy", "reference/stats", "reference/tree", "support/contributing"], "filenames": ["guides/fl_introduction.rst", "guides/simulation_distributed.rst", "index.rst", "installation.rst", "reference/aggregate.rst", "reference/algorithm.rst", "reference/callback.rst", "reference/common_types.rst", "reference/context.rst", "reference/data.rst", "reference/environment_variables.rst", "reference/exception.rst", "reference/hyperparam.rst", "reference/internal/bisect.rst", "reference/internal/bridge.rst", "reference/internal/distribution.rst", "reference/internal/index.rst", "reference/internal/ops.rst", "reference/internal/platform.rst", "reference/internal/privacy_loss_bound.rst", "reference/internal/tree.rst", "reference/metrics.rst", "reference/model.rst", "reference/postprocessor.rst", "reference/privacy.rst", "reference/stats.rst", "reference/tree.rst", "support/contributing.rst"], "titles": ["Federated learning with pfl", "Fast distributed simulations", "pfl: Python framework for Private Federated Learning simulations", "Installation", "Backend", "Algorithms", "Callbacks", "Types", "Context", "Data", "Environment variables", "Exception", "Hyperparameters", "Bisect", "Bridges", "Distribution", "Internal API", "Ops", "Platform", "Privacy loss bound", "Tree", "Metrics", "Models", "Postprocessor", "Differential privacy", "Training statistics", "Gradient boosted decision trees", "Contributing"], "terms": {"allow": [0, 1, 5, 7, 9, 21, 22, 24], "train": [0, 2, 4, 5, 6, 7, 8, 9, 12, 14, 17, 20, 21, 22, 23, 24, 26], "distribut": [0, 2, 5, 6, 9, 10, 16, 18, 21, 22, 23, 24, 26], "manner": [0, 22, 24], "without": [0, 6, 9, 21, 22, 23, 24, 27], "store": [0, 5, 6, 7, 9, 12, 22], "central": [0, 2, 4, 5, 6, 7, 8, 9, 12, 22, 23, 26], "server": [0, 4, 5, 8, 14, 17, 23, 24], "konecni": 0, "et": [0, 5, 9, 14, 24], "al": [0, 5, 9, 14, 24], "2015": 0, "2016": 0, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "section": [0, 1, 24], "discuss": 0, "how": [0, 1, 3, 4, 5, 6, 9, 24, 26, 27], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "The": [0, 1, 2, 4, 5, 6, 8, 9, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27], "also": [0, 1, 3, 5, 6, 9, 12, 21, 24, 26, 27], "provid": [0, 1, 2, 4, 5, 6, 8, 9, 19, 21, 23, 24, 27], "exampl": [0, 1, 9, 12, 17, 21, 22, 23, 24, 25, 27], "which": [0, 1, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "ar": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27], "import": [0, 4, 6, 9, 22, 24, 27], "input": [0, 5, 6, 9, 12, 14, 17, 22, 23, 24, 25, 26], "themselv": [0, 5], "doe": [0, 3, 4, 5, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27], "an": [0, 1, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "exhaust": 0, "list": [0, 1, 4, 5, 6, 9, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26], "rather": [0, 24], "few": [0, 5, 9, 27], "simpl": [0, 4, 15, 22, 26], "get": [0, 3, 12, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27], "start": [0, 1, 3, 4, 5, 6, 8, 9, 13, 17, 20, 22, 26], "For": [0, 4, 5, 6, 9, 15, 17, 20, 23, 24, 26, 27], "more": [0, 1, 2, 4, 5, 6, 9, 22, 23, 24, 25, 26], "complet": [0, 4, 6, 20, 21], "view": [0, 6], "our": [0, 1, 27], "benchmark": [0, 1, 2, 3, 27], "includ": [0, 2, 5, 6, 9, 12, 16, 20, 21, 23, 24, 25, 26, 27], "realist": 0, "dataset": [0, 2, 4, 5, 6, 12, 14, 21, 22, 23, 26, 27], "combin": [0, 5, 9, 21, 24, 25, 27], "differenti": [0, 2, 5, 19, 22], "sever": [0, 2, 14], "tutori": [0, 27], "avail": [0, 1, 2, 5, 27], "stochast": [0, 8, 14], "descent": [0, 14], "sgd": [0, 4, 12, 14], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "standard": [0, 1, 2, 15, 17, 19, 22, 23, 24], "neural": [0, 2, 5, 12, 22, 25], "network": [0, 1, 2, 5, 12, 14, 22, 25], "In": [0, 1, 4, 5, 9, 15, 24, 25, 27], "set": [0, 1, 2, 4, 5, 6, 9, 12, 17, 18, 20, 21, 22, 23, 24, 25, 26], "split": [0, 1, 4, 5, 9, 15, 16, 17, 22, 24, 26], "between": [0, 1, 2, 5, 6, 9, 13, 14, 17, 19, 20, 21, 22, 24], "multipl": [0, 1, 2, 4, 5, 6, 8, 9, 14, 15, 17, 19, 22, 24, 26], "center": 0, "each": [0, 1, 3, 4, 5, 6, 9, 12, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27], "have": [0, 1, 4, 6, 8, 9, 12, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27], "subset": [0, 9, 20, 24, 27], "comput": [0, 1, 4, 5, 6, 9, 14, 15, 18, 20, 21, 22, 23, 24, 26, 27], "loss": [0, 2, 4, 5, 6, 9, 14, 16, 21, 22, 23, 24, 26], "function": [0, 1, 5, 6, 9, 13, 14, 16, 17, 20, 21, 22, 24, 25, 26, 27], "respect": [0, 1, 6, 12, 20, 22, 24, 26], "paramet": [0, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "its": [0, 1, 2, 5, 9, 12, 15, 17, 22, 24, 25, 26], "own": [0, 1, 3, 6, 17, 22, 27], "sum": [0, 2, 4, 9, 15, 17, 20, 21, 22, 24, 25, 26], "over": [0, 4, 5, 6, 9, 15, 17, 21, 22, 23, 24, 25, 26], "union": [0, 5, 6, 9, 12, 15, 21, 22, 24, 26], "those": [0, 23, 24], "updat": [0, 4, 5, 6, 9, 12, 14, 17, 22, 24, 25, 26, 27], "make": [0, 1, 2, 4, 5, 6, 9, 12, 15, 17, 20, 22, 24, 26], "step": [0, 4, 5, 8, 9, 12, 13, 17, 22, 24, 27], "direct": [0, 14, 15, 24, 27], "similar": [0, 9, 14, 24], "principl": 0, "small": [0, 1, 5, 6, 27], "fraction": [0, 4, 5, 9, 15, 22, 24], "user": [0, 1, 2, 4, 5, 6, 8, 12, 20, 21, 22, 23, 24, 26, 27], "take": [0, 1, 6, 9, 12, 13, 20, 21, 24, 26, 27], "place": [0, 4, 6, 12, 20, 21, 22, 25, 26, 27], "iter": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "howev": [0, 4, 6, 15, 19, 20, 21, 24, 26], "commun": [0, 1, 10, 17, 23, 24, 27], "link": 0, "much": [0, 4, 5, 15, 17, 22, 24, 26], "slower": [0, 1, 9], "unequ": 0, "amongst": [0, 4], "call": [0, 1, 4, 5, 6, 7, 9, 15, 17, 19, 20, 21, 22, 23, 24, 26, 27], "gener": [0, 1, 4, 5, 6, 9, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26], "form": [0, 5, 6, 9, 21, 24, 26], "instead": [0, 4, 5, 7, 9, 14, 17, 21, 22, 24], "singl": [0, 1, 5, 6, 9, 15, 17, 20, 21, 22, 23, 24, 26, 27], "perform": [0, 1, 4, 5, 6, 9, 12, 13, 17, 20, 21, 22, 24, 26, 27], "local": [0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 14, 17, 18, 21, 22, 23, 26, 27], "report": [0, 5, 6, 26, 27], "differ": [0, 4, 5, 6, 7, 9, 13, 17, 21, 22, 23, 24, 25, 26, 27], "back": [0, 4, 5, 17, 21, 22, 23, 24, 25, 27], "all": [0, 1, 4, 5, 6, 9, 14, 17, 18, 20, 21, 22, 24, 25, 26, 27], "cohort": [0, 1, 4, 5, 8, 9, 12, 20, 21, 24, 26], "practic": [0, 27], "adapt": [0, 2, 5, 12, 16, 23, 26], "optim": [0, 1, 5, 8, 12, 14, 20, 22, 24, 26], "often": [0, 1, 5, 6, 19, 22, 24], "number": [0, 1, 4, 5, 6, 8, 9, 12, 13, 15, 17, 20, 21, 22, 23, 24, 25, 26], "particip": [0, 9, 24], "refer": [0, 6, 9, 14, 16, 17, 24, 26, 27], "size": [0, 1, 5, 6, 8, 9, 12, 13, 20, 24, 26], "c": [0, 1, 5, 14, 24, 27], "typic": [0, 8, 22, 23, 24], "overal": [0, 6, 17, 21, 22, 24], "popul": [0, 2, 4, 5, 7, 8, 21, 23, 24], "reason": [0, 14, 22, 24, 27], "cannot": [0, 15, 23, 24], "maintain": [0, 22, 24, 27], "state": [0, 2, 4, 5, 6, 7, 8, 12, 14, 17, 22, 24, 26], "across": [0, 1, 4, 6, 9, 17, 21], "round": [0, 4, 5, 6, 8, 9, 20, 24, 26], "although": 0, "some": [0, 4, 5, 6, 9, 15, 22, 24, 27], "It": [0, 1, 5, 6, 9, 14, 16, 19, 20, 21, 23, 24, 27], "assum": [0, 1, 4, 6, 9, 24, 26], "everi": [0, 1, 5, 6, 8, 9, 17, 18, 20, 22, 23], "most": [0, 1, 5, 9, 17, 24, 26], "onc": [0, 1, 4, 5, 6, 9, 20, 22, 24, 27], "rel": [0, 6, 22], "long": [0, 6, 14, 22, 24, 26, 27], "period": 0, "time": [0, 1, 4, 5, 6, 9, 15, 19, 20, 22, 24, 26, 27], "while": [0, 1, 2, 9, 14, 20, 24], "onli": [0, 1, 4, 5, 6, 7, 8, 9, 12, 14, 17, 19, 20, 21, 22, 23, 24, 26, 27], "limit": [0, 1, 5, 12, 24], "guarante": [0, 19, 20, 24], "boenisch": 0, "2023": 0, "carlini": 0, "kariyappa": 0, "dp": [0, 2, 4, 9, 19, 20, 23], "dwork": 0, "2014": 0, "secur": 0, "aggreg": [0, 2, 5, 6, 8, 20, 22, 23, 24, 26], "bonawitz": 0, "talwar": 0, "strong": 0, "client": [0, 5, 23, 24, 25, 26], "high": [0, 1, 15, 27], "qualiti": [0, 27], "abadi": 0, "level": [0, 2, 6, 14, 17, 20, 26, 27], "gaussian": [0, 2, 16, 17, 24], "nois": [0, 4, 9, 17, 20, 22, 24, 25], "befor": [0, 1, 4, 5, 6, 9, 12, 13, 20, 22, 23, 24, 26, 27], "send": [0, 6, 18, 24, 25], "first": [0, 1, 4, 6, 9, 13, 15, 20, 22, 24, 26, 27], "clip": [0, 2, 4, 12, 20, 26], "sure": [0, 1, 5, 9, 22, 24, 27], "norm": [0, 12, 17, 24], "upper": [0, 13, 19, 24], "bound": [0, 2, 4, 5, 6, 8, 9, 12, 13, 14, 16, 20, 22, 23, 24, 25, 26], "given": [0, 4, 5, 6, 9, 14, 17, 18, 19, 20, 22, 23, 24], "ad": [0, 1, 5, 6, 9, 14, 17, 20, 21, 22, 24, 25, 26], "coordin": 0, "higher": [0, 4, 6, 13, 14, 19, 21, 24], "stronger": 0, "random": [0, 6, 9, 17, 24, 26], "vector": [0, 9, 15, 17, 20, 21, 22, 24, 25, 26], "sent": [0, 4], "raw": [0, 4, 9, 25], "document": [0, 1, 2], "initi": [0, 5, 6, 9, 12, 13, 17, 20, 21, 22, 24, 26, 27], "kei": [0, 6, 9, 12, 17, 18, 21, 22, 24, 25, 26], "compon": [0, 5, 6, 7, 9, 14, 15, 16, 22, 27], "basic": [0, 6, 24], "simul": [0, 4, 5, 8, 9, 10, 12, 14, 17, 22, 24, 26, 27], "run": [0, 1, 2, 3, 4, 5, 6, 17, 18, 22, 24, 26, 27], "pointer": 0, "chang": [0, 1, 5, 9, 15, 17, 20, 21, 22, 24, 25, 27], "A": [0, 1, 4, 5, 6, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "collect": [0, 8, 9, 14, 17, 18, 21, 24, 27], "smaller": [0, 1, 9, 20, 23, 24, 25, 26], "associ": [0, 9, 14, 21], "uniqu": [0, 1, 6, 9, 14], "federateddataset": [0, 9], "two": [0, 1, 5, 6, 9, 15, 17, 19, 20, 21, 22, 24, 25, 26], "make_dataset_fn": [0, 9], "user_sampl": [0, 9], "we": [0, 1, 2, 9, 14, 16, 23, 24, 27], "next": [0, 5, 9, 26, 27], "return": [0, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "particular": [0, 5, 6, 9, 14, 24, 27], "id": [0, 8, 9, 26, 27], "where": [0, 1, 5, 6, 7, 9, 12, 13, 17, 20, 22, 23, 24, 25, 26], "you": [0, 1, 3, 4, 5, 6, 7, 9, 17, 18, 21, 22, 23, 24, 26, 27], "want": [0, 1, 3, 4, 5, 6, 7, 9, 21, 22, 23, 24, 27], "do": [0, 1, 3, 5, 6, 9, 14, 15, 17, 21, 22, 23, 24, 25, 26, 27], "ani": [0, 1, 3, 4, 5, 6, 8, 9, 12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27], "preprocess": [0, 1, 9], "imagin": [0, 24], "one": [0, 1, 2, 5, 6, 9, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 26, 27], "file": [0, 6, 9, 22, 26, 27], "repres": [0, 1, 6, 7, 9, 15, 17, 19, 20, 21, 22, 24, 25, 26], "cat": 0, "user1": [0, 9], "json": [0, 26], "x": [0, 9, 14, 15, 20, 22, 24, 26, 27], "0": [0, 1, 4, 5, 6, 8, 9, 12, 13, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27], "1": [0, 1, 4, 5, 6, 9, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27], "y": [0, 9, 20, 22, 24, 26, 27], "load": [0, 1, 5, 6, 7, 9, 14, 22, 26], "case": [0, 1, 2, 4, 5, 9, 12, 15, 17, 21, 22, 23, 24, 27], "follow": [0, 1, 2, 3, 4, 16, 17, 20, 22, 24, 26, 27], "def": [0, 9, 12, 22, 27], "user_id": [0, 8, 9], "open": [0, 2, 27], "format": [0, 4, 6, 9, 15, 20, 21, 22, 24, 25, 26, 27], "r": [0, 14, 24], "featur": [0, 2, 4, 6, 9, 17, 20, 23, 26, 27], "np": [0, 1, 9, 17, 21, 24], "arrai": [0, 9, 15, 17, 20, 21, 24], "label": [0, 9, 17, 22], "ey": 0, "2": [0, 1, 6, 9, 12, 14, 15, 17, 20, 21, 24, 26, 27], "hot": [0, 17], "encod": [0, 17, 24], "raw_data": [0, 9, 22, 26], "abov": [0, 1, 9, 23], "entri": [0, 9, 15, 21], "argument": [0, 6, 9, 17, 22, 24, 25], "second": [0, 1, 5, 6, 9, 20, 22, 24, 26], "These": [0, 6, 9, 10, 15, 21, 24, 26, 27], "must": [0, 4, 5, 6, 9, 12, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26], "match": [0, 17, 24], "metric": [0, 1, 2, 4, 5, 6, 8, 9, 14, 17, 18, 20, 22, 23, 26, 27], "expect": [0, 2, 4, 9, 15, 22, 24, 25, 27], "order": [0, 1, 4, 6, 9, 17, 19, 20, 21, 24, 26], "other": [0, 2, 6, 7, 9, 10, 13, 14, 17, 20, 22, 23, 24, 27], "deep": [0, 1, 3, 9, 14, 22, 27], "framework": [0, 1, 3, 5, 9, 14, 17, 22, 27], "describ": [0, 4, 5, 6, 20, 22, 24], "correspond": [0, 5, 9, 19, 20, 24, 26, 27], "should": [0, 1, 4, 5, 6, 7, 9, 10, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27], "callabl": [0, 5, 6, 9, 13, 22, 24, 25], "sampl": [0, 2, 4, 5, 15, 22, 24, 25, 26], "identifi": [0, 9, 20, 21, 25, 26], "default": [0, 1, 3, 4, 5, 6, 9, 10, 12, 18, 20, 21, 22, 23, 24, 26], "factori": [0, 8, 9, 16], "get_user_sampl": [0, 9], "minim": [0, 5, 9, 22, 24], "reus": [0, 9, 16], "uniform": [0, 4, 9, 21], "sampler": [0, 9], "maxim": [0, 2, 9, 22], "instanc": [0, 1, 5, 6, 9, 14, 17, 21, 22, 24], "same": [0, 1, 4, 5, 6, 7, 9, 15, 17, 19, 20, 21, 22, 23, 24, 25], "see": [0, 1, 2, 3, 4, 6, 8, 9, 10, 12, 14, 15, 20, 24, 26, 27], "minimizereuseusersampl": [0, 9], "might": [0, 6, 9, 13, 21, 22, 24, 27], "seem": 0, "obviou": 0, "choic": [0, 1, 6], "becaus": [0, 1, 6, 9, 16, 17, 20, 22, 24, 27], "live": [0, 4, 5, 9, 23, 24], "deploy": [0, 2], "select": [0, 9, 20, 26, 27], "mai": [0, 4, 5, 6, 9, 15, 17, 18, 19, 24, 25, 26, 27], "fact": 0, "behavior": [0, 9], "user2": [0, 9], "user3": 0, "minimize_reus": [0, 9], "_": [0, 9], "rang": [0, 1, 9, 13, 15, 17, 20, 21, 22, 23, 24, 26], "5": [0, 1, 9, 17, 20, 24], "print": 0, "when": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27], "creat": [0, 9, 14, 16, 17, 18, 21, 22, 23, 24, 25, 27], "through": [0, 6, 9, 12, 20, 23, 24, 27], "inform": [0, 4, 6, 8, 9, 18, 22, 23, 24, 27], "pleas": [0, 2], "below": [0, 1, 22, 23, 24, 27], "pytorch": [0, 2, 3, 9, 10, 12, 16, 27], "binari": [0, 6, 20, 24, 26], "classif": [0, 20, 26], "10": [0, 4, 9, 22, 23, 24, 27], "entropi": [0, 23, 26], "accuraci": [0, 6, 20, 21, 22, 23], "note": [0, 5, 6, 9, 15, 17, 20, 21, 22, 24, 25, 26], "torch": [0, 1, 9, 10, 17, 22, 25, 27], "pytorchmodel": [0, 8, 9, 14, 22], "class": [0, 2, 4, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27], "testmodel": 0, "nn": [0, 22], "modul": [0, 2, 9, 14, 16, 18, 22, 27], "__init__": [0, 9, 12, 27], "self": [0, 4, 6, 9, 12, 14, 20, 21, 22, 26, 27], "super": 0, "linear": [0, 9, 11, 20, 23, 26], "activ": [0, 9, 27], "sigmoid": [0, 20], "forward": [0, 5, 24, 27], "pylint": [0, 14, 24, 26], "disabl": [0, 4, 6, 14, 17, 24, 26], "eval": [0, 9, 22], "fals": [0, 1, 6, 17, 18, 20, 21, 22, 23, 24, 26], "els": [0, 20, 22, 26, 27], "bce_loss": 0, "bceloss": 0, "reduct": [0, 4, 20, 22, 26], "floattensor": 0, "loss_valu": [0, 22], "true": [0, 5, 6, 14, 17, 20, 21, 22, 24, 26], "num_sampl": [0, 22], "len": [0, 9, 22, 24], "correct": [0, 21, 24, 26, 27], "float": [0, 4, 5, 6, 9, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26], "weight": [0, 2, 5, 6, 9, 15, 17, 21, 22, 23, 25, 26], "pytorch_model": [0, 22], "local_optimizer_cr": [0, 22], "central_optim": [0, 22], "lr": 0, "To": [0, 1, 3, 5, 9, 24, 27], "federatedaverag": [0, 5], "federated_averag": [0, 5], "proce": 0, "evalu": [0, 2, 4, 5, 6, 8, 9, 12, 15, 20, 21, 22, 23, 26], "algorithm_param": [0, 5, 8], "nnalgorithmparam": [0, 5], "central_num_iter": [0, 5], "central_num_epoch": 0, "evaluation_frequ": [0, 1, 5, 6], "train_cohort_s": [0, 5], "cohort_s": [0, 8, 9, 24, 26], "val_cohort_s": [0, 5, 26], "model_train_param": [0, 5, 8], "nntrainhyperparam": [0, 2, 12, 14, 22], "local_num_epoch": [0, 12], "local_learning_r": [0, 12], "local_batch_s": [0, 1, 12], "none": [0, 4, 5, 6, 7, 8, 9, 12, 14, 17, 18, 20, 21, 22, 24, 25, 26, 27], "model_eval_param": [0, 5, 6, 8], "nnevalhyperparam": [0, 2, 12, 22], "backend": [0, 2, 5, 17, 24, 26], "appli": [0, 4, 12, 19, 22, 24, 25, 26], "mechan": [0, 2, 4, 9, 14, 19, 23], "postprocessor": [0, 2, 4, 8, 12, 24], "simulatedbackend": [0, 2, 4, 5], "training_data": [0, 4], "val_data": [0, 4], "val_dataset": [0, 9], "callback": [0, 2, 5, 7, 12, 18, 26], "variou": [0, 6, 9, 15], "stage": [0, 6, 9, 24], "shown": [0, 27], "enabl": [0, 1, 2, 9, 17, 22, 27], "begin": [0, 6], "save": [0, 5, 6, 7, 9, 14, 22, 26], "after": [0, 5, 6, 7, 9, 15, 19, 21, 22, 23, 24, 26], "100": [0, 9, 23, 24], "cb_eval": 0, "centralevaluationcallback": [0, 1, 2, 6], "central_dataset": 0, "cb_save": 0, "aggregatemetricstodisk": [0, 2, 6], "output_path": [0, 6], "frequenc": [0, 1, 5, 6, 23], "check_existing_fil": [0, 6], "nichol": 0, "2018": [0, 24], "prior": [0, 6, 24], "therefor": [0, 19, 27], "compar": [0, 6, 8, 20, 27], "tradit": 0, "focu": 0, "straightforward": 0, "switch": [0, 1, 2, 5], "present": [0, 6, 9, 24], "gbdt": [0, 2, 3, 16, 26], "special": [0, 15], "increment": [0, 5], "grow": 0, "gbdtalgorithmhyperparam": [0, 26], "federated_gbdt": [0, 26], "gbdt_model": [0, 26], "gbdtmodelhyperparam": [0, 26], "gbdt_algorithm_param": 0, "num_tre": [0, 26], "20": [0, 1, 5, 9], "version": [0, 3, 17, 24, 27], "gbdtmodelclassifi": [0, 26], "gbdtmodelregressor": [0, 26], "regress": [0, 5, 20, 26], "here": [0, 9, 16, 22, 27], "classifi": [0, 16, 20, 27], "num_featur": [0, 20, 26], "max_depth": [0, 20, 26], "3": [0, 1, 5, 6, 9, 15, 17, 19, 21, 23, 24, 26, 27], "": [0, 1, 5, 6, 8, 9, 14, 17, 20, 22, 23, 24, 25, 26, 27], "necessari": [0, 1, 6, 9, 21, 24], "detail": [0, 2, 6, 9, 23, 26], "about": [0, 4, 8, 9, 23, 24, 27], "code": [0, 1, 2, 5, 6, 9, 14, 15, 23, 24], "snippet": [0, 9], "bool": [0, 5, 6, 8, 14, 17, 20, 21, 22, 23, 24, 26], "point": [0, 3, 4, 6, 9, 13, 15, 20, 22, 23], "interv": [0, 24], "equidist": [0, 26], "boundari": [0, 21], "consid": [0, 4, 6, 9, 20, 24, 25, 27], "tree_util": [0, 26], "append": [0, 6, 21, 24], "gbdt_algorithm": 0, "federatedgbdt": [0, 26], "similarli": 0, "good": [0, 3, 5, 9, 23, 27], "simpler": [0, 15], "focus": 0, "like": [0, 6, 9, 14, 20, 22, 23, 24, 25, 27], "extend": [0, 5, 14], "If": [0, 1, 3, 4, 5, 6, 9, 12, 13, 15, 17, 18, 20, 21, 22, 24, 26, 27], "requir": [0, 1, 4, 5, 6, 8, 9, 14, 15, 20, 22, 24, 26, 27], "scaffold": [0, 14], "modifi": [0, 20, 22, 26, 27], "e": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27], "g": [0, 2, 4, 5, 6, 7, 8, 9, 12, 14, 15, 17, 18, 21, 22, 23, 24, 25, 26, 27], "regular": [0, 4, 9, 26, 27], "term": [0, 5, 14, 19, 25], "fedprox": [0, 14], "loop": [0, 5, 6], "wai": [0, 1, 4, 6, 9, 14, 15, 21, 23, 24], "final": [0, 5, 6, 9, 13, 20, 24, 26, 27], "why": [0, 9, 23, 27], "privat": [0, 4, 5, 14, 24], "simpli": [0, 1, 5, 9, 21], "pfl": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "up": [1, 2, 4, 5, 7, 8, 9, 15, 17, 22, 24, 25], "correctli": [1, 9, 22], "chapter": 1, "help": [1, 20], "support": [1, 6, 12, 14, 17, 21, 22, 23, 24, 26, 27], "setup": [1, 2, 3, 17, 22], "effici": [1, 2, 22, 24], "depend": [1, 2, 4, 14, 20, 25, 26], "what": [1, 4, 9, 21, 24, 27], "hardwar": 1, "your": [1, 2, 3, 4, 5, 6, 7, 9, 22, 27], "hyperparamet": [1, 2, 5, 6, 16, 18, 23, 24, 26], "shard": 1, "alloc": [1, 24], "figur": 1, "visual": [1, 6, 23], "work": [1, 4, 9, 14, 15, 17, 18, 22, 24, 27], "feder": [1, 4, 12, 14, 20, 22, 24, 26], "learn": [1, 3, 9, 12, 14, 22, 24, 26, 27], "ha": [1, 2, 4, 5, 6, 9, 12, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27], "implement": [1, 4, 5, 6, 7, 9, 14, 15, 16, 19, 22, 23, 24, 25, 26, 27], "primit": [1, 14, 27], "further": [1, 9, 20, 24, 26], "instal": [1, 2, 17, 27], "faster": [1, 9, 15, 17, 22, 24], "cumbersom": 1, "py": [1, 14, 24, 27], "federatedalgorithm": [1, 4, 5, 8], "export": 1, "pfl_worker_address": [1, 10], "localhost": 1, "8000": 1, "8001": 1, "pfl_worker_rank": [1, 10], "python": [1, 6, 15, 20, 21, 24, 26, 27], "horovodrun": [1, 17], "gloo": 1, "h": 1, "python3": [1, 27], "notic": [1, 9, 22, 24], "don": [1, 4, 6, 16, 17, 20, 21, 22, 27], "t": [1, 4, 5, 6, 8, 9, 14, 16, 17, 20, 21, 22, 24, 27], "need": [1, 4, 6, 8, 9, 14, 21, 22, 23, 24, 27], "configur": [1, 8, 12, 14, 22, 24], "script": [1, 17], "automat": [1, 9, 24, 27], "adjust": [1, 4, 9, 24], "websit": 1, "properli": [1, 6], "repositori": [1, 3, 27], "git": [1, 3, 27], "clone": [1, 3, 12, 17, 22, 27], "http": [1, 2, 3, 5, 6, 9, 14, 17, 19, 20, 24, 26, 27], "github": [1, 2, 3, 14, 24, 27], "com": [1, 2, 3, 14, 24, 27], "appl": [1, 2, 3, 27], "research": [1, 2, 3, 14, 24, 27], "arg1": 1, "arg2": 1, "non": [1, 4, 5, 6, 9, 23, 26], "linux": 1, "build_script": 1, "install_horovod": 1, "sh": 1, "locat": [1, 6, 18, 27], "scale": [1, 4, 5, 9, 17, 22, 24], "even": [1, 5, 9, 21, 24, 27], "machine_train": 1, "favour": 1, "resourc": 1, "fit": [1, 9], "onto": 1, "8": [1, 5, 9, 21], "common": [1, 2, 9, 14, 16, 22], "cloud": 1, "avoid": [1, 24, 26], "mode": [1, 6, 9], "invok": [1, 6, 7], "command": [1, 6, 27], "parallel": [1, 4, 9, 27], "advanc": [1, 6], "try": [1, 2, 9, 26, 27], "built": [1, 6, 21, 27], "memori": [1, 9, 12, 22, 24], "done": [1, 4, 5, 6, 8, 9, 17, 22], "nvidia": 1, "smi": 1, "certain": [1, 12, 14, 23, 24, 27], "flag": 1, "specifi": [1, 3, 4, 6, 8, 9, 10, 15, 17, 20, 21, 22, 23, 24, 26, 27], "model": [1, 2, 4, 5, 6, 8, 9, 10, 12, 14, 15, 20, 23, 24, 25, 27], "share": [1, 9], "compat": [1, 3, 4, 9, 17, 27], "both": [1, 2, 5, 9, 26, 27], "either": [1, 4, 5, 15, 18, 20, 22, 24, 26], "per": [1, 6, 9, 14, 20, 21, 22, 23], "util": [1, 2, 9, 14, 16], "overhead": [1, 9], "caus": [1, 5, 22, 24, 27], "therebi": [1, 9], "bring": 1, "addit": [1, 2, 4, 5, 6, 9, 12, 14, 17, 21, 22, 23, 24, 25, 27], "speedup": [1, 17], "gpu_train": 1, "mani": [1, 5, 6, 9, 15, 16, 22, 23, 24], "32": 1, "among": [1, 9, 17], "4": [1, 9, 21], "keep": [1, 2, 6, 9, 15, 27], "mind": 1, "cpu": [1, 10], "core": 1, "prepar": [1, 2, 27], "data": [1, 2, 5, 6, 8, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27], "tffederateddataset": [1, 9], "pytorchfederateddataset": [1, 9], "stop": [1, 6, 12, 15, 26], "stopwatchcallback": [1, 2, 6], "measur": [1, 5, 6, 9, 17, 19], "speed": [1, 8, 22, 24], "vari": [1, 9, 24], "sinc": [1, 4, 6, 9, 14, 15, 17, 19, 20, 21, 23, 24, 25, 27], "alreadi": [1, 6, 9, 15, 20], "larger": [1, 12, 15, 23, 24, 27], "benefit": 1, "from": [1, 2, 4, 5, 6, 7, 9, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27], "increas": [1, 4, 5, 9, 12, 13, 20, 22, 24, 26], "arbitrari": 1, "individu": [1, 4, 5, 9, 24, 25], "offici": [1, 3], "availab": 1, "usual": [1, 5, 6, 7, 9, 24, 25], "taper": 1, "off": [1, 27], "ip": [1, 18], "192": 1, "168": 1, "let": [1, 6, 7], "worker": [1, 4, 6, 9, 17, 24, 27], "16": 1, "concept": 1, "There": [1, 6, 23, 27], "environ": [1, 2, 3, 17], "variabl": [1, 2, 4, 6, 17, 20, 21, 22, 24], "know": [1, 23, 24], "intend": [1, 2], "comma": 1, "separ": [1, 4, 20, 22, 24, 27], "host": [1, 6], "port": [1, 6], "rank": [1, 17], "current": [1, 2, 4, 5, 6, 8, 9, 12, 14, 17, 18, 20, 22, 23, 24, 25, 26, 27], "assign": [1, 4, 6, 9, 17, 20, 22, 26], "address": [1, 18], "previou": [1, 5, 6, 14, 20, 22, 24], "than": [1, 4, 6, 9, 10, 12, 14, 15, 17, 20, 21, 22, 23, 24, 26], "8002": 1, "8003": 1, "result": [1, 2, 4, 5, 9, 15, 17, 20, 21, 22, 24, 25, 26], "n": [1, 6, 9, 15, 20, 21, 24, 27], "access": [1, 3, 12], "amount": [1, 24], "fl": [1, 2, 9], "specif": [1, 4, 5, 9, 14, 19, 22, 26, 27], "public": [1, 14, 16, 27], "execut": [1, 4, 6, 18, 23, 27], "essenti": 1, "assess": 1, "global": [1, 5, 17, 22], "three": [1, 24], "thing": [1, 9, 27], "minimis": 1, "lower": [1, 5, 6, 13, 19, 20, 21, 22, 23, 24], "batch": [1, 9, 12, 22], "commonli": [1, 17, 25], "modelhyperparam": [1, 2, 5, 6, 8, 12, 14, 22], "significantli": [1, 24], "left": [1, 9, 15, 20, 26], "panel": 1, "show": [1, 23], "lm": 1, "right": [1, 6, 9, 20, 26], "guidelin": [1, 27], "structur": [1, 2, 4, 5, 9, 14, 21, 24], "well": [1, 5, 9, 17, 19, 23, 25], "ram": 1, "fastest": 1, "disk": [1, 5, 6, 7, 9, 14, 22, 26], "lazi": [1, 9], "fashion": [1, 9], "heavi": 1, "recommend": [1, 24], "repo": [2, 27], "develop": [2, 3, 5, 10], "privaci": [2, 4, 14, 16, 22, 23, 25], "preserv": 2, "dissemin": 2, "third": 2, "parti": 2, "tremend": 2, "actual": [2, 4, 5, 9, 21, 22, 25, 26], "hope": 2, "promot": 2, "effect": [2, 4, 5, 9, 12, 22, 25], "quickli": 2, "out": [2, 5, 9, 15, 24], "exist": [2, 6, 9, 15, 17, 20, 21, 23, 24, 26, 27], "fast": [2, 9, 10], "process": [2, 4, 5, 6, 9, 17, 18, 20, 23, 24], "gpu": [2, 9, 17], "machin": [2, 6, 9, 17], "flexibl": 2, "express": [2, 19], "idea": 2, "api": [2, 6, 17, 22, 27], "algorithm": [2, 4, 6, 8, 9, 12, 14, 17, 18, 20, 22, 24, 27], "scalabl": 2, "larg": [2, 9, 12, 24], "experi": [2, 6, 22, 23, 24], "art": 2, "tensorflow": [2, 3, 6, 9, 10, 16, 25], "great": 2, "group": [2, 9, 27], "compani": 2, "unifi": [2, 14], "been": [2, 17, 20, 22, 23, 24, 26], "vet": 2, "made": [2, 6, 18, 24, 27], "type": [2, 4, 5, 6, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "remain": [2, 5, 9, 15, 24, 25], "fix": [2, 4, 9, 15, 21, 22], "seamless": 2, "tight": [2, 24], "integr": [2, 18, 20, 27], "invit": 2, "contribut": [2, 3, 4, 5, 9, 24], "cross": [2, 9, 13, 23, 26], "devic": [2, 4, 5, 7, 9, 10, 12, 21, 22, 24, 26], "defin": [2, 4, 5, 6, 9, 12, 17, 18, 20, 22, 23, 24, 26], "incorpor": [2, 9], "quickstart": 2, "horovod": [2, 10, 17], "nativ": [2, 10, 17, 27], "tf": [2, 3, 6, 9, 10, 14, 17, 22, 27], "librari": [2, 10], "pypi": [2, 24, 27], "sourc": [2, 4, 9, 23, 27], "compil": [2, 22], "test": [2, 3, 24, 26], "packag": [2, 17, 24], "pull": 2, "request": [2, 8, 23], "abstract": [2, 4, 6, 7, 9, 12, 14, 15, 17, 18, 20, 21, 25, 26], "base": [2, 4, 6, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27], "meta": [2, 9], "personalis": 2, "gmm": 2, "sumaggreg": [2, 4], "transport": 2, "datatransport": [2, 4], "float32datatransport": [2, 4], "bfloat16datatransport": [2, 4], "weightingstrategi": [2, 4], "weightbyus": [2, 4], "weightbydatapoint": [2, 4], "trainingprocesscallback": [2, 5, 6, 12, 18], "restoretrainingcallback": [2, 6], "centralevaluationwithemacallback": [2, 6], "convergencecallback": [2, 6], "earlystoppingcallback": [2, 6], "tensorboardcallback": [2, 6, 23], "checkpointpolici": [2, 6], "iterationfrequencycheckpointpolici": [2, 6], "metricimprovementcheckpointpolici": [2, 6], "policybasedmodelcheckpointingcallback": [2, 6], "modelcheckpointingcallback": [2, 6], "profilercallback": [2, 6], "trackbestoverallmetr": [2, 6], "wandbcallback": [2, 6], "checkpoint": [2, 5, 6, 7, 22], "localdiskcheckpoint": [2, 6, 7], "saveabl": [2, 6, 7], "context": [2, 5, 9, 17, 18, 23, 25], "localresultmetadata": [2, 8, 22], "usercontext": [2, 4, 8, 23, 24], "centralcontext": [2, 4, 5, 8, 23, 24, 26], "partit": [2, 21, 26], "except": [2, 9, 26], "pflerror": [2, 11], "usernotfounderror": [2, 11], "checkpointnotfounderror": [2, 11], "matrixfactorizationerror": [2, 11], "parametertyp": [2, 12], "hyperparam": [2, 5, 12, 24], "get_param_valu": [2, 12], "algorithmhyperparam": [2, 5, 8, 12], "stringmetricnam": [2, 5, 6, 21, 22], "metricnam": [2, 6, 21, 23], "trainmetricnam": [2, 21, 23, 26], "composablemetricnam": [2, 21], "metricnamepostfix": [2, 21], "skipseri": [2, 21], "metricvalu": [2, 17, 21, 22], "user_averag": [2, 21, 22], "get_overall_valu": [2, 21], "histogram": [2, 6, 21, 23], "metricszero": [2, 21], "mixtur": [2, 9, 16], "exponenti": [2, 6, 13, 15, 20, 26], "move": [2, 6, 9], "averag": [2, 4, 6, 14, 17, 21, 23, 24, 25], "summarymetr": [2, 23], "account": [2, 27], "joint": 2, "approxim": [2, 17, 19, 22], "statist": [2, 4, 5, 6, 8, 14, 20, 22, 23, 24, 26, 27], "tensorlik": [2, 25], "trainingstatist": [2, 4, 5, 22, 23, 24, 25, 27], "weightedstatist": [2, 4, 25], "mappedvectorstatist": [2, 5, 22, 24, 25, 26], "elementweightedmappedvectorstatist": [2, 25], "gradient": [2, 4, 12, 14, 17, 20, 22, 24], "boost": [2, 20], "decis": [2, 20], "tree": [2, 3, 16, 17, 27], "intern": [2, 5, 13, 14, 15, 17, 18, 19, 20, 22, 27], "bisect": [2, 16], "bridg": [2, 16, 27], "op": [2, 14, 16, 27], "platform": [2, 5, 6, 16], "index": [2, 6, 9, 20, 26], "search": [2, 13, 14, 20, 24], "page": [2, 24], "By": [3, 12, 26], "latest": [3, 20, 26, 27], "plan": [3, 27], "extra": [3, 20, 22, 27], "bracket": 3, "kera": [3, 9, 17, 22], "pip": 3, "go": [3, 5, 22, 27], "cd": 3, "instruct": 3, "readm": 3, "md": [3, 27], "manag": [3, 17, 27], "poetri": [3, 27], "gather_result": 4, "training_algorithm": 4, "central_context": [4, 5, 9, 23, 24, 26], "them": [4, 5, 18, 24, 25], "block": [4, 17], "subclass": [4, 5, 6, 9, 12, 15, 21, 22, 25], "refin": 4, "thei": [4, 5, 6, 9, 15, 21, 22, 24, 25, 26, 27], "object": [4, 5, 6, 7, 9, 17, 21, 22, 23, 24, 25, 26], "tupl": [4, 5, 6, 9, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26], "option": [4, 5, 6, 7, 8, 9, 14, 17, 18, 20, 21, 22, 24, 25, 26, 27], "dictionari": [4, 6, 9, 20, 21, 22, 24, 25, 26], "async": 4, "async_gather_result": 4, "map": [4, 9, 20, 22, 24, 25, 26], "reduc": [4, 17, 20, 22, 24, 26, 27], "procedur": [4, 8, 23, 24], "infrastructur": [4, 5], "overlap": 4, "await": 4, "max_overshoot_fract": 4, "federateddatasetbas": [4, 9], "extract": [4, 12], "inject": [4, 14, 27], "local_privaci": [4, 24], "add": [4, 5, 6, 7, 9, 15, 17, 18, 20, 21, 22, 23, 24, 25, 27], "deriv": [4, 23, 24], "valid": [4, 5, 9, 10, 20, 24], "postprocess": [4, 8, 21, 22, 23, 24, 26], "sparsif": [4, 23], "compress": 4, "method": [4, 5, 6, 9, 14, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27], "overshoot": 4, "receiv": [4, 5, 9, 22], "05": 4, "p": [4, 9, 14, 24], "descript": [4, 8, 9, 20, 21, 24, 26, 27], "asynchron": [4, 9], "yield": [4, 15, 19, 21, 24], "so": [4, 5, 6, 15, 17, 22, 23, 24, 26], "synchronis": [4, 17], "line": [4, 14, 24, 26], "gather": [4, 5, 20], "inherit": [4, 9], "behaviour": [4, 5, 9, 23, 24], "strategi": [4, 9, 17, 24], "val": [4, 5, 6, 9, 21, 26], "categori": [4, 23], "came": 4, "explanatori": 4, "total": [4, 5, 6, 17, 21, 23, 24, 25, 26], "denomin": 4, "potenti": [4, 5], "stat": [4, 6, 23, 24, 25], "accumul": [4, 5, 6, 12, 17, 21, 23, 26], "user_stat": 4, "typevar": [4, 5, 6, 8, 12, 14, 15, 17, 22, 23, 24, 25, 26], "statisticstyp": [4, 5, 22, 23, 25], "side": [4, 5, 8, 13, 23, 24, 26], "mean": [4, 5, 6, 9, 12, 15, 17, 20, 22, 24, 25, 26, 27], "shape": [4, 9, 15, 17, 20, 25], "worker_reduc": 4, "aggregated_worker_stat": 4, "aggregated_worker_metr": 4, "ignor": [4, 21, 23], "concret": [4, 14, 27], "multi": [4, 9, 14, 17, 27], "worker_reduce_metrics_onli": 4, "happen": [4, 5, 6, 9, 24], "data_transport": 4, "postprocess_one_us": [4, 8, 23, 24], "user_context": [4, 23, 24], "convert": [4, 15, 17, 19, 20, 21, 24, 25], "origin": [4, 9, 17, 21, 22, 24, 25, 27], "eventu": [4, 6], "new": [4, 5, 6, 9, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27], "float32": [4, 17, 21, 22, 24, 25], "legaci": 4, "bfloat16": [4, 17], "original_format": 4, "magnitud": 4, "decreas": [4, 5, 24], "less": [4, 9, 12, 19, 23, 24, 26], "philosoph": 4, "question": [4, 16, 26], "sens": [4, 5, 19, 22], "datapoint": [4, 8, 9, 20, 26], "whole": 4, "overtrain": 4, "accordingli": 4, "scheme": [4, 5], "re": [4, 6, 21, 25, 27], "accord": [4, 5, 9, 14, 24, 27], "unweight": 4, "part": [5, 6, 16, 20, 22, 25, 26, 27], "end": [5, 6, 9, 13, 22], "itself": [5, 6, 22, 27], "consist": [5, 9, 24, 25, 27], "piec": 5, "enforc": 5, "possibl": [5, 17, 19, 20, 21, 22, 24, 25], "process_aggregated_statist": [5, 8, 26], "simulate_one_us": [5, 8, 26], "orchestr": 5, "connect": [5, 17, 24], "pass": [5, 12, 20, 22, 23, 24, 26, 27], "real": [5, 9, 15, 24, 26], "twice": 5, "constructor": [5, 9, 22, 24], "As": [5, 6, 9, 20, 22, 24], "rule": [5, 14, 16, 24, 27], "thumb": 5, "suitabl": [5, 24], "dir_path": [5, 7, 9, 22, 26], "abl": [5, 7, 9, 20, 21, 22, 24, 27], "interpret": [5, 7, 17, 22], "restor": [5, 6, 7, 9, 22], "str": [5, 6, 7, 8, 9, 17, 18, 20, 21, 22, 24, 25, 26], "directori": [5, 6, 7, 18, 22, 27], "previous": [5, 7, 9, 22, 23], "path": [5, 6, 7, 9, 11, 14, 18, 20, 22, 26, 27], "root": [5, 6, 7, 13, 20, 22, 26, 27], "aggregate_metr": [5, 6, 12, 23, 24, 26], "get_next_central_context": 5, "algorithmhyperparamstyp": [5, 8], "modelhyperparamstyp": [5, 8, 22], "modeltyp": [5, 6, 22], "were": [5, 6, 24], "process_aggregated_statistics_from_all_context": 5, "stats_context_pair": 5, "overrid": [5, 6, 9, 10, 15, 23, 24, 26], "produc": [5, 6, 15, 22, 25, 26], "henc": [5, 22, 24], "pair": [5, 15, 17, 21], "user_dataset": [5, 9, 14, 22, 26], "abstractdatasettyp": [5, 6, 14, 22, 26], "abstractdataset": [5, 6, 9, 14, 22, 26], "contain": [5, 9, 14, 15, 17, 22, 23, 24, 26, 27], "param": [5, 20, 24, 26], "send_metrics_to_platform": 5, "hook": [5, 6, 12], "complementari": [5, 15], "action": [5, 23], "involv": [5, 12], "int": [5, 6, 8, 9, 12, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26], "federatednnalgorithm": [5, 9, 12], "postfix": [5, 21], "personalizednnalgorithmparam": 5, "val_split_fract": 5, "min_train_s": [5, 9], "min_val_s": [5, 9], "config": [5, 6, 12], "person": [5, 9], "valu": [5, 6, 7, 9, 10, 12, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26], "80": 5, "minimum": [5, 9, 14, 20, 23, 24, 26, 27], "personalizednnalgorithm": 5, "unlik": [5, 9, 15, 17, 21, 27], "whether": [5, 6, 8, 17, 20, 21, 22, 24, 26], "statefulmodeltyp": 5, "statefulmodel": [5, 6, 14, 22], "introduc": [5, 22, 24], "li": [5, 14], "heterogen": [5, 9, 14, 24], "arxiv": [5, 9, 14, 19, 24], "org": [5, 9, 14, 17, 19, 24, 27], "pdf": [5, 9, 14, 24], "1812": [5, 14], "06127": [5, 14], "proxim": [5, 14], "dure": [5, 6, 7, 8, 9, 12, 17, 20, 22, 26], "soft": 5, "constraint": [5, 24, 27], "diverg": [5, 19, 22, 24], "too": [5, 9, 14, 17, 21, 24, 26], "far": 5, "fedproxparam": 5, "mu": [5, 14], "adaptmuonmetriccallback": 5, "metric_nam": [5, 6, 21, 23], "adapt_frequ": 5, "initial_valu": [5, 12], "step_siz": 5, "decrease_mu_after_consecutive_improv": 5, "scalar": [5, 15, 26], "appendix": 5, "name": [5, 6, 17, 18, 21, 22, 23, 24, 27], "better": [5, 6, 21, 22], "suggest": [5, 24, 27], "homogen": 5, "calibr": [5, 24], "decreaas": 5, "metric_valu": [5, 21, 22], "row": 5, "inner": [5, 12, 22, 24, 26], "after_central_iter": [5, 6, 12, 26], "central_iter": [5, 6, 12, 26], "reptil": 5, "expectation_maximization_gmm": 5, "emgmmhyperparam": 5, "compute_cohort_s": 5, "compute_new_num_compon": 5, "em": 5, "num_compon": 5, "desir": [5, 19, 24], "num_iterations_since_last_mix_up": 5, "least": [5, 6, 19, 27], "greater": [5, 19, 20, 22, 24, 26], "greatest": 5, "stai": [5, 6], "constant": 5, "easi": [5, 27], "make_compute_new_num_compon": 5, "num_initial_iter": 5, "mix_up_interv": 5, "max_num_compon": 5, "step_compon": 5, "fraction_new_compon": 5, "gmmhyperparam": [5, 22], "mix": [5, 17, 22], "settl": 5, "wait": [5, 6, 17, 20, 27], "until": [5, 6, 13, 17, 20], "max": [5, 9], "down": [5, 24], "suppli": 5, "zero": [5, 6, 17, 21, 26], "expectationmaximizationgmm": 5, "gaussianmixturemodel": [5, 22], "suffici": [5, 23, 24], "perturb": 5, "algorithm_util": 5, "run_train_ev": 5, "incompat": 5, "on_train_begin": [6, 26], "boolean": [6, 20, 22, 24, 26], "signal": [6, 20, 24, 26], "interrupt": [6, 26], "earli": [6, 22, 26], "converg": [6, 26], "criteria": [6, 26], "on_train_end": 6, "checkpoint_dir": 6, "checkpoint_frequ": 6, "init_checkpointer_fn": 6, "common_typ": [6, 7], "fault": [6, 7], "toler": [6, 7], "fail": [6, 27], "restart": 6, "recent": [6, 26], "again": [6, 9], "Be": 6, "care": 6, "ve": 6, "interfac": [6, 7, 9, 14, 22, 23, 24, 27], "successfulli": [6, 27], "last": [6, 17], "attempt": 6, "resum": [6, 7], "dir": [6, 9, 27], "distribute_evalu": 6, "format_fn": 6, "held": [6, 22], "noth": [6, 15, 23, 24], "sole": [6, 9], "plug": 6, "doesn": [6, 9, 17], "independ": [6, 24], "longer": 6, "string": [6, 9, 18, 21, 22, 24, 25, 26], "represent": [6, 9, 15, 17, 21, 24, 25], "lambda": [6, 9, 22, 24, 25, 26], "f": [6, 24], "otherwis": [6, 9, 12, 15, 17, 21, 22, 26], "conflict": 6, "evaluatablemodeltyp": 6, "evaluatablemodel": [6, 22], "ema": [6, 17, 22], "centralexponentialmovingaverag": [6, 22], "hold": [6, 9, 15, 22, 24, 26], "eachoth": 6, "patienc": 6, "performance_threshold": 6, "performance_is_bett": 6, "track": [6, 17, 23, 24], "becom": [6, 17], "threshold": [6, 20, 26], "afterward": 6, "termin": [6, 14, 18], "wa": [6, 9, 17, 21, 22, 23, 24, 26], "achiev": [6, 26], "reach": [6, 9, 26], "indic": [6, 9, 17, 19, 21, 22, 24, 26], "normal": [6, 9, 15, 17], "oper": [6, 8, 17, 21, 22, 23, 24, 27], "gt": 6, "error": [6, 9, 11, 15, 20, 24, 26], "lt": 6, "best": [6, 26, 27], "consecut": [6, 9], "improv": [6, 19, 20, 24, 26, 27], "would": [6, 9, 15, 22, 24, 27], "decimal_point": 6, "measure_round_in_minut": 6, "record": 6, "wall": 6, "clock": 6, "spent": 6, "decim": 6, "minut": 6, "veri": [6, 9, 12, 17, 19], "slow": [6, 17], "stopwatch": 6, "log_dir": 6, "write_weight": 6, "write_graph": 6, "tensorboard_port": 6, "log": [6, 16, 21, 24, 26], "event": 6, "tensorboard": 6, "graph": [6, 14, 17], "launch": 6, "logdir": 6, "tfmodel": [6, 14, 22], "now": [6, 9, 17], "layer": [6, 20, 25, 26], "integ": [6, 9, 15, 17, 24, 26], "control": [6, 9, 14, 24, 26], "should_checkpoint_now": 6, "decid": [6, 7, 20, 27], "should_checkpoint_at_end": 6, "polici": 6, "posit": [6, 24, 27], "threshold_valu": 6, "versu": 6, "whose": [6, 13, 17, 20, 24], "predic": 6, "lh": 6, "rh": 6, "precis": [6, 15, 17, 22], "model_checkpoint_dir": 6, "checkpoint_polici": 6, "bolt": 6, "artifact_dir": 6, "overwrit": [6, 9], "saveeabl": 6, "warmup_iter": 6, "dir_nam": 6, "profil": 6, "cprofil": 6, "program": [6, 17], "togeth": [6, 25, 27], "artifact": 6, "read": [6, 8], "analys": [6, 24], "pstat": 6, "filenam": 6, "sort_stat": 6, "print_stat": 6, "restrict": [6, 14], "altern": 6, "snakeviz": 6, "graphic": 6, "browser": 6, "durat": 6, "cover": 6, "commenc": 6, "6": [6, 9, 14, 24, 26], "write": [6, 15], "csv": 6, "written": [6, 9, 24], "skip": 6, "throw": 6, "lower_is_better_metric_nam": 6, "higher_is_better_metric_nam": 6, "assert_metrics_found_within_frequ": 6, "25": [6, 9], "found": [6, 13], "assert": [6, 21, 25], "nth": [6, 8], "whenev": 6, "encount": 6, "lowest": [6, 14, 20], "seen": 6, "histori": [6, 27], "precaut": 6, "referenc": 6, "within": 6, "misspel": 6, "put": [6, 25, 27], "notifi": [6, 27], "wandb_project_id": 6, "wandb_experiment_nam": 6, "wandb_config": 6, "wandb_kwarg": 6, "bias": 6, "dashboard": [6, 18], "seek": 6, "wandb": 6, "ai": 6, "doc": [6, 17, 27], "project": [6, 24], "uncategor": 6, "short": 6, "displai": [6, 18, 24], "word": [6, 9, 24], "argpars": 6, "tag": 6, "keyword": [6, 9, 17, 22, 25], "arg": [6, 14, 17, 20, 25], "init": 6, "ref": 6, "submit": [6, 27], "enum": 7, "pool": 7, "divid": [7, 25], "mediat": 7, "creator": 7, "caller": 7, "crash": 7, "set_checkpoint": 7, "intermedi": [7, 24], "demand": 7, "schedul": [7, 22], "num_step": [8, 13, 17], "do_multiple_epochs_of": [8, 22], "taken": [8, 9], "num_datapoint": 8, "seed": [8, 9, 17, 24], "expos": 8, "didn": 8, "fine": [8, 9, 22], "belong": [8, 9, 27], "current_central_iter": 8, "do_evalu": 8, "postprocess_serv": [8, 23, 24], "consider": 8, "expens": 8, "adopt": 8, "sporad": 8, "target": [8, 9, 17, 20, 26], "hyper": 8, "properti": [8, 9, 12, 15, 17, 18, 21, 22, 23, 24, 25, 26], "state_descript": 8, "disjoint": [9, 24], "thrown": 9, "length": [9, 17, 21, 22, 24], "left_dataset": 9, "right_dataset": 9, "get_worker_partit": 9, "just": [9, 20, 23, 24, 27], "ident": [9, 12, 17, 27], "full": [9, 12, 15, 20], "metadata": [9, 22, 25], "train_kwarg": [9, 22], "eval_kwarg": [9, 22], "val_indic": 9, "flat": [9, 22], "tensor": [9, 10, 14, 17, 22, 24, 25, 27], "unrol": 9, "explicitli": [9, 22], "sai": 9, "dict": [9, 18, 20, 21, 22, 24, 25, 26], "retriev": [9, 22], "later": 9, "unpack": [9, 22], "todo": [9, 23], "rdar": [9, 20, 23], "115345691": 9, "meanwhil": 9, "explicit": 9, "via": [9, 23], "tune": 9, "tabulardataset": [9, 26], "compris": [9, 20, 26], "tabular": 9, "datasetsplit": 9, "train_dataset": 9, "decor": [9, 17, 21, 27], "predefin": [9, 15], "pre": 9, "determin": [9, 22, 24, 26], "tftensordataset": 9, "custom": [9, 16, 18, 21, 22], "usag": [9, 10], "pred": 9, "tfdatadataset": 9, "prefetch": 9, "big": 9, "silo": 9, "along": [9, 15, 17, 20, 26, 27], "zip": [9, 25], "from_tensor_slic": 9, "propag": 9, "Will": 9, "pytorchtensordataset": 9, "accept": [9, 27], "backward": 9, "pytorchdatadataset": 9, "dataloader_kwarg": 9, "mydataset": 9, "randn": 9, "randint": 9, "__getitem__": 9, "__len__": 9, "construct": [9, 15, 17, 22, 24], "__next__": 9, "user_data": [9, 22], "chosen": [9, 20], "break": [9, 27], "unwant": 9, "pattern": 9, "federated_dataset": 9, "get_cohort": 9, "fetch": [9, 27], "entir": [9, 12, 20, 21], "artificialfederateddataset": 9, "data_sampl": 9, "sample_dataset_len": 9, "cours": [9, 27], "yourself": 9, "func": 9, "dataset_indic": 9, "find": [9, 13, 15, 22, 24, 26, 27], "definit": [9, 24], "dataset_length": 9, "purpos": [9, 12, 21, 23, 24, 25], "ideal": 9, "close": [9, 22], "look": [9, 20, 22, 27], "get_data_sampl": 9, "poisson": 9, "draw": [9, 15], "classmethod": [9, 15, 21, 24], "from_slic": 9, "create_dataset_fn": 9, "ndarrai": [9, 15, 17, 20, 21, 24, 25], "user_id_to_weight": 9, "mimic": 9, "explan": 9, "act": [9, 14], "proxi": 9, "token": 9, "estim": [9, 24], "straggl": 9, "leav": [9, 20, 27], "from_slices_with_dirichlet_class_distribut": 9, "alpha": [9, 15, 26], "user_dataset_len_sampl": 9, "spread_distribution_after_num_fail": 9, "spread_distribution_after_fails_percentag": 9, "02": [9, 20, 23], "artifici": 9, "partition_by_dirichlet_class_distribut": 9, "throughout": 9, "uniformli": 9, "slice": [9, 17], "dimension": [9, 15, 17, 21, 24], "dimens": [9, 15, 17, 24], "user_id_dtyp": 9, "dataset_cl": 9, "dataset_kwarg": 9, "highli": 9, "encourag": 9, "anoth": [9, 15, 17, 19, 21, 22, 26], "output": [9, 13, 18, 19, 20, 23, 24], "docstr": [9, 27], "dtype": [9, 17, 21, 22, 24, 25], "int32": 9, "wrap": [9, 21, 24], "around": [9, 24], "sample_it": 9, "itertool": 9, "cycl": 9, "txt": 9, "pipelin": [9, 21, 27], "kind": 9, "io": [9, 20, 26], "read_fil": 9, "shuffl": 9, "fed": [9, 24], "from_tf_dataset": 9, "dataload": 9, "user_123": 9, "who": [9, 27], "9": [9, 23, 24, 26], "256": [9, 24], "17": 9, "affect": [9, 23, 24, 27], "outcom": [9, 24], "federateddatasetmixtur": 9, "mixture_weight": 9, "mixture_component_dataset": 9, "probabl": [9, 15, 19, 21, 24], "cluster": [9, 17], "polya": 9, "dirichlet": 9, "multinomi": 9, "component_dataset_0": 9, "x_0": 9, "y_0": 9, "x_1": [9, 24], "y_1": 9, "x_2": [9, 24], "y_2": 9, "make_user_dataset": 9, "component_dataset_1": 9, "give": [9, 24], "occurr": 9, "normalis": [9, 21], "minimizereusedatasampl": 9, "max_bound": [9, 21, 23], "maximis": 9, "space": [9, 15, 17, 20, 21, 23, 24, 25], "maximum": [9, 12, 15, 20, 22, 23, 24, 26], "dirichletdatasampl": 9, "proport": [9, 24], "categor": 9, "choos": [9, 15, 24], "replac": [9, 22, 27], "array_lik": 9, "equal": [9, 17, 20, 21, 23, 24, 26], "sample_typ": 9, "randomli": [9, 20, 24], "dai": 9, "distanc": [9, 13, 17], "being": [9, 12, 20, 23, 24, 26], "infinit": 9, "crosssilousersampl": 9, "sampling_typ": 9, "silo_to_user_id": 9, "num_silo": 9, "node": [9, 18, 20, 26], "pick": [9, 23], "7": 9, "evenli": 9, "major": [9, 17, 27], "j": [9, 24], "reddi": 9, "2003": 9, "00295": 9, "wang": [9, 24], "2007": 9, "07481": 9, "neg": [9, 26, 27], "num_class": 9, "user_num_datapoint": 9, "closer": 9, "occur": [9, 20, 24], "renorm": 9, "ensur": [9, 20, 24, 26, 27], "12": [9, 21], "92": 9, "11538462": 9, "88461538": 9, "element": [9, 15, 17, 21, 24, 25], "sometim": [9, 22, 24], "user_st": 9, "abstractuserstatestorag": 9, "storag": 9, "someth": 9, "inmemoryuserstatestorag": 9, "myalgorithm": 9, "train_one_us": 9, "initial_model_st": 9, "load_stat": [9, 14], "my": 9, "algo": 9, "save_st": [9, 14], "new_user_st": 9, "get_model_differ": [9, 22], "particularli": [9, 15], "benefici": [9, 22, 24], "load_raw_data": 9, "local_st": 9, "fed_data": 9, "simulatedaggreg": 9, "user_num_imag": 9, "clear_stat": 9, "remov": [9, 24], "simultan": [9, 24], "Not": [9, 23], "neither": 9, "box": 9, "nor": 9, "pin": [9, 27], "cach": [9, 14, 17, 22], "diskuserstatestorag": 9, "enough": 9, "acquire_lock": 9, "acquir": 9, "lock": [9, 27], "pfl_numpy_distribute_method": 10, "numpi": [10, 15, 16, 21, 25], "pfl_pytorch_devic": 10, "manual": [10, 18, 24, 27], "cuda": [10, 17], "mp": 10, "priorit": 10, "payload": 11, "algebra": 11, "matrix": [11, 14, 24], "factor": [11, 12, 14, 17, 20, 22, 24, 26], "substitut": [12, 24], "static": [12, 14, 20, 26], "permit": [12, 24], "mostli": [12, 15], "signatur": [12, 17, 22], "mycohorts": 12, "_valu": 12, "mycustomparam": 12, "dataclass": 12, "static_clon": 12, "kwarg": [12, 14, 17, 20, 22, 25], "hyperparamstyp": 12, "local_max_grad_norm": 12, "local_num_step": 12, "grad_accumulation_step": [12, 17], "epoch": [12, 14, 22], "rate": [12, 17, 22, 24, 26], "l2": [12, 24, 26], "appropri": [12, 18, 24, 26, 27], "multipli": [12, 21, 24, 25], "known": [13, 24, 27], "bisect_rang": [13, 16], "bisect_automatic_rang": [13, 16], "initial_dist": 13, "50": [13, 24], "But": 13, "area": 13, "guess": 13, "sign": [13, 15], "agnost": 14, "commonframeworkbridg": 14, "distinct": [14, 24], "anywher": [14, 27], "mention": [14, 27], "rudimentari": 14, "sgdframeworkbridg": 14, "manipul": [14, 25], "do_sgd": 14, "train_param": [14, 22], "statefulmodeltype_contra": 14, "contravari": 14, "modelhyperparamstype_contra": 14, "fedproxframeworkbridg": 14, "do_proximal_sgd": 14, "equat": [14, 24], "scaffoldframeworkbridg": 14, "karimireddi": 14, "proceed": 14, "mlr": 14, "press": 14, "v119": 14, "karimireddy20a": 14, "do_control_variate_sgd": 14, "local_c": 14, "server_c": 14, "variat": 14, "c_i": 14, "ftrlframeworkbridg": 14, "band": [14, 24], "ftrl": 14, "choquett": 14, "choo": 14, "amplifi": 14, "approach": 14, "2306": [14, 24], "08153": [14, 24], "loss_and_gradi": 14, "mask": [14, 24], "dx": 14, "problem": [14, 24], "lbfgs_direct": 14, "prev_x": 14, "prev_dx": 14, "x1": 14, "dx1": 14, "z": [14, 24, 27], "lbfg": 14, "terminate_fn": 14, "criterion": 14, "frameworkbridgefactori": 14, "fedavg": 14, "etc": [14, 22], "numpycommonbridg": 14, "pytorchcommonbridg": 14, "primal": [14, 24], "googl": [14, 24, 27], "blob": [14, 24], "master": [14, 24], "multi_epoch_dp_matrix_factor": [14, 24], "multiple_particip": [14, 24], "primal_optim": [14, 24], "pytorchftrlbridg": 14, "pytorchfedproxbridg": 14, "pytorchsgdbridg": 14, "get_or_make_tf_funct": 14, "fn": [14, 17, 25], "lookup": 14, "One": [14, 17, 22], "uuid": 14, "tfcommonbridg": 14, "tfftrlbridg": 14, "tffedproxbridg": 14, "tf2": 14, "tfsgdbridg": 14, "helper": 15, "probabilist": 15, "famili": 15, "any_sum": [15, 16], "any_product": [15, 16], "product": 15, "parameteris": [15, 19], "observ": 15, "point_shap": 15, "empti": [15, 20, 24], "densiti": [15, 22], "logfloat": 15, "log_dens": 15, "drawn": 15, "trainabl": 15, "multivari": 15, "varianc": [15, 22, 24], "diagonal_gaussian": 15, "diagonalgaussian": [15, 22], "offset": [15, 20], "highest": [15, 20, 26], "imposs": 15, "covari": [15, 22], "eigenvector": 15, "co": 15, "deviat": [15, 17, 23, 24, 27], "diagonal_standard_gaussian": 15, "num_dimens": [15, 22, 24], "unit": [15, 17, 24, 27], "logarithm": 15, "log_float": 15, "natur": [15, 24], "math": 15, "inf": [15, 20, 23, 24], "log_valu": 15, "alwai": [15, 21, 27], "deal": 15, "dynam": [15, 22], "likelihood": [15, 22], "sequenc": 15, "prevent": 15, "underflow": 15, "overflow": 15, "mathemat": [15, 25], "scipi": 15, "gammaln": 15, "from_valu": 15, "absolut": [15, 20], "plain": 15, "wrapper": [15, 17], "log_float_funct": 15, "exp": [15, 24], "underlyingli": 15, "clearer": 15, "beta_funct": 15, "beta": 15, "incomplete_beta_funct": 15, "incomplet": [15, 20], "normal_cdf": 15, "cdf": 15, "\ud835\udca9": 15, "accur": [15, 23, 24], "tail": 15, "erfc": 15, "erf": 15, "numer": [15, 22, 24, 27], "binomial_coeffici": 15, "expon": 15, "binomi": 15, "coeffici": 15, "k": [15, 24], "nonneg": 15, "continu": [15, 23], "indefinit": 15, "respons": [15, 22], "posterior": 15, "semver": 16, "anywai": 16, "diagon": [16, 22], "mlframework": [16, 17], "selector": [16, 27], "approximateprivacylossbound": [16, 19], "privacylossbound": [16, 19], "renyiprivacylossbound": [16, 19], "struct": 16, "framework_typ": 17, "enumer": 17, "common_op": 17, "all_reduce_metr": 17, "get_tf_major_vers": 17, "get_pytorch_major_vers": 17, "check_mlx_instal": 17, "mlx": 17, "check_pfl_tree_instal": 17, "is_pytest_run": 17, "pytest": [17, 27], "is_mpi_run": 17, "mpirun": 17, "horovod_is_act": 17, "distributedcontext": 17, "relat": [17, 18, 21, 24, 27], "local_rank": 17, "global_rank": 17, "world_siz": 17, "local_s": 17, "all_reduc": 17, "scatter": 17, "distribute_rang": 17, "distribute_valu": 17, "horovoddistributedcontext": 17, "hvd": 17, "notdistributedcontext": 17, "numpy_op": 17, "numpyhorovoddistributedcontext": 17, "module_nam": 17, "numpyseedscop": 17, "temporarili": 17, "temporari": 17, "get_shap": [17, 27], "is_tensor": 17, "check": [17, 20, 21, 24, 27], "add_laplacian_nois": 17, "laplacian": [17, 24], "b": [17, 24, 27], "add_gaussian_nois": 17, "stddev": [17, 23], "calcul": [17, 20, 21, 23, 24], "global_norm": 17, "concaten": [17, 24], "flatten": 17, "reshap": 17, "recov": 17, "to_tensor": 17, "to_numpi": 17, "clone_vari": 17, "copi": 17, "unus": 17, "assign_vari": 17, "exponential_moving_average_upd": 17, "ema_vari": 17, "decai": [17, 22], "one_hot": 17, "depth": [17, 20, 26], "axi": 17, "join": 17, "pytorch_op": [17, 27], "setup_amp": 17, "amp_dtyp": [17, 22], "grad_scal": [17, 22], "amp": [17, 22], "autocast": [17, 22], "gradscal": 17, "turn": [17, 24], "pytorchdistributedcontext": 17, "synchron": 17, "pytorchhorovoddistributedcontext": 17, "simulate_bfloat16_transport": 17, "pytorchseedscop": 17, "barrier": 17, "replic": [17, 24], "stabl": 17, "html": [17, 20, 26, 27], "transfer": 17, "gradaccumulationst": 17, "accumulation_step": 17, "optimizer_should_upd": 17, "pytorchtrainsteparg": [17, 22], "amp_context": 17, "max_grad_norm": 17, "grad_accumulation_st": 17, "tensorflow_op": 17, "try_cached_cal": 17, "signific": 17, "bypass": 17, "incredibli": 17, "pfl_graph_cach": 17, "recogn": 17, "regener": 17, "sophist": 17, "yet": [17, 20, 21, 22, 26, 27], "tfdistributedcontext": 17, "multiworkermirroredstrategi": 17, "onedevicestrategi": 17, "tfhorovoddistributedcontext": 17, "kerasmetricvalu": 17, "keras_metr": 17, "predict": [17, 20, 26], "mutabl": [17, 24], "ground": 17, "truth": 17, "directli": [17, 24, 25], "overall_valu": [17, 21, 24], "to_vector": [17, 21, 24], "equival": [17, 21, 24, 25], "from_vector": [17, 21, 24], "runtim": [17, 21, 25], "attribut": [17, 21, 25], "serial": [17, 20, 21, 24, 25], "generic_platform": 18, "consume_metr": 18, "task": [18, 27], "statu": [18, 27], "create_checkpoint_directori": 18, "subdir_nam": 18, "remot": [18, 27], "get_distributed_address": 18, "verbos": 18, "get_platform_context": 18, "get_default_callback": 18, "genericplatform": 18, "get_platform": 18, "set_platform": 18, "unsupport": 18, "privacy_loss_bound": 19, "epsilon": [19, 24], "delta": [19, 24], "\u03b5": [19, 24], "\u03b4": [19, 24], "loos": 19, "speak": 19, "exceed": 19, "apply_multiple_tim": 19, "step_num": 19, "lose": [19, 21], "applic": 19, "pure": 19, "r\u00e9nyi": 19, "adjac": 19, "databas": [19, 24], "\u03b1": 19, "analog": 19, "mironov": 19, "2017": [19, 24], "ab": 19, "1702": 19, "07476": 19, "impli": 19, "num_appl": 19, "convert_to_approximate_dp": 19, "desired_delta": 19, "proposit": 19, "reli": 19, "futur": [19, 20], "renyi_epsilon": 19, "base_valu": [20, 26], "leaf": [20, 26], "add_tre": 20, "fulli": [20, 26], "partial": 20, "ensembl": 20, "get_max_min_predict": 20, "plu": 20, "d": [20, 24], "to_serialized_xgboost": 20, "emul": 20, "xgboost": [20, 26], "dump_model": [20, 26], "readthedoc": [20, 26], "en": [20, 26], "python_api": [20, 26], "booster": [20, 26], "gbdtclassifi": 20, "predict_class": [20, 26], "nearest": 20, "expit": 20, "gbdtregressor": 20, "mae": 20, "squar": [20, 24, 26], "mse": 20, "left_child": 20, "right_child": 20, "branch": [20, 26, 27], "child": [20, 26], "inequ": 20, "satisfi": 20, "is_leaf": [20, 26], "attach": 20, "num_nod": 20, "count": [20, 21, 22], "longest": 20, "add_leaf_nod": 20, "is_left": [20, 26], "parent": [20, 26], "add_branch_nod": 20, "condit": 20, "training_complet": 20, "get_leaf_valu": 20, "aris": 20, "arriv": 20, "nest": 20, "from_serialized_xgboost": 20, "process_xgboost_nod": 20, "gbdt_adaptive_hyperparamet": 20, "gbdtadaptivehyperparamet": 20, "current_valu": 20, "traincohorts": 20, "per_layer_modifier_funct": 20, "power": [20, 26], "leaf_nodes_reduction_factor": [20, 26], "ratio": [20, 25], "snr": [20, 24, 26], "deeper": 20, "fewer": 20, "consequ": [20, 24], "top": 20, "balanc": 20, "tradeoff": 20, "linearli": [20, 24, 26], "total_num_quest": [20, 26], "validationcohorts": 20, "wise": [20, 21], "enhanc": 20, "104295602": 20, "largest": 20, "clippingbound": 20, "layer_multipli": [20, 26], "tree_multipli": [20, 26], "sensit": [20, 24, 25, 26], "progress": [20, 26, 27], "due": [20, 26], "computesecondordergradi": 20, "abil": 20, "questiongener": 20, "sort": 20, "min_val": [20, 26], "max_val": [20, 26], "num_quest": [20, 26], "ask": [20, 26], "floatequidistantquestiongener": 20, "equidistantli": 20, "intequidistantquestiongener": 20, "floatrandomquestiongener": 20, "offset_fract": 20, "intrandomquestiongener": 20, "boolquestiongener": 20, "false_v": 20, "true_val": 20, "lie": 20, "midpoint": 20, "_false_v": 20, "_true_val": 20, "after_train": [21, 23], "local_partit": 21, "mainli": 21, "relev": [21, 27], "compos": 21, "main": [21, 24, 27], "shouldn": 21, "consum": 21, "come": 21, "addition": 21, "technic": 21, "commut": [21, 24], "monoid": [21, 24], "safe": 21, "weighted_valu": 21, "could": [21, 24], "bin_count": 21, "bin": [21, 23], "from_values_rang": 21, "from_values_bin": 21, "num_bin": [21, 23], "min_bound": [21, 23], "leftmost": 21, "edg": 21, "rightmost": 21, "outsid": 21, "singleton": 21, "exact": [21, 22, 24], "disjunct": 21, "from_dict": 21, "to_simple_dict": 21, "force_serialize_all_metr": 21, "to_lowercas": 21, "45": 21, "capit": 21, "mark": [21, 27], "lowercas": 21, "downstream": 21, "analyt": [21, 24], "splunk": 21, "delphi": 21, "On": 21, "contrari": 21, "proper": 21, "readabl": 21, "stdout": 21, "ipython": 21, "notebook": 21, "simplest": 22, "apply_model_upd": [22, 26], "mutat": 22, "allows_distributed_evalu": 22, "conserv": 22, "name_formatting_fn": [22, 24, 26], "eval_param": [22, 26], "circumst": [22, 23, 24], "suppos": 22, "still": 22, "adorn": 22, "conveni": 22, "eclect": 22, "four": 22, "get_paramet": 22, "ones": [22, 24], "set_paramet": 22, "other_paramet": 22, "chanc": 22, "diff1": 22, "initial_param": 22, "diff2": 22, "placehold": 22, "greatli": 22, "w": [22, 25], "checkpoint_format_hdf5": 22, "sequenti": 22, "build": [22, 27], "input_dim": 22, "hdf5": 22, "train_step_fn": 22, "customiz": 22, "reset": 22, "__call__": 22, "With": [22, 23], "closur": 22, "central_learning_rate_schedul": 22, "model_dtype_same_as_amp": 22, "use_torch_compil": 22, "userdataset": 22, "l1loss": 22, "item": 22, "trainer": 22, "lr_schedul": 22, "lrschedul": 22, "cast": 22, "infer": 22, "local_optim": 22, "train_step_arg": 22, "gaussian_mixture_model": 22, "variance_scal": 22, "responsibility_scal": 22, "variance_floor_fract": 22, "01": [22, 23], "minimum_component_weight": 22, "floor": 22, "prune": 22, "cached_model_train_param": 22, "immut": 22, "transform": [22, 24, 25], "underli": [22, 27], "global_gaussian": 22, "get_mixture_statist": 22, "mix_up": 22, "num_extra_compon": 22, "heurist": 22, "heaviest": 22, "mere": 22, "doubl": 22, "dynamic_decay_r": 22, "emploi": 22, "formula": 22, "shadow_vari": 22, "nine": 22, "99": [22, 23], "999": 22, "backup": 22, "tweak": 22, "min": 22, "num_upd": 22, "shadow_variable_map": 22, "shadow": 22, "_model": 22, "_dynamic_decay_r": 22, "Then": [22, 27], "interact": 23, "transformed_stat": [23, 24], "postprocess_server_l": [23, 24], "quantil": [23, 24], "fall": 23, "1st": 23, "percentil": 23, "interpol": 23, "That": 23, "fidel": 23, "summari": [23, 27], "unless": 23, "upon": 23, "103595866": 23, "summaris": 23, "1000": [23, 24], "001": 23, "98": 23, "suit": 23, "reddit": 23, "slightli": 23, "freqenc": 23, "interest": 23, "privacy_mechan": 24, "privacymetricnam": 24, "is_local_privaci": 24, "on_summed_stat": 24, "privacymechan": 24, "localprivacymechan": 24, "bake": 24, "unbound": 24, "protect": 24, "noised_statist": 24, "constrain": [24, 27], "had": 24, "splitprivacymechan": 24, "constrain_sensit": 24, "constrained_statist": 24, "adher": [24, 27], "add_nois": 24, "gone": 24, "clipped_statist": 24, "centrallyapplicableprivacymechan": 24, "centralprivacymechan": 24, "centrallyappliedprivacymechan": 24, "underlying_mechan": 24, "undon": 24, "latter": 24, "normclip": 24, "clipping_bound": [24, 26], "\u2113p": 24, "half": 24, "noprivaci": 24, "dummi": 24, "anyth": [24, 27], "impact": [24, 26], "unchang": 24, "normclippingonli": 24, "lp": 24, "laplac": 24, "laplace_mechan": 24, "laplacemechan": 24, "www": 24, "ci": [24, 27], "upenn": 24, "edu": 24, "aaroth": 24, "paper": 24, "privacybook": 24, "l1": 24, "thereaft": [24, 25, 27], "parameter": 24, "sensitivity_sc": 24, "sensitivity_squared_error": 24, "l2_norm": 24, "add_noise_squared_error": 24, "gaussian_mechan": 24, "gaussianmechan": 24, "relative_noise_stddev": 24, "\u2113\u00b2": 24, "unalt": 24, "construct_single_iter": 24, "from_privacy_account": 24, "thu": 24, "cost": 24, "privacyaccount": 24, "ftrl_mechan": 24, "ftrlmatrixfactor": 24, "workload_matrix": 24, "matric": [24, 25], "solv": [24, 27], "workload": 24, "triangular": 24, "gram": 24, "forwardsubstitut": 24, "bandwidth": 24, "lx": 24, "onlin": 24, "l": 24, "y_i": 24, "At": 24, "x_i": 24, "sum_": 24, "l_": 24, "x_j": 24, "bandedmatrixfactorizationmechan": 24, "num_iter": 24, "min_separ": 24, "make_privacy_account": 24, "ax": 24, "cx": 24, "ttime": 24, "cdot": 24, "x_t": 24, "seri": 24, "bc": 24, "correl": 24, "gap": 24, "composit": 24, "privacyaccountantkind": 24, "num_composit": 24, "pldprivacyaccount": 24, "other_param": 24, "joint_mechan": 24, "jointmechan": 24, "mechanisms_and_kei": 24, "key_nam": 24, "appear": 24, "key_prefix": 24, "any_str": 24, "sampling_prob": 24, "noise_paramet": 24, "noise_scal": 24, "min_bound_noise_paramet": 24, "max_bound_noise_paramet": 24, "entiti": 24, "neighbor": 24, "lost": 24, "cohort_noise_paramet": 24, "value_discretization_interv": 24, "0001": 24, "use_connect_dot": 24, "pessimistic_estim": 24, "log_mass_truncation_bound": 24, "pld": 24, "budget": 24, "fold": 24, "meiser": 24, "mohammadi": 24, "cc": 24, "247": 24, "264": 24, "eprint": 24, "iacr": 24, "1034": 24, "doct": 24, "dot": 24, "tighter": 24, "discret": [24, 27], "doroshenko": 24, "popet": 24, "2022": 24, "2207": 24, "04380": 24, "dicret": 24, "incur": 24, "hockei": 24, "stick": 24, "mass": 24, "discard": 24, "prvprivacyaccount": 24, "eps_error": 24, "07": 24, "delta_error": 24, "1e": 24, "prv": 24, "gopi": 24, "2021": 24, "2106": 24, "02848": 24, "compute_delta": 24, "compute_epsilon": 24, "rdpprivacyaccount": 24, "renyi": 24, "rdp": 24, "dp_account": 24, "rdp_privacy_account": 24, "neighbour": 24, "11": 24, "64": 24, "128": 24, "512": 24, "1024": 24, "jointprivacyaccount": 24, "total_epsilon": 24, "total_delta": 24, "mechanism_epsilon": 24, "mechanism_delta": 24, "budget_proport": 24, "pld_accountant_kwarg": 24, "prv_accountant_kwarg": 24, "wish": [24, 27], "p_1": 24, "p_2": 24, "naive_epsilon": 24, "sigma_1": 24, "sigma_2": 24, "mechanism_i": 24, "sigma_i": 24, "p_i": 24, "privacy_account": 24, "compute_for_each_mechan": 24, "check_valid_parameter_set": 24, "adaptive_clip": 24, "mutableclippingbound": 24, "initial_clipping_bound": 24, "adaptiveclippinggaussianmechan": 24, "make_gaussian_mechan": 24, "clipping_indicator_noise_stddev": 24, "adaptive_clipping_norm_quantil": 24, "log_space_step_s": 24, "1905": 24, "03871": 24, "\u2082": 24, "\ud835\udefe": 24, "oftentim": 24, "noisi": 24, "geometr": 24, "\u03b7": 24, "logc": 24, "\u03b7g": 24, "pop": 24, "popped_statist": 24, "construct_from_privacy_account": 24, "approximate_mechan": 24, "squarederrorlocalprivacymechan": 24, "theorem": 24, "get_squared_error": 24, "approximate_as_central_mechan": 24, "central_privaci": 24, "no_privaci": 24, "gaussianapproximatedprivacymechan": 24, "local_mechan": 24, "local_mechanism_config": 24, "central_mechan": 24, "central_mechanism_config": 24, "privacy_snr": 24, "snrmetric": 24, "signal_l2_norm": 24, "squared_error": 24, "noise_stddev": 24, "sqrt": 24, "implicit": 24, "assumpt": 24, "overestim": 24, "compute_paramet": 24, "analyticgm_robust_impl": 24, "ep": 24, "sigma": 24, "ball": 24, "denois": 24, "1805": 24, "06530": 24, "analyticgm_robust": 24, "repetit": 24, "advantag": 24, "moment": 24, "protocol": 25, "metadata1": 25, "private_vectors1": 25, "stats1": 25, "get_weight": 25, "metadata2": 25, "private_vectors2": 25, "stats2": 25, "metadata_sum": 25, "private_vectors_sum": 25, "v1": 25, "v2": 25, "stats_sum": 25, "from_weight": 25, "num_paramet": 25, "wire": 25, "easili": 25, "content": 25, "stats_p1": 25, "apply_elementwis": 25, "semir": 25, "reweight": 25, "new_weight": 25, "name_to_stat": 25, "mappedvectorstatisticstyp": 25, "statistics_list": 25, "gbdtclippingbound": 26, "use_tree_offset": 26, "current_depth": 26, "current_tre": 26, "num_trees_in_model_at_start_of_train": 26, "gbdtmodel": 26, "cohort_size_per_layer_modifier_fn": 26, "l2_regular": 26, "compute_second_order_gradi": 26, "report_gradients_both_sides_split": 26, "report_node_sum_gradi": 26, "report_per_feature_result_differ": 26, "report_per_node_result_differ": 26, "_compute_cohort_s": 26, "gbdtmodeltyp": 26, "gbdtalgorithmhyperparamstyp": 26, "gbdtmodelhyperparamstyp": 26, "postprocess_training_statist": 26, "first_order_grads_left": 26, "first_order_grads_right": 26, "second_order_grads_left": 26, "second_order_grads_right": 26, "complex": 26, "overfit": 26, "gain": 26, "left_child_valu": 26, "right_child_valu": 26, "noderecord": 26, "decision_path": 26, "tripl": 26, "goe": [26, 27], "hang": 26, "matter": 26, "gbdtclassificationmodelhyperparam": 26, "evaluation_threshold": 26, "learning_r": 26, "minimum_split_loss": 26, "base_predict": 26, "parent_valu": 26, "compute_first_order_gradi": 26, "serialis": 26, "highlight": 26, "extens": 26, "_nodes_to_split": 26, "attain": 26, "closest": 26, "feature_index": 26, "feature_rang": 26, "feature_typ": 26, "question_choice_method": 26, "generate_feature_quest": 26, "_num_quest": 26, "choose_quest": 26, "decisionpath": 26, "welcom": 27, "anyon": 27, "issu": 27, "bug": 27, "beginn": 27, "friendli": 27, "releas": 27, "fork": 27, "ui": 27, "click": 27, "upstream": 27, "checkout": 27, "awesom": 27, "prerequisit": 27, "curl": 27, "ssl": 27, "pyproject": 27, "toml": 27, "conda": 27, "py310": 27, "env": 27, "whatev": 27, "dev": 27, "shell": 27, "reproduc": 27, "everybodi": 27, "sphinx": 27, "Or": 27, "pr": 27, "style": 27, "regard": 27, "semant": 27, "rfc": 27, "extern": 27, "minor": 27, "bump": 27, "explain": 27, "feedback": 27, "merg": 27, "toward": 27, "commit": 27, "squash": 27, "kept": 27, "ambigu": 27, "yapf": 27, "ruff": 27, "mypi": 27, "styleguid": 27, "prefer": 27, "strictli": 27, "rtype": 27, "hint": 27, "autom": 27, "recurs": 27, "design": 27, "coher": 27, "valuabl": 27, "lint": 27, "diff": 27, "worri": 27, "miss": 27, "testabl": 27, "svx": 27, "tox": 27, "mirror": 27, "my_model": 27, "mymodel": 27, "my_method": 27, "test_my_model": 27, "testmymodel": 27, "test_my_method": 27, "mock": 27, "conftest": 27, "maco": 27, "trivial": 27, "earliest": 27, "everyth": 27, "free": 27, "encapsul": 27, "low": 27, "get_default_framework_modul": 27, "readi": 27, "push": 27, "m": 27, "messag": 27, "bottom": 27, "contributor": 27, "admin": 27, "kickstart": 27, "checklist": 27, "review": 27, "smooth": 27, "quick": 27, "coverag": 27, "stabil": 27, "wheel": 27, "behalf": 27, "changelog": 27}, "objects": {"pfl.aggregate.base": [[4, 0, 1, "", "Aggregator"], [4, 0, 1, "", "Backend"], [4, 0, 1, "", "SumAggregator"]], "pfl.aggregate.base.Aggregator": [[4, 1, 1, "", "accumulate"], [4, 1, 1, "", "worker_reduce"], [4, 1, 1, "", "worker_reduce_metrics_only"]], "pfl.aggregate.base.Backend": [[4, 1, 1, "", "async_gather_results"], [4, 1, 1, "", "gather_results"]], "pfl.aggregate.base.SumAggregator": [[4, 1, 1, "", "accumulate"], [4, 1, 1, "", "worker_reduce"], [4, 1, 1, "", "worker_reduce_metrics_only"]], "pfl.aggregate": [[4, 2, 0, "-", "data_transport"], [4, 2, 0, "-", "weighting"]], "pfl.aggregate.data_transport": [[4, 0, 1, "", "BFloat16DataTransport"], [4, 0, 1, "", "DataTransport"], [4, 0, 1, "", "Float32DataTransport"]], "pfl.aggregate.data_transport.BFloat16DataTransport": [[4, 1, 1, "", "postprocess_one_user"]], "pfl.aggregate.data_transport.DataTransport": [[4, 1, 1, "", "postprocess_one_user"]], "pfl.aggregate.data_transport.Float32DataTransport": [[4, 1, 1, "", "postprocess_one_user"]], "pfl.aggregate.simulate": [[4, 0, 1, "", "SimulatedBackend"]], "pfl.aggregate.simulate.SimulatedBackend": [[4, 1, 1, "", "async_gather_results"]], "pfl.aggregate.weighting": [[4, 0, 1, "", "WeightByDatapoints"], [4, 0, 1, "", "WeightByUser"], [4, 0, 1, "", "WeightingStrategy"]], "pfl.aggregate.weighting.WeightByDatapoints": [[4, 1, 1, "", "postprocess_one_user"]], "pfl.aggregate.weighting.WeightByUser": [[4, 1, 1, "", "postprocess_one_user"]], "pfl.aggregate.weighting.WeightingStrategy": [[4, 1, 1, "", "postprocess_one_user"]], "pfl.algorithm": [[5, 2, 0, "-", "algorithm_utils"], [5, 2, 0, "-", "base"], [5, 2, 0, "-", "expectation_maximization_gmm"], [5, 2, 0, "-", "federated_averaging"], [5, 2, 0, "-", "reptile"]], "pfl.algorithm.algorithm_utils": [[5, 3, 1, "", "run_train_eval"]], "pfl.algorithm.base": [[5, 0, 1, "", "FederatedAlgorithm"], [5, 0, 1, "", "FederatedNNAlgorithm"], [5, 0, 1, "", "NNAlgorithmParams"], [5, 0, 1, "", "PersonalizedNNAlgorithm"], [5, 0, 1, "", "PersonalizedNNAlgorithmParams"]], "pfl.algorithm.base.FederatedAlgorithm": [[5, 1, 1, "", "load"], [5, 1, 1, "", "process_aggregated_statistics"], [5, 1, 1, "", "process_aggregated_statistics_from_all_contexts"], [5, 1, 1, "", "run"], [5, 1, 1, "", "save"], [5, 1, 1, "", "simulate_one_user"]], "pfl.algorithm.base.FederatedNNAlgorithm": [[5, 1, 1, "", "simulate_one_user"]], "pfl.algorithm.base.PersonalizedNNAlgorithm": [[5, 1, 1, "", "simulate_one_user"]], "pfl.algorithm.expectation_maximization_gmm": [[5, 0, 1, "", "EMGMMHyperParams"], [5, 0, 1, "", "ExpectationMaximizationGMM"], [5, 3, 1, "", "make_compute_new_num_components"]], "pfl.algorithm.expectation_maximization_gmm.ExpectationMaximizationGMM": [[5, 1, 1, "", "process_aggregated_statistics"], [5, 1, 1, "", "simulate_one_user"]], "pfl.algorithm.federated_averaging": [[5, 0, 1, "", "FederatedAveraging"]], "pfl.algorithm.federated_averaging.FederatedAveraging": [[5, 1, 1, "", "process_aggregated_statistics"]], "pfl.algorithm.fedprox": [[5, 0, 1, "", "AdaptMuOnMetricCallback"], [5, 0, 1, "", "FedProx"], [5, 0, 1, "", "FedProxParams"]], "pfl.algorithm.fedprox.AdaptMuOnMetricCallback": [[5, 1, 1, "", "after_central_iteration"], [5, 1, 1, "", "value"]], "pfl.algorithm.reptile": [[5, 0, 1, "", "Reptile"]], "pfl": [[6, 2, 0, "-", "callback"], [7, 2, 0, "-", "common_types"], [8, 2, 0, "-", "context"], [11, 2, 0, "-", "exception"], [21, 2, 0, "-", "metrics"], [25, 2, 0, "-", "stats"]], "pfl.callback": [[6, 0, 1, "", "AggregateMetricsToDisk"], [6, 0, 1, "", "CentralEvaluationCallback"], [6, 0, 1, "", "CentralEvaluationWithEMACallback"], [6, 0, 1, "", "CheckpointPolicy"], [6, 0, 1, "", "ConvergenceCallback"], [6, 0, 1, "", "EarlyStoppingCallback"], [6, 0, 1, "", "IterationFrequencyCheckpointPolicy"], [6, 0, 1, "", "MetricImprovementCheckpointPolicy"], [6, 0, 1, "", "ModelCheckpointingCallback"], [6, 0, 1, "", "PolicyBasedModelCheckpointingCallback"], [6, 0, 1, "", "ProfilerCallback"], [6, 0, 1, "", "RestoreTrainingCallback"], [6, 0, 1, "", "StopwatchCallback"], [6, 0, 1, "", "TensorBoardCallback"], [6, 0, 1, "", "TrackBestOverallMetrics"], [6, 0, 1, "", "TrainingProcessCallback"], [6, 0, 1, "", "WandbCallback"]], "pfl.callback.AggregateMetricsToDisk": [[6, 1, 1, "", "after_central_iteration"], [6, 1, 1, "", "on_train_begin"], [6, 1, 1, "", "on_train_end"]], "pfl.callback.CentralEvaluationCallback": [[6, 1, 1, "", "after_central_iteration"], [6, 1, 1, "", "on_train_begin"]], "pfl.callback.CentralEvaluationWithEMACallback": [[6, 1, 1, "", "after_central_iteration"], [6, 1, 1, "", "on_train_begin"]], "pfl.callback.CheckpointPolicy": [[6, 1, 1, "", "should_checkpoint_at_end"], [6, 1, 1, "", "should_checkpoint_now"]], "pfl.callback.ConvergenceCallback": [[6, 1, 1, "", "after_central_iteration"]], "pfl.callback.EarlyStoppingCallback": [[6, 1, 1, "", "after_central_iteration"]], "pfl.callback.IterationFrequencyCheckpointPolicy": [[6, 1, 1, "", "should_checkpoint_now"]], "pfl.callback.MetricImprovementCheckpointPolicy": [[6, 1, 1, "", "should_checkpoint_at_end"], [6, 1, 1, "", "should_checkpoint_now"]], "pfl.callback.PolicyBasedModelCheckpointingCallback": [[6, 1, 1, "", "after_central_iteration"], [6, 1, 1, "", "on_train_end"]], "pfl.callback.ProfilerCallback": [[6, 1, 1, "", "after_central_iteration"], [6, 1, 1, "", "on_train_begin"], [6, 1, 1, "", "on_train_end"]], "pfl.callback.RestoreTrainingCallback": [[6, 1, 1, "", "after_central_iteration"], [6, 1, 1, "", "on_train_begin"]], "pfl.callback.StopwatchCallback": [[6, 1, 1, "", "after_central_iteration"], [6, 1, 1, "", "on_train_begin"]], "pfl.callback.TensorBoardCallback": [[6, 1, 1, "", "after_central_iteration"], [6, 1, 1, "", "on_train_begin"], [6, 1, 1, "", "on_train_end"]], "pfl.callback.TrackBestOverallMetrics": [[6, 1, 1, "", "after_central_iteration"], [6, 1, 1, "", "on_train_begin"]], "pfl.callback.TrainingProcessCallback": [[6, 1, 1, "", "after_central_iteration"], [6, 1, 1, "", "on_train_begin"], [6, 1, 1, "", "on_train_end"]], "pfl.callback.WandbCallback": [[6, 1, 1, "", "after_central_iteration"], [6, 1, 1, "", "on_train_begin"], [6, 1, 1, "", "on_train_end"]], "pfl.common_types": [[7, 0, 1, "", "Checkpointer"], [7, 0, 1, "", "LocalDiskCheckpointer"], [7, 0, 1, "", "Population"], [7, 0, 1, "", "Saveable"]], "pfl.common_types.Saveable": [[7, 1, 1, "", "load"], [7, 1, 1, "", "save"], [7, 1, 1, "", "set_checkpointer"]], "pfl.context": [[8, 0, 1, "", "CentralContext"], [8, 0, 1, "", "LocalResultMetaData"], [8, 0, 1, "", "UserContext"]], "pfl.context.CentralContext": [[8, 4, 1, "", "state_description"]], "pfl.data": [[9, 2, 0, "-", "dataset"], [9, 2, 0, "-", "federated_dataset"], [9, 2, 0, "-", "partition"], [9, 2, 0, "-", "pytorch"], [9, 2, 0, "-", "sampling"], [9, 2, 0, "-", "tensorflow"], [9, 2, 0, "-", "user_state"]], "pfl.data.dataset": [[9, 0, 1, "", "AbstractDataset"], [9, 0, 1, "", "Dataset"], [9, 0, 1, "", "DatasetSplit"], [9, 0, 1, "", "TabularDataset"]], "pfl.data.dataset.AbstractDataset": [[9, 1, 1, "", "get_worker_partition"], [9, 1, 1, "", "split"]], "pfl.data.dataset.Dataset": [[9, 1, 1, "", "get_worker_partition"], [9, 1, 1, "", "split"]], "pfl.data.dataset.DatasetSplit": [[9, 4, 1, "", "eval_kwargs"], [9, 1, 1, "", "get_worker_partition"], [9, 4, 1, "", "raw_data"], [9, 1, 1, "", "split"], [9, 4, 1, "", "train_kwargs"]], "pfl.data.federated_dataset": [[9, 0, 1, "", "ArtificialFederatedDataset"], [9, 0, 1, "", "FederatedDataset"], [9, 0, 1, "", "FederatedDatasetBase"], [9, 0, 1, "", "FederatedDatasetMixture"]], "pfl.data.federated_dataset.ArtificialFederatedDataset": [[9, 1, 1, "", "from_slices"], [9, 1, 1, "", "get_cohort"]], "pfl.data.federated_dataset.FederatedDataset": [[9, 1, 1, "", "from_slices"], [9, 1, 1, "", "from_slices_with_dirichlet_class_distribution"], [9, 1, 1, "", "get_cohort"]], "pfl.data.federated_dataset.FederatedDatasetBase": [[9, 1, 1, "", "get_cohort"]], "pfl.data.federated_dataset.FederatedDatasetMixture": [[9, 1, 1, "", "get_cohort"]], "pfl.data.partition": [[9, 3, 1, "", "partition_by_dirichlet_class_distribution"]], "pfl.data.pytorch": [[9, 0, 1, "", "PyTorchDataDataset"], [9, 0, 1, "", "PyTorchFederatedDataset"], [9, 0, 1, "", "PyTorchTensorDataset"]], "pfl.data.pytorch.PyTorchDataDataset": [[9, 1, 1, "", "get_worker_partition"], [9, 1, 1, "", "split"]], "pfl.data.sampling": [[9, 0, 1, "", "CrossSiloUserSampler"], [9, 0, 1, "", "DirichletDataSampler"], [9, 0, 1, "", "MinimizeReuseDataSampler"], [9, 0, 1, "", "MinimizeReuseUserSampler"], [9, 3, 1, "", "get_data_sampler"], [9, 3, 1, "", "get_user_sampler"]], "pfl.data.tensorflow": [[9, 0, 1, "", "TFDataDataset"], [9, 0, 1, "", "TFFederatedDataset"], [9, 0, 1, "", "TFTensorDataset"]], "pfl.data.tensorflow.TFDataDataset": [[9, 1, 1, "", "get_worker_partition"], [9, 1, 1, "", "split"]], "pfl.data.user_state": [[9, 0, 1, "", "AbstractUserStateStorage"], [9, 0, 1, "", "DiskUserStateStorage"], [9, 0, 1, "", "InMemoryUserStateStorage"]], "pfl.data.user_state.AbstractUserStateStorage": [[9, 1, 1, "", "clear_states"], [9, 1, 1, "", "load_state"], [9, 1, 1, "", "save_state"]], "pfl.data.user_state.DiskUserStateStorage": [[9, 1, 1, "", "acquire_lock"], [9, 1, 1, "", "clear_states"], [9, 1, 1, "", "load_state"], [9, 1, 1, "", "save_state"]], "pfl.data.user_state.InMemoryUserStateStorage": [[9, 1, 1, "", "clear_states"], [9, 1, 1, "", "load_state"], [9, 1, 1, "", "save_state"]], "pfl.exception": [[11, 5, 1, "", "CheckpointNotFoundError"], [11, 5, 1, "", "MatrixFactorizationError"], [11, 5, 1, "", "PFLError"], [11, 5, 1, "", "UserNotFoundError"]], "pfl.hyperparam": [[12, 2, 0, "-", "base"]], "pfl.hyperparam.base": [[12, 0, 1, "", "AlgorithmHyperParams"], [12, 0, 1, "", "HyperParam"], [12, 0, 1, "", "HyperParams"], [12, 0, 1, "", "ModelHyperParams"], [12, 0, 1, "", "NNEvalHyperParams"], [12, 0, 1, "", "NNTrainHyperParams"], [12, 3, 1, "", "get_param_value"]], "pfl.hyperparam.base.HyperParam": [[12, 1, 1, "", "value"]], "pfl.hyperparam.base.HyperParams": [[12, 1, 1, "", "get"], [12, 1, 1, "", "static_clone"]], "pfl.internal": [[13, 2, 0, "-", "bisect"], [19, 2, 0, "-", "privacy_loss_bound"]], "pfl.internal.bisect": [[13, 3, 1, "", "bisect_automatic_range"], [13, 3, 1, "", "bisect_range"]], "pfl.internal.bridge": [[14, 2, 0, "-", "base"], [14, 2, 0, "-", "factory"]], "pfl.internal.bridge.base": [[14, 0, 1, "", "CommonFrameworkBridge"], [14, 0, 1, "", "FTRLFrameworkBridge"], [14, 0, 1, "", "FedProxFrameworkBridge"], [14, 0, 1, "", "SCAFFOLDFrameworkBridge"], [14, 0, 1, "", "SGDFrameworkBridge"]], "pfl.internal.bridge.base.CommonFrameworkBridge": [[14, 1, 1, "", "load_state"], [14, 1, 1, "", "save_state"]], "pfl.internal.bridge.base.FTRLFrameworkBridge": [[14, 1, 1, "", "lbfgs_direction"], [14, 1, 1, "", "loss_and_gradient"], [14, 1, 1, "", "terminate_fn"]], "pfl.internal.bridge.base.FedProxFrameworkBridge": [[14, 1, 1, "", "do_proximal_sgd"]], "pfl.internal.bridge.base.SCAFFOLDFrameworkBridge": [[14, 1, 1, "", "do_control_variate_sgd"]], "pfl.internal.bridge.base.SGDFrameworkBridge": [[14, 1, 1, "", "do_sgd"]], "pfl.internal.bridge.factory": [[14, 0, 1, "", "FrameworkBridgeFactory"]], "pfl.internal.bridge.numpy": [[14, 2, 0, "-", "common"]], "pfl.internal.bridge.numpy.common": [[14, 0, 1, "", "NumpyCommonBridge"]], "pfl.internal.bridge.numpy.common.NumpyCommonBridge": [[14, 1, 1, "", "load_state"], [14, 1, 1, "", "save_state"]], "pfl.internal.bridge.pytorch": [[14, 2, 0, "-", "common"], [14, 2, 0, "-", "ftrl"], [14, 2, 0, "-", "proximal"], [14, 2, 0, "-", "sgd"]], "pfl.internal.bridge.pytorch.common": [[14, 0, 1, "", "PyTorchCommonBridge"]], "pfl.internal.bridge.pytorch.common.PyTorchCommonBridge": [[14, 1, 1, "", "load_state"], [14, 1, 1, "", "save_state"]], "pfl.internal.bridge.pytorch.ftrl": [[14, 0, 1, "", "PyTorchFTRLBridge"]], "pfl.internal.bridge.pytorch.ftrl.PyTorchFTRLBridge": [[14, 1, 1, "", "lbfgs_direction"], [14, 1, 1, "", "loss_and_gradient"], [14, 1, 1, "", "terminate_fn"]], "pfl.internal.bridge.pytorch.proximal": [[14, 0, 1, "", "PyTorchFedProxBridge"]], "pfl.internal.bridge.pytorch.proximal.PyTorchFedProxBridge": [[14, 1, 1, "", "do_proximal_sgd"]], "pfl.internal.bridge.pytorch.sgd": [[14, 0, 1, "", "PyTorchSGDBridge"]], "pfl.internal.bridge.pytorch.sgd.PyTorchSGDBridge": [[14, 1, 1, "", "do_sgd"]], "pfl.internal.bridge.tensorflow": [[14, 2, 0, "-", "common"], [14, 2, 0, "-", "ftrl"], [14, 2, 0, "-", "proximal"], [14, 2, 0, "-", "sgd"]], "pfl.internal.bridge.tensorflow.common": [[14, 0, 1, "", "TFCommonBridge"], [14, 3, 1, "", "get_or_make_tf_function"]], "pfl.internal.bridge.tensorflow.common.TFCommonBridge": [[14, 1, 1, "", "load_state"], [14, 1, 1, "", "save_state"]], "pfl.internal.bridge.tensorflow.ftrl": [[14, 0, 1, "", "TFFTRLBridge"]], "pfl.internal.bridge.tensorflow.ftrl.TFFTRLBridge": [[14, 1, 1, "", "lbfgs_direction"], [14, 1, 1, "", "loss_and_gradient"], [14, 1, 1, "", "terminate_fn"]], "pfl.internal.bridge.tensorflow.proximal": [[14, 0, 1, "", "TFFedProxBridge"]], "pfl.internal.bridge.tensorflow.proximal.TFFedProxBridge": [[14, 1, 1, "", "do_proximal_sgd"]], "pfl.internal.bridge.tensorflow.sgd": [[14, 0, 1, "", "TFSGDBridge"]], "pfl.internal.bridge.tensorflow.sgd.TFSGDBridge": [[14, 1, 1, "", "do_sgd"]], "pfl.internal.distribution": [[15, 2, 0, "-", "diagonal_gaussian"], [15, 2, 0, "-", "distribution"], [15, 2, 0, "-", "log_float"], [15, 2, 0, "-", "log_float_functions"], [15, 2, 0, "-", "mixture"]], "pfl.internal.distribution.diagonal_gaussian": [[15, 0, 1, "", "DiagonalGaussian"], [15, 3, 1, "", "diagonal_standard_gaussian"]], "pfl.internal.distribution.diagonal_gaussian.DiagonalGaussian": [[15, 1, 1, "", "density"], [15, 4, 1, "", "point_shape"], [15, 1, 1, "", "sample"], [15, 1, 1, "", "split"]], "pfl.internal.distribution.distribution": [[15, 0, 1, "", "Distribution"], [15, 3, 1, "", "any_product"], [15, 3, 1, "", "any_sum"]], "pfl.internal.distribution.distribution.Distribution": [[15, 1, 1, "", "density"], [15, 1, 1, "", "log_densities"], [15, 4, 1, "", "point_shape"], [15, 1, 1, "", "sample"]], "pfl.internal.distribution.log_float": [[15, 0, 1, "", "LogFloat"], [15, 3, 1, "", "log"]], "pfl.internal.distribution.log_float.LogFloat": [[15, 1, 1, "", "from_value"], [15, 4, 1, "", "log_value"], [15, 4, 1, "", "sign"], [15, 4, 1, "", "value"]], "pfl.internal.distribution.log_float_functions": [[15, 3, 1, "", "beta_function"], [15, 3, 1, "", "binomial_coefficients"], [15, 3, 1, "", "erfc"], [15, 3, 1, "", "exp"], [15, 3, 1, "", "incomplete_beta_function"], [15, 3, 1, "", "normal_cdf"]], "pfl.internal.distribution.mixture": [[15, 0, 1, "", "Mixture"]], "pfl.internal.distribution.mixture.Mixture": [[15, 4, 1, "", "components"], [15, 1, 1, "", "density"], [15, 4, 1, "", "point_shape"], [15, 1, 1, "", "responsibilities"], [15, 1, 1, "", "sample"]], "pfl.internal.ops": [[17, 2, 0, "-", "common_ops"], [17, 2, 0, "-", "distributed"], [17, 2, 0, "-", "framework_types"], [17, 2, 0, "-", "numpy_ops"], [17, 2, 0, "-", "pytorch_ops"], [17, 2, 0, "-", "selector"], [17, 2, 0, "-", "tensorflow_ops"]], "pfl.internal.ops.common_ops": [[17, 3, 1, "", "all_reduce_metrics"], [17, 3, 1, "", "check_mlx_installed"], [17, 3, 1, "", "check_pfl_tree_installed"], [17, 3, 1, "", "get_pytorch_major_version"], [17, 3, 1, "", "get_tf_major_version"], [17, 3, 1, "", "is_mpi_running"], [17, 3, 1, "", "is_pytest_running"]], "pfl.internal.ops.distributed": [[17, 0, 1, "", "DistributedContext"], [17, 0, 1, "", "HorovodDistributedContext"], [17, 0, 1, "", "NotDistributedContext"], [17, 3, 1, "", "horovod_is_active"]], "pfl.internal.ops.distributed.DistributedContext": [[17, 1, 1, "", "all_reduce"], [17, 1, 1, "", "distribute_range"], [17, 1, 1, "", "distribute_value"], [17, 4, 1, "", "global_rank"], [17, 4, 1, "", "local_rank"], [17, 4, 1, "", "local_size"], [17, 4, 1, "", "world_size"]], "pfl.internal.ops.distributed.HorovodDistributedContext": [[17, 1, 1, "", "all_reduce"], [17, 4, 1, "", "global_rank"], [17, 4, 1, "", "local_rank"], [17, 4, 1, "", "local_size"], [17, 4, 1, "", "world_size"]], "pfl.internal.ops.distributed.NotDistributedContext": [[17, 1, 1, "", "all_reduce"], [17, 4, 1, "", "global_rank"], [17, 4, 1, "", "local_rank"], [17, 4, 1, "", "local_size"], [17, 4, 1, "", "world_size"]], "pfl.internal.ops.framework_types": [[17, 0, 1, "", "MLFramework"]], "pfl.internal.ops.numpy_ops": [[17, 0, 1, "", "NumpyHorovodDistributedContext"], [17, 0, 1, "", "NumpySeedScope"], [17, 3, 1, "", "add_gaussian_noise"], [17, 3, 1, "", "add_laplacian_noise"], [17, 3, 1, "", "assign_variable"], [17, 3, 1, "", "clone"], [17, 3, 1, "", "clone_variable"], [17, 3, 1, "", "concatenate"], [17, 3, 1, "", "exponential_moving_average_update"], [17, 3, 1, "", "flatten"], [17, 3, 1, "", "get_shape"], [17, 3, 1, "", "global_norm"], [17, 3, 1, "", "is_tensor"], [17, 3, 1, "", "norm"], [17, 3, 1, "", "one_hot"], [17, 3, 1, "", "reshape"], [17, 3, 1, "", "to_numpy"], [17, 3, 1, "", "to_tensor"]], "pfl.internal.ops.pytorch_ops": [[17, 0, 1, "", "Barrier"], [17, 0, 1, "", "GradAccumulationState"], [17, 0, 1, "", "PyTorchDistributedContext"], [17, 0, 1, "", "PyTorchHorovodDistributedContext"], [17, 0, 1, "", "PyTorchSeedScope"], [17, 0, 1, "", "PyTorchTrainStepArgs"], [17, 3, 1, "", "add_gaussian_noise"], [17, 3, 1, "", "add_laplacian_noise"], [17, 3, 1, "", "assign_variable"], [17, 3, 1, "", "clone"], [17, 3, 1, "", "clone_variable"], [17, 3, 1, "", "concatenate"], [17, 3, 1, "", "exponential_moving_average_update"], [17, 3, 1, "", "flatten"], [17, 3, 1, "", "get_shape"], [17, 3, 1, "", "global_norm"], [17, 3, 1, "", "is_tensor"], [17, 3, 1, "", "norm"], [17, 3, 1, "", "one_hot"], [17, 3, 1, "", "reshape"], [17, 3, 1, "", "setup_amp"], [17, 3, 1, "", "simulate_bfloat16_transport"], [17, 3, 1, "", "to_numpy"], [17, 3, 1, "", "to_tensor"]], "pfl.internal.ops.pytorch_ops.GradAccumulationState": [[17, 4, 1, "", "optimizer_should_update"]], "pfl.internal.ops.pytorch_ops.PyTorchDistributedContext": [[17, 1, 1, "", "all_reduce"], [17, 4, 1, "", "global_rank"], [17, 4, 1, "", "local_rank"], [17, 4, 1, "", "local_size"], [17, 4, 1, "", "world_size"]], "pfl.internal.ops.tensorflow_ops": [[17, 0, 1, "", "KerasMetricValue"], [17, 0, 1, "", "TFDistributedContext"], [17, 0, 1, "", "TFHorovodDistributedContext"], [17, 3, 1, "", "add_gaussian_noise"], [17, 3, 1, "", "add_laplacian_noise"], [17, 3, 1, "", "assign_variable"], [17, 3, 1, "", "clone"], [17, 3, 1, "", "clone_variable"], [17, 3, 1, "", "concatenate"], [17, 3, 1, "", "exponential_moving_average_update"], [17, 3, 1, "", "flatten"], [17, 3, 1, "", "get_shape"], [17, 3, 1, "", "global_norm"], [17, 3, 1, "", "is_tensor"], [17, 3, 1, "", "norm"], [17, 3, 1, "", "one_hot"], [17, 3, 1, "", "reshape"], [17, 3, 1, "", "simulate_bfloat16_transport"], [17, 3, 1, "", "to_numpy"], [17, 3, 1, "", "to_tensor"], [17, 3, 1, "", "try_cached_call"]], "pfl.internal.ops.tensorflow_ops.KerasMetricValue": [[17, 1, 1, "", "from_vector"], [17, 4, 1, "", "overall_value"], [17, 1, 1, "", "to_vector"]], "pfl.internal.ops.tensorflow_ops.TFDistributedContext": [[17, 1, 1, "", "all_reduce"], [17, 4, 1, "", "global_rank"], [17, 4, 1, "", "local_rank"], [17, 4, 1, "", "local_size"], [17, 4, 1, "", "world_size"]], "pfl.internal.platform": [[18, 2, 0, "-", "generic_platform"], [18, 2, 0, "-", "selector"]], "pfl.internal.platform.generic_platform": [[18, 0, 1, "", "GenericPlatform"], [18, 0, 1, "", "Platform"]], "pfl.internal.platform.generic_platform.GenericPlatform": [[18, 1, 1, "", "consume_metrics"], [18, 1, 1, "", "create_checkpoint_directories"], [18, 1, 1, "", "get_default_callbacks"], [18, 1, 1, "", "get_distributed_addresses"], [18, 1, 1, "", "get_platform_context"]], "pfl.internal.platform.generic_platform.Platform": [[18, 1, 1, "", "consume_metrics"], [18, 1, 1, "", "create_checkpoint_directories"], [18, 1, 1, "", "get_default_callbacks"], [18, 1, 1, "", "get_distributed_addresses"], [18, 1, 1, "", "get_platform_context"]], "pfl.internal.platform.selector": [[18, 3, 1, "", "get_platform"], [18, 3, 1, "", "set_platform"]], "pfl.internal.privacy_loss_bound": [[19, 0, 1, "", "ApproximatePrivacyLossBound"], [19, 0, 1, "", "PrivacyLossBound"], [19, 0, 1, "", "RenyiPrivacyLossBound"]], "pfl.internal.privacy_loss_bound.ApproximatePrivacyLossBound": [[19, 1, 1, "", "apply_multiple_times"]], "pfl.internal.privacy_loss_bound.PrivacyLossBound": [[19, 1, 1, "", "apply_multiple_times"]], "pfl.internal.privacy_loss_bound.RenyiPrivacyLossBound": [[19, 1, 1, "", "apply_multiple_times"], [19, 1, 1, "", "convert_to_approximate_dp"]], "pfl.internal.tree": [[20, 2, 0, "-", "gbdt"], [20, 2, 0, "-", "gbdt_adaptive_hyperparameters"], [20, 2, 0, "-", "node"], [20, 2, 0, "-", "questions"]], "pfl.internal.tree.gbdt": [[20, 0, 1, "", "GBDT"], [20, 0, 1, "", "GBDTClassifier"], [20, 0, 1, "", "GBDTRegressor"]], "pfl.internal.tree.gbdt.GBDT": [[20, 1, 1, "", "add_tree"], [20, 1, 1, "", "evaluate"], [20, 1, 1, "", "get_max_min_predictions"], [20, 1, 1, "", "predict"], [20, 1, 1, "", "to_serialized_xgboost"]], "pfl.internal.tree.gbdt.GBDTClassifier": [[20, 1, 1, "", "evaluate"], [20, 1, 1, "", "get_max_min_predictions"], [20, 1, 1, "", "predict"], [20, 1, 1, "", "predict_classes"]], "pfl.internal.tree.gbdt.GBDTRegressor": [[20, 1, 1, "", "evaluate"]], "pfl.internal.tree.gbdt_adaptive_hyperparameters": [[20, 0, 1, "", "ClippingBound"], [20, 0, 1, "", "ComputeSecondOrderGradients"], [20, 0, 1, "", "GBDTAdaptiveHyperparameter"], [20, 0, 1, "", "TrainCohortSize"], [20, 0, 1, "", "ValidationCohortSize"]], "pfl.internal.tree.gbdt_adaptive_hyperparameters.ClippingBound": [[20, 1, 1, "", "current_value"]], "pfl.internal.tree.gbdt_adaptive_hyperparameters.ComputeSecondOrderGradients": [[20, 1, 1, "", "current_value"]], "pfl.internal.tree.gbdt_adaptive_hyperparameters.GBDTAdaptiveHyperparameter": [[20, 1, 1, "", "current_value"]], "pfl.internal.tree.gbdt_adaptive_hyperparameters.TrainCohortSize": [[20, 1, 1, "", "current_value"]], "pfl.internal.tree.gbdt_adaptive_hyperparameters.ValidationCohortSize": [[20, 1, 1, "", "current_value"]], "pfl.internal.tree.node": [[20, 0, 1, "", "Node"], [20, 3, 1, "", "process_xgboost_node"]], "pfl.internal.tree.node.Node": [[20, 1, 1, "", "add_branch_node"], [20, 1, 1, "", "add_leaf_node"], [20, 1, 1, "", "from_serialized_xgboost"], [20, 1, 1, "", "get_leaf_values"], [20, 1, 1, "", "is_leaf"], [20, 1, 1, "", "max_depth"], [20, 1, 1, "", "num_nodes"], [20, 1, 1, "", "predict"], [20, 1, 1, "", "to_serialized_xgboost"], [20, 1, 1, "", "training_complete"]], "pfl.internal.tree.questions": [[20, 0, 1, "", "BoolQuestionGenerator"], [20, 0, 1, "", "FloatEquidistantQuestionGenerator"], [20, 0, 1, "", "FloatRandomQuestionGenerator"], [20, 0, 1, "", "IntEquidistantQuestionGenerator"], [20, 0, 1, "", "IntRandomQuestionGenerator"], [20, 0, 1, "", "QuestionGenerator"]], "pfl.internal.tree.questions.BoolQuestionGenerator": [[20, 1, 1, "", "generate"]], "pfl.internal.tree.questions.FloatEquidistantQuestionGenerator": [[20, 1, 1, "", "generate"]], "pfl.internal.tree.questions.FloatRandomQuestionGenerator": [[20, 1, 1, "", "generate"]], "pfl.internal.tree.questions.IntEquidistantQuestionGenerator": [[20, 1, 1, "", "generate"]], "pfl.internal.tree.questions.IntRandomQuestionGenerator": [[20, 1, 1, "", "generate"]], "pfl.internal.tree.questions.QuestionGenerator": [[20, 1, 1, "", "generate"]], "pfl.metrics": [[21, 0, 1, "", "ComposableMetricName"], [21, 0, 1, "", "Histogram"], [21, 0, 1, "", "MetricName"], [21, 0, 1, "", "MetricNamePostfix"], [21, 0, 1, "", "MetricValue"], [21, 0, 1, "", "Metrics"], [21, 0, 1, "", "MetricsZero"], [21, 0, 1, "", "SkipSerialization"], [21, 0, 1, "", "StringMetricName"], [21, 0, 1, "", "Summed"], [21, 0, 1, "", "TrainMetricName"], [21, 0, 1, "", "Weighted"], [21, 3, 1, "", "get_overall_value"], [21, 3, 1, "", "user_average"]], "pfl.metrics.Histogram": [[21, 1, 1, "", "from_values_bins"], [21, 1, 1, "", "from_values_range"], [21, 1, 1, "", "from_vector"], [21, 4, 1, "", "overall_value"], [21, 1, 1, "", "to_vector"]], "pfl.metrics.MetricValue": [[21, 1, 1, "", "from_vector"], [21, 4, 1, "", "overall_value"], [21, 1, 1, "", "to_vector"]], "pfl.metrics.Metrics": [[21, 1, 1, "", "to_simple_dict"], [21, 1, 1, "", "to_vectors"]], "pfl.metrics.Summed": [[21, 1, 1, "", "from_vector"], [21, 4, 1, "", "overall_value"], [21, 1, 1, "", "to_vector"]], "pfl.metrics.Weighted": [[21, 1, 1, "", "from_vector"], [21, 4, 1, "", "overall_value"], [21, 1, 1, "", "to_vector"]], "pfl.model": [[22, 2, 0, "-", "base"], [22, 2, 0, "-", "ema"], [22, 2, 0, "-", "gaussian_mixture_model"], [22, 2, 0, "-", "pytorch"], [22, 2, 0, "-", "tensorflow"]], "pfl.model.base": [[22, 0, 1, "", "EvaluatableModel"], [22, 0, 1, "", "Model"], [22, 0, 1, "", "StatefulModel"]], "pfl.model.base.EvaluatableModel": [[22, 4, 1, "", "allows_distributed_evaluation"], [22, 1, 1, "", "evaluate"]], "pfl.model.base.Model": [[22, 1, 1, "", "apply_model_update"]], "pfl.model.base.StatefulModel": [[22, 1, 1, "", "get_model_difference"], [22, 1, 1, "", "get_parameters"], [22, 1, 1, "", "set_parameters"]], "pfl.model.ema": [[22, 0, 1, "", "CentralExponentialMovingAverage"]], "pfl.model.ema.CentralExponentialMovingAverage": [[22, 1, 1, "", "assign"], [22, 4, 1, "", "decay"], [22, 1, 1, "", "save"], [22, 4, 1, "", "shadow_variable_map"], [22, 1, 1, "", "update"]], "pfl.model.gaussian_mixture_model": [[22, 0, 1, "", "GMMHyperParams"], [22, 0, 1, "", "GaussianMixtureModel"]], "pfl.model.gaussian_mixture_model.GaussianMixtureModel": [[22, 4, 1, "", "allows_distributed_evaluation"], [22, 1, 1, "", "apply_model_update"], [22, 4, 1, "", "components"], [22, 1, 1, "", "evaluate"], [22, 1, 1, "", "get_mixture_statistics"], [22, 1, 1, "", "global_gaussian"], [22, 1, 1, "", "mix_up"], [22, 4, 1, "", "model"]], "pfl.model.pytorch": [[22, 0, 1, "", "PyTorchModel"]], "pfl.model.pytorch.PyTorchModel": [[22, 4, 1, "", "allows_distributed_evaluation"], [22, 1, 1, "", "apply_model_update"], [22, 1, 1, "", "do_multiple_epochs_of"], [22, 1, 1, "", "evaluate"], [22, 1, 1, "", "get_model_difference"], [22, 1, 1, "", "get_parameters"], [22, 1, 1, "", "load"], [22, 1, 1, "", "save"], [22, 1, 1, "", "set_parameters"]], "pfl.model.tensorflow": [[22, 0, 1, "", "TFModel"]], "pfl.model.tensorflow.TFModel": [[22, 4, 1, "", "allows_distributed_evaluation"], [22, 1, 1, "", "apply_model_update"], [22, 1, 1, "", "do_multiple_epochs_of"], [22, 1, 1, "", "evaluate"], [22, 1, 1, "", "get_model_difference"], [22, 1, 1, "", "get_parameters"], [22, 1, 1, "", "load"], [22, 1, 1, "", "save"], [22, 1, 1, "", "set_parameters"]], "pfl.postprocessor": [[23, 2, 0, "-", "base"], [23, 2, 0, "-", "metrics"]], "pfl.postprocessor.base": [[23, 0, 1, "", "Postprocessor"]], "pfl.postprocessor.base.Postprocessor": [[23, 1, 1, "", "postprocess_one_user"], [23, 1, 1, "", "postprocess_server"], [23, 1, 1, "", "postprocess_server_live"]], "pfl.postprocessor.metrics": [[23, 0, 1, "", "SummaryMetrics"]], "pfl.postprocessor.metrics.SummaryMetrics": [[23, 1, 1, "", "postprocess_one_user"], [23, 1, 1, "", "postprocess_server"]], "pfl.privacy": [[24, 0, 1, "", "JointPrivacyAccountant"], [24, 0, 1, "", "NoPrivacy"], [24, 0, 1, "", "NormClippingOnly"], [24, 0, 1, "", "PLDPrivacyAccountant"], [24, 0, 1, "", "PRVPrivacyAccountant"], [24, 0, 1, "", "PrivacyAccountant"], [24, 0, 1, "", "RDPPrivacyAccountant"], [24, 2, 0, "-", "adaptive_clipping"], [24, 2, 0, "-", "approximate_mechanism"], [24, 2, 0, "-", "compute_parameters"], [24, 2, 0, "-", "ftrl_mechanism"], [24, 2, 0, "-", "gaussian_mechanism"], [24, 2, 0, "-", "joint_mechanism"], [24, 2, 0, "-", "laplace_mechanism"], [24, 2, 0, "-", "privacy_mechanism"], [24, 2, 0, "-", "privacy_snr"]], "pfl.privacy.JointPrivacyAccountant": [[24, 1, 1, "", "check_valid_parameter_settings"], [24, 4, 1, "", "cohort_noise_parameters"], [24, 1, 1, "", "compute_for_each_mechanism"]], "pfl.privacy.NoPrivacy": [[24, 1, 1, "", "add_noise"], [24, 1, 1, "", "constrain_sensitivity"]], "pfl.privacy.PrivacyAccountant": [[24, 4, 1, "", "cohort_noise_parameter"]], "pfl.privacy.adaptive_clipping": [[24, 0, 1, "", "AdaptiveClippingGaussianMechanism"], [24, 0, 1, "", "MutableClippingBound"]], "pfl.privacy.adaptive_clipping.AdaptiveClippingGaussianMechanism": [[24, 1, 1, "", "construct_from_privacy_accountant"], [24, 1, 1, "", "postprocess_one_user"], [24, 1, 1, "", "postprocess_server"], [24, 1, 1, "", "postprocess_server_live"]], "pfl.privacy.adaptive_clipping.MutableClippingBound": [[24, 1, 1, "", "value"]], "pfl.privacy.approximate_mechanism": [[24, 0, 1, "", "GaussianApproximatedPrivacyMechanism"], [24, 0, 1, "", "SquaredErrorLocalPrivacyMechanism"]], "pfl.privacy.approximate_mechanism.GaussianApproximatedPrivacyMechanism": [[24, 1, 1, "", "postprocess_one_user"], [24, 1, 1, "", "postprocess_server"]], "pfl.privacy.approximate_mechanism.SquaredErrorLocalPrivacyMechanism": [[24, 1, 1, "", "add_noise_squared_error"], [24, 1, 1, "", "approximate_as_central_mechanism"], [24, 1, 1, "", "get_squared_error"], [24, 1, 1, "", "sensitivity_scaling"], [24, 1, 1, "", "sensitivity_squared_error"]], "pfl.privacy.compute_parameters": [[24, 3, 1, "", "AnalyticGM_robust"], [24, 3, 1, "", "AnalyticGM_robust_impl"]], "pfl.privacy.ftrl_mechanism": [[24, 0, 1, "", "BandedMatrixFactorizationMechanism"], [24, 0, 1, "", "FTRLMatrixFactorizer"], [24, 0, 1, "", "ForwardSubstitution"]], "pfl.privacy.ftrl_mechanism.BandedMatrixFactorizationMechanism": [[24, 1, 1, "", "add_noise"]], "pfl.privacy.ftrl_mechanism.FTRLMatrixFactorizer": [[24, 1, 1, "", "optimize"]], "pfl.privacy.ftrl_mechanism.ForwardSubstitution": [[24, 1, 1, "", "step"]], "pfl.privacy.gaussian_mechanism": [[24, 0, 1, "", "GaussianMechanism"]], "pfl.privacy.gaussian_mechanism.GaussianMechanism": [[24, 1, 1, "", "add_noise"], [24, 1, 1, "", "add_noise_squared_error"], [24, 1, 1, "", "construct_single_iteration"], [24, 1, 1, "", "from_privacy_accountant"], [24, 1, 1, "", "sensitivity_scaling"], [24, 1, 1, "", "sensitivity_squared_error"]], "pfl.privacy.joint_mechanism": [[24, 0, 1, "", "JointMechanism"]], "pfl.privacy.joint_mechanism.JointMechanism": [[24, 1, 1, "", "add_noise"], [24, 1, 1, "", "constrain_sensitivity"]], "pfl.privacy.laplace_mechanism": [[24, 0, 1, "", "LaplaceMechanism"]], "pfl.privacy.laplace_mechanism.LaplaceMechanism": [[24, 1, 1, "", "add_noise"], [24, 1, 1, "", "add_noise_squared_error"], [24, 1, 1, "", "sensitivity_scaling"], [24, 1, 1, "", "sensitivity_squared_error"]], "pfl.privacy.privacy_mechanism": [[24, 0, 1, "", "CentralPrivacyMechanism"], [24, 0, 1, "", "CentrallyApplicablePrivacyMechanism"], [24, 0, 1, "", "CentrallyAppliedPrivacyMechanism"], [24, 0, 1, "", "LocalPrivacyMechanism"], [24, 0, 1, "", "NormClipping"], [24, 0, 1, "", "PrivacyMechanism"], [24, 0, 1, "", "PrivacyMetricName"], [24, 0, 1, "", "SplitPrivacyMechanism"]], "pfl.privacy.privacy_mechanism.CentrallyAppliedPrivacyMechanism": [[24, 1, 1, "", "postprocess_one_user"], [24, 1, 1, "", "postprocess_server"], [24, 1, 1, "", "postprocess_server_live"]], "pfl.privacy.privacy_mechanism.LocalPrivacyMechanism": [[24, 1, 1, "", "postprocess_one_user"], [24, 1, 1, "", "postprocess_server"], [24, 1, 1, "", "postprocess_server_live"], [24, 1, 1, "", "privatize"]], "pfl.privacy.privacy_mechanism.NormClipping": [[24, 1, 1, "", "constrain_sensitivity"]], "pfl.privacy.privacy_mechanism.SplitPrivacyMechanism": [[24, 1, 1, "", "add_noise"], [24, 1, 1, "", "constrain_sensitivity"], [24, 1, 1, "", "privatize"]], "pfl.privacy.privacy_snr": [[24, 0, 1, "", "SNRMetric"]], "pfl.privacy.privacy_snr.SNRMetric": [[24, 1, 1, "", "from_vector"], [24, 4, 1, "", "overall_value"], [24, 4, 1, "", "signal_l2_norm"], [24, 4, 1, "", "squared_error"], [24, 1, 1, "", "to_vector"]], "pfl.stats": [[25, 0, 1, "", "ElementWeightedMappedVectorStatistics"], [25, 0, 1, "", "MappedVectorStatistics"], [25, 0, 1, "", "TensorLike"], [25, 0, 1, "", "TrainingStatistics"], [25, 0, 1, "", "WeightedStatistics"]], "pfl.stats.ElementWeightedMappedVectorStatistics": [[25, 1, 1, "", "average"], [25, 1, 1, "", "from_weights"], [25, 1, 1, "", "get_weights"], [25, 1, 1, "", "reweight"], [25, 4, 1, "", "weight"]], "pfl.stats.MappedVectorStatistics": [[25, 1, 1, "", "from_weights"], [25, 1, 1, "", "get_weights"], [25, 4, 1, "", "num_parameters"], [25, 1, 1, "", "reweight"]], "pfl.stats.TrainingStatistics": [[25, 1, 1, "", "apply"], [25, 1, 1, "", "apply_elementwise"], [25, 1, 1, "", "from_weights"], [25, 1, 1, "", "get_weights"], [25, 4, 1, "", "num_parameters"]], "pfl.stats.WeightedStatistics": [[25, 1, 1, "", "average"], [25, 1, 1, "", "reweight"], [25, 4, 1, "", "weight"]], "pfl.tree": [[26, 2, 0, "-", "federated_gbdt"], [26, 2, 0, "-", "gbdt_model"], [26, 2, 0, "-", "tree_utils"]], "pfl.tree.federated_gbdt": [[26, 0, 1, "", "FederatedGBDT"], [26, 0, 1, "", "GBDTAlgorithmHyperParams"], [26, 0, 1, "", "GBDTClippingBound"]], "pfl.tree.federated_gbdt.FederatedGBDT": [[26, 1, 1, "", "postprocess_training_statistics"], [26, 1, 1, "", "process_aggregated_statistics"], [26, 1, 1, "", "simulate_one_user"]], "pfl.tree.federated_gbdt.GBDTClippingBound": [[26, 1, 1, "", "after_central_iteration"], [26, 1, 1, "", "on_train_begin"], [26, 1, 1, "", "value"]], "pfl.tree.gbdt_model": [[26, 0, 1, "", "GBDTClassificationModelHyperParams"], [26, 0, 1, "", "GBDTModel"], [26, 0, 1, "", "GBDTModelClassifier"], [26, 0, 1, "", "GBDTModelHyperParams"], [26, 0, 1, "", "GBDTModelRegressor"], [26, 0, 1, "", "NodeRecord"]], "pfl.tree.gbdt_model.GBDTModel": [[26, 1, 1, "", "apply_model_update"], [26, 1, 1, "", "compute_first_order_gradient"], [26, 1, 1, "", "compute_second_order_gradient"], [26, 4, 1, "", "current_depth"], [26, 4, 1, "", "current_tree"], [26, 1, 1, "", "evaluate"], [26, 1, 1, "", "load"], [26, 1, 1, "", "predict"], [26, 1, 1, "", "save"]], "pfl.tree.gbdt_model.GBDTModelClassifier": [[26, 1, 1, "", "compute_first_order_gradient"], [26, 1, 1, "", "compute_second_order_gradient"], [26, 1, 1, "", "predict_classes"]], "pfl.tree.gbdt_model.GBDTModelRegressor": [[26, 1, 1, "", "compute_first_order_gradient"], [26, 1, 1, "", "compute_second_order_gradient"]], "pfl.tree.tree_utils": [[26, 0, 1, "", "Feature"], [26, 3, 1, "", "choose_questions"]], "pfl.tree.tree_utils.Feature": [[26, 1, 1, "", "generate_feature_questions"]], "typing": [[12, 6, 1, "", "ParameterType"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function", "4": "py:property", "5": "py:exception", "6": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "data", "Python data"]}, "titleterms": {"feder": [0, 2, 5, 9], "learn": [0, 2, 5], "pfl": [0, 2, 3], "cross": 0, "devic": 0, "prepar": 0, "data": [0, 4, 9, 20], "defin": 0, "model": [0, 22, 26], "fl": 0, "algorithm": [0, 5, 26], "averag": [0, 5, 22], "reptil": 0, "fine": 0, "tune": 0, "person": 0, "gradient": [0, 26], "boost": [0, 26], "decis": [0, 26], "tree": [0, 20, 26], "implement": 0, "new": 0, "from": [0, 3], "incorpor": 0, "privaci": [0, 19, 24], "fast": 1, "distribut": [1, 15, 17], "simul": [1, 2], "quickstart": 1, "horovod": 1, "multi": 1, "gpu": 1, "train": [1, 25], "process": [1, 27], "machin": 1, "nativ": 1, "tf": 1, "pytorch": [1, 14, 17, 22], "librari": 1, "central": [1, 24], "evalu": 1, "dataset": [1, 9], "python": 2, "framework": 2, "privat": 2, "get": 2, "start": 2, "support": 2, "refer": 2, "indic": 2, "tabl": 2, "instal": 3, "pypi": 3, "sourc": 3, "backend": 4, "aggreg": 4, "transport": 4, "weight": 4, "abstract": [5, 22, 24], "base": [5, 14, 22, 24], "class": [5, 14, 22, 24], "fedprox": 5, "meta": 5, "personalis": 5, "expect": 5, "maxim": 5, "gmm": 5, "util": [5, 24, 26], "callback": 6, "type": 7, "context": 8, "user": 9, "sampl": 9, "partit": 9, "state": 9, "environ": [10, 27], "variabl": 10, "except": 11, "hyperparamet": [12, 20], "bisect": 13, "bridg": 14, "factori": 14, "numpi": [14, 17], "tensorflow": [14, 17, 22], "diagon": 15, "gaussian": [15, 22], "log": 15, "float": 15, "function": 15, "mixtur": [15, 22], "intern": 16, "api": 16, "op": 17, "selector": [17, 18], "common": 17, "platform": 18, "gener": 18, "loss": 19, "bound": 19, "struct": 20, "gbdt": 20, "adapt": [20, 24], "split": 20, "question": 20, "metric": [21, 24], "exponenti": 22, "move": 22, "postprocessor": 23, "differenti": 24, "mechan": 24, "account": 24, "joint": 24, "dp": 24, "clip": 24, "approxim": 24, "local": 24, "statist": 25, "contribut": 27, "set": 27, "up": 27, "develop": 27, "compil": 27, "document": 27, "code": 27, "standard": 27, "test": 27, "packag": 27, "depend": 27, "structur": 27, "make": 27, "pull": 27, "request": 27}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx_last_updated_by_git": 1, "sphinx": 60}, "alltitles": {"Federated learning with pfl": [[0, "federated-learning-with-pfl"]], "Cross-device federated learning": [[0, "cross-device-federated-learning"]], "Preparing data": [[0, "preparing-data"]], "Defining a model": [[0, "defining-a-model"]], "FL algorithms in pfl": [[0, "fl-algorithms-in-pfl"]], "Federated averaging": [[0, "id2"], [5, "module-pfl.algorithm.federated_averaging"]], "Reptile: FL with fine-tuning (personalization)": [[0, "reptile-fl-with-fine-tuning-personalization"]], "Gradient Boosted Decision Trees": [[0, "gradient-boosted-decision-trees"]], "Implementing new FL algorithms in pfl": [[0, "implementing-new-fl-algorithms-in-pfl"]], "From FL to PFL: Incorporating Privacy": [[0, "from-fl-to-pfl-incorporating-privacy"]], "Fast distributed simulations": [[1, "fast-distributed-simulations"]], "Quickstart": [[1, "quickstart"]], "Distributed simulation with Horovod": [[1, "distributed-simulation-with-horovod"]], "Multi-GPU training": [[1, "multi-gpu-training"], [1, "id4"]], "Multi-process training": [[1, "multi-process-training"], [1, "id5"]], "Multi-machine training": [[1, "multi-machine-training"], [1, "id6"]], "Distributed simulation with native TF/PyTorch libraries": [[1, "distributed-simulation-with-native-tf-pytorch-libraries"]], "Central evaluation": [[1, "central-evaluation"]], "Native datasets": [[1, "native-datasets"]], "pfl: Python framework for Private Federated Learning simulations": [[2, "pfl-python-framework-for-private-federated-learning-simulations"]], "Getting Started:": [[2, null]], "Support": [[2, null]], "Reference": [[2, null]], "Indices and tables": [[2, "indices-and-tables"]], "Installation": [[3, "installation"]], "Install pfl from PyPi": [[3, "install-pfl-from-pypi"]], "Install pfl from source": [[3, "install-pfl-from-source"]], "Backend": [[4, "backend"]], "Aggregator": [[4, "aggregator"]], "Data transport": [[4, "module-pfl.aggregate.data_transport"]], "Weighting": [[4, "module-pfl.aggregate.weighting"]], "Algorithms": [[5, "algorithms"], [26, "module-pfl.tree.federated_gbdt"]], "Abstract base classes": [[5, "module-pfl.algorithm.base"], [22, "module-pfl.model.base"], [24, "module-pfl.privacy.privacy_mechanism"]], "Federated learning": [[5, "federated-learning"]], "FedProx": [[5, "fedprox"]], "Meta-learning / personalisation": [[5, "module-pfl.algorithm.reptile"]], "Expectation maximization GMM": [[5, "module-pfl.algorithm.expectation_maximization_gmm"]], "Utils": [[5, "module-pfl.algorithm.algorithm_utils"], [26, "module-pfl.tree.tree_utils"]], "Callbacks": [[6, "callbacks"]], "Types": [[7, "types"]], "Context": [[8, "module-pfl.context"]], "Data": [[9, "data"]], "User dataset": [[9, "module-pfl.data.dataset"]], "Federated dataset": [[9, "module-pfl.data.federated_dataset"]], "Sampling": [[9, "module-pfl.data.sampling"]], "Partitioning": [[9, "module-pfl.data.partition"]], "User state": [[9, "module-pfl.data.user_state"]], "Environment variables": [[10, "environment-variables"]], "Exception": [[11, "exception"]], "Hyperparameters": [[12, "hyperparameters"]], "Bisect": [[13, "module-pfl.internal.bisect"]], "Bridges": [[14, "bridges"]], "Bridge base classes": [[14, "module-pfl.internal.bridge.base"]], "Bridge Factory": [[14, "module-pfl.internal.bridge.factory"]], "Numpy Bridges": [[14, "module-pfl.internal.bridge.numpy.common"]], "PyTorch Bridges": [[14, "module-pfl.internal.bridge.pytorch.common"]], "TensorFlow Bridges": [[14, "module-pfl.internal.bridge.tensorflow.common"]], "Distribution": [[15, "module-pfl.internal.distribution.distribution"]], "Diagonal Gaussian": [[15, "module-pfl.internal.distribution.diagonal_gaussian"]], "Log float": [[15, "module-pfl.internal.distribution.log_float"]], "Log float functions": [[15, "module-pfl.internal.distribution.log_float_functions"]], "Mixture": [[15, "module-pfl.internal.distribution.mixture"]], "Internal API": [[16, "internal-api"], [16, null]], "Ops": [[17, "module-pfl.internal.ops.framework_types"]], "Selector": [[17, "module-pfl.internal.ops.selector"], [18, "module-pfl.internal.platform.selector"]], "Common ops": [[17, "module-pfl.internal.ops.common_ops"]], "Distributed ops": [[17, "module-pfl.internal.ops.distributed"]], "Numpy ops": [[17, "module-pfl.internal.ops.numpy_ops"]], "PyTorch ops": [[17, "module-pfl.internal.ops.pytorch_ops"]], "TensorFlow ops": [[17, "module-pfl.internal.ops.tensorflow_ops"]], "Platform": [[18, "platform"]], "Generic platform": [[18, "module-pfl.internal.platform.generic_platform"]], "Privacy loss bound": [[19, "module-pfl.internal.privacy_loss_bound"]], "Tree": [[20, "tree"]], "Tree data structs": [[20, "module-pfl.internal.tree.gbdt"]], "GBDT adaptive hyperparameters": [[20, "module-pfl.internal.tree.gbdt_adaptive_hyperparameters"]], "Tree split questions": [[20, "module-pfl.internal.tree.questions"]], "Metrics": [[21, "module-pfl.metrics"]], "Models": [[22, "models"], [26, "module-pfl.tree.gbdt_model"]], "TensorFlow": [[22, "module-pfl.model.tensorflow"]], "PyTorch": [[22, "module-pfl.model.pytorch"]], "Gaussian mixture model": [[22, "gaussian-mixture-model"]], "Exponential moving average": [[22, "module-pfl.model.ema"]], "Postprocessor": [[23, "postprocessor"]], "Differential privacy": [[24, "differential-privacy"]], "Privacy mechanisms": [[24, "privacy-mechanisms"]], "Privacy accountants": [[24, "privacy-accountants"]], "Joint Privacy accountants": [[24, "joint-privacy-accountants"]], "DP with adaptive clipping": [[24, "module-pfl.privacy.adaptive_clipping"]], "Approximate local DP with central DP": [[24, "module-pfl.privacy.approximate_mechanism"]], "DP metrics": [[24, "module-pfl.privacy.privacy_snr"]], "DP utilities": [[24, "module-pfl.privacy.compute_parameters"]], "Training statistics": [[25, "module-pfl.stats"]], "Gradient boosted decision trees": [[26, "gradient-boosted-decision-trees"]], "Contributing": [[27, "contributing"]], "Setting up development environment": [[27, "setting-up-development-environment"]], "Compiling the documentation": [[27, "compiling-the-documentation"]], "Contributing to code": [[27, "contributing-to-code"]], "Development process": [[27, "development-process"]], "Standardizing the code": [[27, "standardizing-the-code"]], "Testing": [[27, "testing"]], "Package dependencies": [[27, "package-dependencies"]], "Code structure": [[27, "code-structure"]], "Making a pull request": [[27, "making-a-pull-request"]]}, "indexentries": {"aggregator (class in pfl.aggregate.base)": [[4, "pfl.aggregate.base.Aggregator"]], "bfloat16datatransport (class in pfl.aggregate.data_transport)": [[4, "pfl.aggregate.data_transport.BFloat16DataTransport"]], "backend (class in pfl.aggregate.base)": [[4, "pfl.aggregate.base.Backend"]], "datatransport (class in pfl.aggregate.data_transport)": [[4, "pfl.aggregate.data_transport.DataTransport"]], "float32datatransport (class in pfl.aggregate.data_transport)": [[4, "pfl.aggregate.data_transport.Float32DataTransport"]], "simulatedbackend (class in pfl.aggregate.simulate)": [[4, "pfl.aggregate.simulate.SimulatedBackend"]], "sumaggregator (class in pfl.aggregate.base)": [[4, "pfl.aggregate.base.SumAggregator"]], "weightbydatapoints (class in pfl.aggregate.weighting)": [[4, "pfl.aggregate.weighting.WeightByDatapoints"]], "weightbyuser (class in pfl.aggregate.weighting)": [[4, "pfl.aggregate.weighting.WeightByUser"]], "weightingstrategy (class in pfl.aggregate.weighting)": [[4, "pfl.aggregate.weighting.WeightingStrategy"]], "accumulate() (pfl.aggregate.base.aggregator method)": [[4, "pfl.aggregate.base.Aggregator.accumulate"]], "accumulate() (pfl.aggregate.base.sumaggregator method)": [[4, "pfl.aggregate.base.SumAggregator.accumulate"]], "async_gather_results() (pfl.aggregate.base.backend method)": [[4, "pfl.aggregate.base.Backend.async_gather_results"]], "async_gather_results() (pfl.aggregate.simulate.simulatedbackend method)": [[4, "pfl.aggregate.simulate.SimulatedBackend.async_gather_results"]], "gather_results() (pfl.aggregate.base.backend method)": [[4, "pfl.aggregate.base.Backend.gather_results"]], "module": [[4, "module-pfl.aggregate.data_transport"], [4, "module-pfl.aggregate.weighting"], [5, "module-pfl.algorithm.algorithm_utils"], [5, "module-pfl.algorithm.base"], [5, "module-pfl.algorithm.expectation_maximization_gmm"], [5, "module-pfl.algorithm.federated_averaging"], [5, "module-pfl.algorithm.reptile"], [6, "module-pfl.callback"], [7, "module-pfl.common_types"], [8, "module-pfl.context"], [9, "module-pfl.data.dataset"], [9, "module-pfl.data.federated_dataset"], [9, "module-pfl.data.partition"], [9, "module-pfl.data.pytorch"], [9, "module-pfl.data.sampling"], [9, "module-pfl.data.tensorflow"], [9, "module-pfl.data.user_state"], [11, "module-pfl.exception"], [12, "module-pfl.hyperparam.base"], [13, "module-pfl.internal.bisect"], [14, "module-pfl.internal.bridge.base"], [14, "module-pfl.internal.bridge.factory"], [14, "module-pfl.internal.bridge.numpy.common"], [14, "module-pfl.internal.bridge.pytorch.common"], [14, "module-pfl.internal.bridge.pytorch.ftrl"], [14, "module-pfl.internal.bridge.pytorch.proximal"], [14, "module-pfl.internal.bridge.pytorch.sgd"], [14, "module-pfl.internal.bridge.tensorflow.common"], [14, "module-pfl.internal.bridge.tensorflow.ftrl"], [14, "module-pfl.internal.bridge.tensorflow.proximal"], [14, "module-pfl.internal.bridge.tensorflow.sgd"], [15, "module-pfl.internal.distribution.diagonal_gaussian"], [15, "module-pfl.internal.distribution.distribution"], [15, "module-pfl.internal.distribution.log_float"], [15, "module-pfl.internal.distribution.log_float_functions"], [15, "module-pfl.internal.distribution.mixture"], [17, "module-pfl.internal.ops.common_ops"], [17, "module-pfl.internal.ops.distributed"], [17, "module-pfl.internal.ops.framework_types"], [17, "module-pfl.internal.ops.numpy_ops"], [17, "module-pfl.internal.ops.pytorch_ops"], [17, "module-pfl.internal.ops.selector"], [17, "module-pfl.internal.ops.tensorflow_ops"], [18, "module-pfl.internal.platform.generic_platform"], [18, "module-pfl.internal.platform.selector"], [19, "module-pfl.internal.privacy_loss_bound"], [20, "module-pfl.internal.tree.gbdt"], [20, "module-pfl.internal.tree.gbdt_adaptive_hyperparameters"], [20, "module-pfl.internal.tree.node"], [20, "module-pfl.internal.tree.questions"], [21, "module-pfl.metrics"], [22, "module-pfl.model.base"], [22, "module-pfl.model.ema"], [22, "module-pfl.model.gaussian_mixture_model"], [22, "module-pfl.model.pytorch"], [22, "module-pfl.model.tensorflow"], [23, "module-pfl.postprocessor.base"], [23, "module-pfl.postprocessor.metrics"], [24, "module-pfl.privacy.adaptive_clipping"], [24, "module-pfl.privacy.approximate_mechanism"], [24, "module-pfl.privacy.compute_parameters"], [24, "module-pfl.privacy.ftrl_mechanism"], [24, "module-pfl.privacy.gaussian_mechanism"], [24, "module-pfl.privacy.joint_mechanism"], [24, "module-pfl.privacy.laplace_mechanism"], [24, "module-pfl.privacy.privacy_mechanism"], [24, "module-pfl.privacy.privacy_snr"], [25, "module-pfl.stats"], [26, "module-pfl.tree.federated_gbdt"], [26, "module-pfl.tree.gbdt_model"], [26, "module-pfl.tree.tree_utils"]], "pfl.aggregate.data_transport": [[4, "module-pfl.aggregate.data_transport"]], "pfl.aggregate.weighting": [[4, "module-pfl.aggregate.weighting"]], "postprocess_one_user() (pfl.aggregate.data_transport.bfloat16datatransport method)": [[4, "pfl.aggregate.data_transport.BFloat16DataTransport.postprocess_one_user"]], "postprocess_one_user() (pfl.aggregate.data_transport.datatransport method)": [[4, "pfl.aggregate.data_transport.DataTransport.postprocess_one_user"]], "postprocess_one_user() (pfl.aggregate.data_transport.float32datatransport method)": [[4, "pfl.aggregate.data_transport.Float32DataTransport.postprocess_one_user"]], "postprocess_one_user() (pfl.aggregate.weighting.weightbydatapoints method)": [[4, "pfl.aggregate.weighting.WeightByDatapoints.postprocess_one_user"]], "postprocess_one_user() (pfl.aggregate.weighting.weightbyuser method)": [[4, "pfl.aggregate.weighting.WeightByUser.postprocess_one_user"]], "postprocess_one_user() (pfl.aggregate.weighting.weightingstrategy method)": [[4, "pfl.aggregate.weighting.WeightingStrategy.postprocess_one_user"]], "worker_reduce() (pfl.aggregate.base.aggregator method)": [[4, "pfl.aggregate.base.Aggregator.worker_reduce"]], "worker_reduce() (pfl.aggregate.base.sumaggregator method)": [[4, "pfl.aggregate.base.SumAggregator.worker_reduce"]], "worker_reduce_metrics_only() (pfl.aggregate.base.aggregator method)": [[4, "pfl.aggregate.base.Aggregator.worker_reduce_metrics_only"]], "worker_reduce_metrics_only() (pfl.aggregate.base.sumaggregator method)": [[4, "pfl.aggregate.base.SumAggregator.worker_reduce_metrics_only"]], "adaptmuonmetriccallback (class in pfl.algorithm.fedprox)": [[5, "pfl.algorithm.fedprox.AdaptMuOnMetricCallback"]], "emgmmhyperparams (class in pfl.algorithm.expectation_maximization_gmm)": [[5, "pfl.algorithm.expectation_maximization_gmm.EMGMMHyperParams"]], "expectationmaximizationgmm (class in pfl.algorithm.expectation_maximization_gmm)": [[5, "pfl.algorithm.expectation_maximization_gmm.ExpectationMaximizationGMM"]], "fedprox (class in pfl.algorithm.fedprox)": [[5, "pfl.algorithm.fedprox.FedProx"]], "fedproxparams (class in pfl.algorithm.fedprox)": [[5, "pfl.algorithm.fedprox.FedProxParams"]], "federatedalgorithm (class in pfl.algorithm.base)": [[5, "pfl.algorithm.base.FederatedAlgorithm"]], "federatedaveraging (class in pfl.algorithm.federated_averaging)": [[5, "pfl.algorithm.federated_averaging.FederatedAveraging"]], "federatednnalgorithm (class in pfl.algorithm.base)": [[5, "pfl.algorithm.base.FederatedNNAlgorithm"]], "nnalgorithmparams (class in pfl.algorithm.base)": [[5, "pfl.algorithm.base.NNAlgorithmParams"]], "personalizednnalgorithm (class in pfl.algorithm.base)": [[5, "pfl.algorithm.base.PersonalizedNNAlgorithm"]], "personalizednnalgorithmparams (class in pfl.algorithm.base)": [[5, "pfl.algorithm.base.PersonalizedNNAlgorithmParams"]], "reptile (class in pfl.algorithm.reptile)": [[5, "pfl.algorithm.reptile.Reptile"]], "after_central_iteration() (pfl.algorithm.fedprox.adaptmuonmetriccallback method)": [[5, "pfl.algorithm.fedprox.AdaptMuOnMetricCallback.after_central_iteration"]], "load() (pfl.algorithm.base.federatedalgorithm method)": [[5, "pfl.algorithm.base.FederatedAlgorithm.load"]], "make_compute_new_num_components() (in module pfl.algorithm.expectation_maximization_gmm)": [[5, "pfl.algorithm.expectation_maximization_gmm.make_compute_new_num_components"]], "pfl.algorithm.algorithm_utils": [[5, "module-pfl.algorithm.algorithm_utils"]], "pfl.algorithm.base": [[5, "module-pfl.algorithm.base"]], "pfl.algorithm.expectation_maximization_gmm": [[5, "module-pfl.algorithm.expectation_maximization_gmm"]], "pfl.algorithm.federated_averaging": [[5, "module-pfl.algorithm.federated_averaging"]], "pfl.algorithm.reptile": [[5, "module-pfl.algorithm.reptile"]], "process_aggregated_statistics() (pfl.algorithm.base.federatedalgorithm method)": [[5, "pfl.algorithm.base.FederatedAlgorithm.process_aggregated_statistics"]], "process_aggregated_statistics() (pfl.algorithm.expectation_maximization_gmm.expectationmaximizationgmm method)": [[5, "pfl.algorithm.expectation_maximization_gmm.ExpectationMaximizationGMM.process_aggregated_statistics"]], "process_aggregated_statistics() (pfl.algorithm.federated_averaging.federatedaveraging method)": [[5, "pfl.algorithm.federated_averaging.FederatedAveraging.process_aggregated_statistics"]], "process_aggregated_statistics_from_all_contexts() (pfl.algorithm.base.federatedalgorithm method)": [[5, "pfl.algorithm.base.FederatedAlgorithm.process_aggregated_statistics_from_all_contexts"]], "run() (pfl.algorithm.base.federatedalgorithm method)": [[5, "pfl.algorithm.base.FederatedAlgorithm.run"]], "run_train_eval() (in module pfl.algorithm.algorithm_utils)": [[5, "pfl.algorithm.algorithm_utils.run_train_eval"]], "save() (pfl.algorithm.base.federatedalgorithm method)": [[5, "pfl.algorithm.base.FederatedAlgorithm.save"]], "simulate_one_user() (pfl.algorithm.base.federatedalgorithm method)": [[5, "pfl.algorithm.base.FederatedAlgorithm.simulate_one_user"]], "simulate_one_user() (pfl.algorithm.base.federatednnalgorithm method)": [[5, "pfl.algorithm.base.FederatedNNAlgorithm.simulate_one_user"]], "simulate_one_user() (pfl.algorithm.base.personalizednnalgorithm method)": [[5, "pfl.algorithm.base.PersonalizedNNAlgorithm.simulate_one_user"]], "simulate_one_user() (pfl.algorithm.expectation_maximization_gmm.expectationmaximizationgmm method)": [[5, "pfl.algorithm.expectation_maximization_gmm.ExpectationMaximizationGMM.simulate_one_user"]], "value() (pfl.algorithm.fedprox.adaptmuonmetriccallback method)": [[5, "pfl.algorithm.fedprox.AdaptMuOnMetricCallback.value"]], "aggregatemetricstodisk (class in pfl.callback)": [[6, "pfl.callback.AggregateMetricsToDisk"]], "centralevaluationcallback (class in pfl.callback)": [[6, "pfl.callback.CentralEvaluationCallback"]], "centralevaluationwithemacallback (class in pfl.callback)": [[6, "pfl.callback.CentralEvaluationWithEMACallback"]], "checkpointpolicy (class in pfl.callback)": [[6, "pfl.callback.CheckpointPolicy"]], "convergencecallback (class in pfl.callback)": [[6, "pfl.callback.ConvergenceCallback"]], "earlystoppingcallback (class in pfl.callback)": [[6, "pfl.callback.EarlyStoppingCallback"]], "iterationfrequencycheckpointpolicy (class in pfl.callback)": [[6, "pfl.callback.IterationFrequencyCheckpointPolicy"]], "metricimprovementcheckpointpolicy (class in pfl.callback)": [[6, "pfl.callback.MetricImprovementCheckpointPolicy"]], "modelcheckpointingcallback (class in pfl.callback)": [[6, "pfl.callback.ModelCheckpointingCallback"]], "policybasedmodelcheckpointingcallback (class in pfl.callback)": [[6, "pfl.callback.PolicyBasedModelCheckpointingCallback"]], "profilercallback (class in pfl.callback)": [[6, "pfl.callback.ProfilerCallback"]], "restoretrainingcallback (class in pfl.callback)": [[6, "pfl.callback.RestoreTrainingCallback"]], "stopwatchcallback (class in pfl.callback)": [[6, "pfl.callback.StopwatchCallback"]], "tensorboardcallback (class in pfl.callback)": [[6, "pfl.callback.TensorBoardCallback"]], "trackbestoverallmetrics (class in pfl.callback)": [[6, "pfl.callback.TrackBestOverallMetrics"]], "trainingprocesscallback (class in pfl.callback)": [[6, "pfl.callback.TrainingProcessCallback"]], "wandbcallback (class in pfl.callback)": [[6, "pfl.callback.WandbCallback"]], "after_central_iteration() (pfl.callback.aggregatemetricstodisk method)": [[6, "pfl.callback.AggregateMetricsToDisk.after_central_iteration"]], "after_central_iteration() (pfl.callback.centralevaluationcallback method)": [[6, "pfl.callback.CentralEvaluationCallback.after_central_iteration"]], "after_central_iteration() (pfl.callback.centralevaluationwithemacallback method)": [[6, "pfl.callback.CentralEvaluationWithEMACallback.after_central_iteration"]], "after_central_iteration() (pfl.callback.convergencecallback method)": [[6, "pfl.callback.ConvergenceCallback.after_central_iteration"]], "after_central_iteration() (pfl.callback.earlystoppingcallback method)": [[6, "pfl.callback.EarlyStoppingCallback.after_central_iteration"]], "after_central_iteration() (pfl.callback.policybasedmodelcheckpointingcallback method)": [[6, "pfl.callback.PolicyBasedModelCheckpointingCallback.after_central_iteration"]], "after_central_iteration() (pfl.callback.profilercallback method)": [[6, "pfl.callback.ProfilerCallback.after_central_iteration"]], "after_central_iteration() (pfl.callback.restoretrainingcallback method)": [[6, "pfl.callback.RestoreTrainingCallback.after_central_iteration"]], "after_central_iteration() (pfl.callback.stopwatchcallback method)": [[6, "pfl.callback.StopwatchCallback.after_central_iteration"]], "after_central_iteration() (pfl.callback.tensorboardcallback method)": [[6, "pfl.callback.TensorBoardCallback.after_central_iteration"]], "after_central_iteration() (pfl.callback.trackbestoverallmetrics method)": [[6, "pfl.callback.TrackBestOverallMetrics.after_central_iteration"]], "after_central_iteration() (pfl.callback.trainingprocesscallback method)": [[6, "pfl.callback.TrainingProcessCallback.after_central_iteration"]], "after_central_iteration() (pfl.callback.wandbcallback method)": [[6, "pfl.callback.WandbCallback.after_central_iteration"]], "on_train_begin() (pfl.callback.aggregatemetricstodisk method)": [[6, "pfl.callback.AggregateMetricsToDisk.on_train_begin"]], "on_train_begin() (pfl.callback.centralevaluationcallback method)": [[6, "pfl.callback.CentralEvaluationCallback.on_train_begin"]], "on_train_begin() (pfl.callback.centralevaluationwithemacallback method)": [[6, "pfl.callback.CentralEvaluationWithEMACallback.on_train_begin"]], "on_train_begin() (pfl.callback.profilercallback method)": [[6, "pfl.callback.ProfilerCallback.on_train_begin"]], "on_train_begin() (pfl.callback.restoretrainingcallback method)": [[6, "pfl.callback.RestoreTrainingCallback.on_train_begin"]], "on_train_begin() (pfl.callback.stopwatchcallback method)": [[6, "pfl.callback.StopwatchCallback.on_train_begin"]], "on_train_begin() (pfl.callback.tensorboardcallback method)": [[6, "pfl.callback.TensorBoardCallback.on_train_begin"]], "on_train_begin() (pfl.callback.trackbestoverallmetrics method)": [[6, "pfl.callback.TrackBestOverallMetrics.on_train_begin"]], "on_train_begin() (pfl.callback.trainingprocesscallback method)": [[6, "pfl.callback.TrainingProcessCallback.on_train_begin"]], "on_train_begin() (pfl.callback.wandbcallback method)": [[6, "pfl.callback.WandbCallback.on_train_begin"]], "on_train_end() (pfl.callback.aggregatemetricstodisk method)": [[6, "pfl.callback.AggregateMetricsToDisk.on_train_end"]], "on_train_end() (pfl.callback.policybasedmodelcheckpointingcallback method)": [[6, "pfl.callback.PolicyBasedModelCheckpointingCallback.on_train_end"]], "on_train_end() (pfl.callback.profilercallback method)": [[6, "pfl.callback.ProfilerCallback.on_train_end"]], "on_train_end() (pfl.callback.tensorboardcallback method)": [[6, "pfl.callback.TensorBoardCallback.on_train_end"]], "on_train_end() (pfl.callback.trainingprocesscallback method)": [[6, "pfl.callback.TrainingProcessCallback.on_train_end"]], "on_train_end() (pfl.callback.wandbcallback method)": [[6, "pfl.callback.WandbCallback.on_train_end"]], "pfl.callback": [[6, "module-pfl.callback"]], "should_checkpoint_at_end() (pfl.callback.checkpointpolicy method)": [[6, "pfl.callback.CheckpointPolicy.should_checkpoint_at_end"]], "should_checkpoint_at_end() (pfl.callback.metricimprovementcheckpointpolicy method)": [[6, "pfl.callback.MetricImprovementCheckpointPolicy.should_checkpoint_at_end"]], "should_checkpoint_now() (pfl.callback.checkpointpolicy method)": [[6, "pfl.callback.CheckpointPolicy.should_checkpoint_now"]], "should_checkpoint_now() (pfl.callback.iterationfrequencycheckpointpolicy method)": [[6, "pfl.callback.IterationFrequencyCheckpointPolicy.should_checkpoint_now"]], "should_checkpoint_now() (pfl.callback.metricimprovementcheckpointpolicy method)": [[6, "pfl.callback.MetricImprovementCheckpointPolicy.should_checkpoint_now"]], "checkpointer (class in pfl.common_types)": [[7, "pfl.common_types.Checkpointer"]], "localdiskcheckpointer (class in pfl.common_types)": [[7, "pfl.common_types.LocalDiskCheckpointer"]], "population (class in pfl.common_types)": [[7, "pfl.common_types.Population"]], "saveable (class in pfl.common_types)": [[7, "pfl.common_types.Saveable"]], "load() (pfl.common_types.saveable method)": [[7, "pfl.common_types.Saveable.load"]], "pfl.common_types": [[7, "module-pfl.common_types"]], "save() (pfl.common_types.saveable method)": [[7, "pfl.common_types.Saveable.save"]], "set_checkpointer() (pfl.common_types.saveable method)": [[7, "pfl.common_types.Saveable.set_checkpointer"]], "centralcontext (class in pfl.context)": [[8, "pfl.context.CentralContext"]], "localresultmetadata (class in pfl.context)": [[8, "pfl.context.LocalResultMetaData"]], "usercontext (class in pfl.context)": [[8, "pfl.context.UserContext"]], "pfl.context": [[8, "module-pfl.context"]], "state_description (pfl.context.centralcontext property)": [[8, "pfl.context.CentralContext.state_description"]], "abstractdataset (class in pfl.data.dataset)": [[9, "pfl.data.dataset.AbstractDataset"]], "abstractuserstatestorage (class in pfl.data.user_state)": [[9, "pfl.data.user_state.AbstractUserStateStorage"]], "artificialfederateddataset (class in pfl.data.federated_dataset)": [[9, "pfl.data.federated_dataset.ArtificialFederatedDataset"]], "crosssilousersampler (class in pfl.data.sampling)": [[9, "pfl.data.sampling.CrossSiloUserSampler"]], "dataset (class in pfl.data.dataset)": [[9, "pfl.data.dataset.Dataset"]], "datasetsplit (class in pfl.data.dataset)": [[9, "pfl.data.dataset.DatasetSplit"]], "dirichletdatasampler (class in pfl.data.sampling)": [[9, "pfl.data.sampling.DirichletDataSampler"]], "diskuserstatestorage (class in pfl.data.user_state)": [[9, "pfl.data.user_state.DiskUserStateStorage"]], "federateddataset (class in pfl.data.federated_dataset)": [[9, "pfl.data.federated_dataset.FederatedDataset"]], "federateddatasetbase (class in pfl.data.federated_dataset)": [[9, "pfl.data.federated_dataset.FederatedDatasetBase"]], "federateddatasetmixture (class in pfl.data.federated_dataset)": [[9, "pfl.data.federated_dataset.FederatedDatasetMixture"]], "inmemoryuserstatestorage (class in pfl.data.user_state)": [[9, "pfl.data.user_state.InMemoryUserStateStorage"]], "minimizereusedatasampler (class in pfl.data.sampling)": [[9, "pfl.data.sampling.MinimizeReuseDataSampler"]], "minimizereuseusersampler (class in pfl.data.sampling)": [[9, "pfl.data.sampling.MinimizeReuseUserSampler"]], "pytorchdatadataset (class in pfl.data.pytorch)": [[9, "pfl.data.pytorch.PyTorchDataDataset"]], "pytorchfederateddataset (class in pfl.data.pytorch)": [[9, "pfl.data.pytorch.PyTorchFederatedDataset"]], "pytorchtensordataset (class in pfl.data.pytorch)": [[9, "pfl.data.pytorch.PyTorchTensorDataset"]], "tfdatadataset (class in pfl.data.tensorflow)": [[9, "pfl.data.tensorflow.TFDataDataset"]], "tffederateddataset (class in pfl.data.tensorflow)": [[9, "pfl.data.tensorflow.TFFederatedDataset"]], "tftensordataset (class in pfl.data.tensorflow)": [[9, "pfl.data.tensorflow.TFTensorDataset"]], "tabulardataset (class in pfl.data.dataset)": [[9, "pfl.data.dataset.TabularDataset"]], "acquire_lock() (pfl.data.user_state.diskuserstatestorage method)": [[9, "pfl.data.user_state.DiskUserStateStorage.acquire_lock"]], "clear_states() (pfl.data.user_state.abstractuserstatestorage method)": [[9, "pfl.data.user_state.AbstractUserStateStorage.clear_states"]], "clear_states() (pfl.data.user_state.diskuserstatestorage method)": [[9, "pfl.data.user_state.DiskUserStateStorage.clear_states"]], "clear_states() (pfl.data.user_state.inmemoryuserstatestorage method)": [[9, "pfl.data.user_state.InMemoryUserStateStorage.clear_states"]], "eval_kwargs (pfl.data.dataset.datasetsplit property)": [[9, "pfl.data.dataset.DatasetSplit.eval_kwargs"]], "from_slices() (pfl.data.federated_dataset.artificialfederateddataset class method)": [[9, "pfl.data.federated_dataset.ArtificialFederatedDataset.from_slices"]], "from_slices() (pfl.data.federated_dataset.federateddataset class method)": [[9, "pfl.data.federated_dataset.FederatedDataset.from_slices"]], "from_slices_with_dirichlet_class_distribution() (pfl.data.federated_dataset.federateddataset class method)": [[9, "pfl.data.federated_dataset.FederatedDataset.from_slices_with_dirichlet_class_distribution"]], "get_cohort() (pfl.data.federated_dataset.artificialfederateddataset method)": [[9, "pfl.data.federated_dataset.ArtificialFederatedDataset.get_cohort"]], "get_cohort() (pfl.data.federated_dataset.federateddataset method)": [[9, "pfl.data.federated_dataset.FederatedDataset.get_cohort"]], "get_cohort() (pfl.data.federated_dataset.federateddatasetbase method)": [[9, "pfl.data.federated_dataset.FederatedDatasetBase.get_cohort"]], "get_cohort() (pfl.data.federated_dataset.federateddatasetmixture method)": [[9, "pfl.data.federated_dataset.FederatedDatasetMixture.get_cohort"]], "get_data_sampler() (in module pfl.data.sampling)": [[9, "pfl.data.sampling.get_data_sampler"]], "get_user_sampler() (in module pfl.data.sampling)": [[9, "pfl.data.sampling.get_user_sampler"]], "get_worker_partition() (pfl.data.dataset.abstractdataset method)": [[9, "pfl.data.dataset.AbstractDataset.get_worker_partition"]], "get_worker_partition() (pfl.data.dataset.dataset method)": [[9, "pfl.data.dataset.Dataset.get_worker_partition"]], "get_worker_partition() (pfl.data.dataset.datasetsplit method)": [[9, "pfl.data.dataset.DatasetSplit.get_worker_partition"]], "get_worker_partition() (pfl.data.pytorch.pytorchdatadataset method)": [[9, "pfl.data.pytorch.PyTorchDataDataset.get_worker_partition"]], "get_worker_partition() (pfl.data.tensorflow.tfdatadataset method)": [[9, "pfl.data.tensorflow.TFDataDataset.get_worker_partition"]], "load_state() (pfl.data.user_state.abstractuserstatestorage method)": [[9, "pfl.data.user_state.AbstractUserStateStorage.load_state"]], "load_state() (pfl.data.user_state.diskuserstatestorage method)": [[9, "pfl.data.user_state.DiskUserStateStorage.load_state"]], "load_state() (pfl.data.user_state.inmemoryuserstatestorage method)": [[9, "pfl.data.user_state.InMemoryUserStateStorage.load_state"]], "partition_by_dirichlet_class_distribution() (in module pfl.data.partition)": [[9, "pfl.data.partition.partition_by_dirichlet_class_distribution"]], "pfl.data.dataset": [[9, "module-pfl.data.dataset"]], "pfl.data.federated_dataset": [[9, "module-pfl.data.federated_dataset"]], "pfl.data.partition": [[9, "module-pfl.data.partition"]], "pfl.data.pytorch": [[9, "module-pfl.data.pytorch"]], "pfl.data.sampling": [[9, "module-pfl.data.sampling"]], "pfl.data.tensorflow": [[9, "module-pfl.data.tensorflow"]], "pfl.data.user_state": [[9, "module-pfl.data.user_state"]], "raw_data (pfl.data.dataset.datasetsplit property)": [[9, "pfl.data.dataset.DatasetSplit.raw_data"]], "save_state() (pfl.data.user_state.abstractuserstatestorage method)": [[9, "pfl.data.user_state.AbstractUserStateStorage.save_state"]], "save_state() (pfl.data.user_state.diskuserstatestorage method)": [[9, "pfl.data.user_state.DiskUserStateStorage.save_state"]], "save_state() (pfl.data.user_state.inmemoryuserstatestorage method)": [[9, "pfl.data.user_state.InMemoryUserStateStorage.save_state"]], "split() (pfl.data.dataset.abstractdataset method)": [[9, "pfl.data.dataset.AbstractDataset.split"]], "split() (pfl.data.dataset.dataset method)": [[9, "pfl.data.dataset.Dataset.split"]], "split() (pfl.data.dataset.datasetsplit method)": [[9, "pfl.data.dataset.DatasetSplit.split"]], "split() (pfl.data.pytorch.pytorchdatadataset method)": [[9, "pfl.data.pytorch.PyTorchDataDataset.split"]], "split() (pfl.data.tensorflow.tfdatadataset method)": [[9, "pfl.data.tensorflow.TFDataDataset.split"]], "train_kwargs (pfl.data.dataset.datasetsplit property)": [[9, "pfl.data.dataset.DatasetSplit.train_kwargs"]], "checkpointnotfounderror": [[11, "pfl.exception.CheckpointNotFoundError"]], "matrixfactorizationerror": [[11, "pfl.exception.MatrixFactorizationError"]], "pflerror": [[11, "pfl.exception.PFLError"]], "usernotfounderror": [[11, "pfl.exception.UserNotFoundError"]], "pfl.exception": [[11, "module-pfl.exception"]], "algorithmhyperparams (class in pfl.hyperparam.base)": [[12, "pfl.hyperparam.base.AlgorithmHyperParams"]], "hyperparam (class in pfl.hyperparam.base)": [[12, "pfl.hyperparam.base.HyperParam"]], "hyperparams (class in pfl.hyperparam.base)": [[12, "pfl.hyperparam.base.HyperParams"]], "modelhyperparams (class in pfl.hyperparam.base)": [[12, "pfl.hyperparam.base.ModelHyperParams"]], "nnevalhyperparams (class in pfl.hyperparam.base)": [[12, "pfl.hyperparam.base.NNEvalHyperParams"]], "nntrainhyperparams (class in pfl.hyperparam.base)": [[12, "pfl.hyperparam.base.NNTrainHyperParams"]], "get() (pfl.hyperparam.base.hyperparams method)": [[12, "pfl.hyperparam.base.HyperParams.get"]], "get_param_value() (in module pfl.hyperparam.base)": [[12, "pfl.hyperparam.base.get_param_value"]], "pfl.hyperparam.base": [[12, "module-pfl.hyperparam.base"]], "static_clone() (pfl.hyperparam.base.hyperparams method)": [[12, "pfl.hyperparam.base.HyperParams.static_clone"]], "typing.parametertype (built-in variable)": [[12, "typing.ParameterType"]], "value() (pfl.hyperparam.base.hyperparam method)": [[12, "pfl.hyperparam.base.HyperParam.value"]], "bisect_automatic_range() (in module pfl.internal.bisect)": [[13, "pfl.internal.bisect.bisect_automatic_range"]], "bisect_range() (in module pfl.internal.bisect)": [[13, "pfl.internal.bisect.bisect_range"]], "pfl.internal.bisect": [[13, "module-pfl.internal.bisect"]], "commonframeworkbridge (class in pfl.internal.bridge.base)": [[14, "pfl.internal.bridge.base.CommonFrameworkBridge"]], "ftrlframeworkbridge (class in pfl.internal.bridge.base)": [[14, "pfl.internal.bridge.base.FTRLFrameworkBridge"]], "fedproxframeworkbridge (class in pfl.internal.bridge.base)": [[14, "pfl.internal.bridge.base.FedProxFrameworkBridge"]], "frameworkbridgefactory (class in pfl.internal.bridge.factory)": [[14, "pfl.internal.bridge.factory.FrameworkBridgeFactory"]], "numpycommonbridge (class in pfl.internal.bridge.numpy.common)": [[14, "pfl.internal.bridge.numpy.common.NumpyCommonBridge"]], "pytorchcommonbridge (class in pfl.internal.bridge.pytorch.common)": [[14, "pfl.internal.bridge.pytorch.common.PyTorchCommonBridge"]], "pytorchftrlbridge (class in pfl.internal.bridge.pytorch.ftrl)": [[14, "pfl.internal.bridge.pytorch.ftrl.PyTorchFTRLBridge"]], "pytorchfedproxbridge (class in pfl.internal.bridge.pytorch.proximal)": [[14, "pfl.internal.bridge.pytorch.proximal.PyTorchFedProxBridge"]], "pytorchsgdbridge (class in pfl.internal.bridge.pytorch.sgd)": [[14, "pfl.internal.bridge.pytorch.sgd.PyTorchSGDBridge"]], "scaffoldframeworkbridge (class in pfl.internal.bridge.base)": [[14, "pfl.internal.bridge.base.SCAFFOLDFrameworkBridge"]], "sgdframeworkbridge (class in pfl.internal.bridge.base)": [[14, "pfl.internal.bridge.base.SGDFrameworkBridge"]], "tfcommonbridge (class in pfl.internal.bridge.tensorflow.common)": [[14, "pfl.internal.bridge.tensorflow.common.TFCommonBridge"]], "tfftrlbridge (class in pfl.internal.bridge.tensorflow.ftrl)": [[14, "pfl.internal.bridge.tensorflow.ftrl.TFFTRLBridge"]], "tffedproxbridge (class in pfl.internal.bridge.tensorflow.proximal)": [[14, "pfl.internal.bridge.tensorflow.proximal.TFFedProxBridge"]], "tfsgdbridge (class in pfl.internal.bridge.tensorflow.sgd)": [[14, "pfl.internal.bridge.tensorflow.sgd.TFSGDBridge"]], "do_control_variate_sgd() (pfl.internal.bridge.base.scaffoldframeworkbridge static method)": [[14, "pfl.internal.bridge.base.SCAFFOLDFrameworkBridge.do_control_variate_sgd"]], "do_proximal_sgd() (pfl.internal.bridge.base.fedproxframeworkbridge static method)": [[14, "pfl.internal.bridge.base.FedProxFrameworkBridge.do_proximal_sgd"]], "do_proximal_sgd() (pfl.internal.bridge.pytorch.proximal.pytorchfedproxbridge static method)": [[14, "pfl.internal.bridge.pytorch.proximal.PyTorchFedProxBridge.do_proximal_sgd"]], "do_proximal_sgd() (pfl.internal.bridge.tensorflow.proximal.tffedproxbridge static method)": [[14, "pfl.internal.bridge.tensorflow.proximal.TFFedProxBridge.do_proximal_sgd"]], "do_sgd() (pfl.internal.bridge.base.sgdframeworkbridge static method)": [[14, "pfl.internal.bridge.base.SGDFrameworkBridge.do_sgd"]], "do_sgd() (pfl.internal.bridge.pytorch.sgd.pytorchsgdbridge static method)": [[14, "pfl.internal.bridge.pytorch.sgd.PyTorchSGDBridge.do_sgd"]], "do_sgd() (pfl.internal.bridge.tensorflow.sgd.tfsgdbridge static method)": [[14, "pfl.internal.bridge.tensorflow.sgd.TFSGDBridge.do_sgd"]], "get_or_make_tf_function() (in module pfl.internal.bridge.tensorflow.common)": [[14, "pfl.internal.bridge.tensorflow.common.get_or_make_tf_function"]], "lbfgs_direction() (pfl.internal.bridge.base.ftrlframeworkbridge static method)": [[14, "pfl.internal.bridge.base.FTRLFrameworkBridge.lbfgs_direction"]], "lbfgs_direction() (pfl.internal.bridge.pytorch.ftrl.pytorchftrlbridge static method)": [[14, "pfl.internal.bridge.pytorch.ftrl.PyTorchFTRLBridge.lbfgs_direction"]], "lbfgs_direction() (pfl.internal.bridge.tensorflow.ftrl.tfftrlbridge static method)": [[14, "pfl.internal.bridge.tensorflow.ftrl.TFFTRLBridge.lbfgs_direction"]], "load_state() (pfl.internal.bridge.base.commonframeworkbridge static method)": [[14, "pfl.internal.bridge.base.CommonFrameworkBridge.load_state"]], "load_state() (pfl.internal.bridge.numpy.common.numpycommonbridge static method)": [[14, "pfl.internal.bridge.numpy.common.NumpyCommonBridge.load_state"]], "load_state() (pfl.internal.bridge.pytorch.common.pytorchcommonbridge static method)": [[14, "pfl.internal.bridge.pytorch.common.PyTorchCommonBridge.load_state"]], "load_state() (pfl.internal.bridge.tensorflow.common.tfcommonbridge static method)": [[14, "pfl.internal.bridge.tensorflow.common.TFCommonBridge.load_state"]], "loss_and_gradient() (pfl.internal.bridge.base.ftrlframeworkbridge static method)": [[14, "pfl.internal.bridge.base.FTRLFrameworkBridge.loss_and_gradient"]], "loss_and_gradient() (pfl.internal.bridge.pytorch.ftrl.pytorchftrlbridge static method)": [[14, "pfl.internal.bridge.pytorch.ftrl.PyTorchFTRLBridge.loss_and_gradient"]], "loss_and_gradient() (pfl.internal.bridge.tensorflow.ftrl.tfftrlbridge static method)": [[14, "pfl.internal.bridge.tensorflow.ftrl.TFFTRLBridge.loss_and_gradient"]], "pfl.internal.bridge.base": [[14, "module-pfl.internal.bridge.base"]], "pfl.internal.bridge.factory": [[14, "module-pfl.internal.bridge.factory"]], "pfl.internal.bridge.numpy.common": [[14, "module-pfl.internal.bridge.numpy.common"]], "pfl.internal.bridge.pytorch.common": [[14, "module-pfl.internal.bridge.pytorch.common"]], "pfl.internal.bridge.pytorch.ftrl": [[14, "module-pfl.internal.bridge.pytorch.ftrl"]], "pfl.internal.bridge.pytorch.proximal": [[14, "module-pfl.internal.bridge.pytorch.proximal"]], "pfl.internal.bridge.pytorch.sgd": [[14, "module-pfl.internal.bridge.pytorch.sgd"]], "pfl.internal.bridge.tensorflow.common": [[14, "module-pfl.internal.bridge.tensorflow.common"]], "pfl.internal.bridge.tensorflow.ftrl": [[14, "module-pfl.internal.bridge.tensorflow.ftrl"]], "pfl.internal.bridge.tensorflow.proximal": [[14, "module-pfl.internal.bridge.tensorflow.proximal"]], "pfl.internal.bridge.tensorflow.sgd": [[14, "module-pfl.internal.bridge.tensorflow.sgd"]], "save_state() (pfl.internal.bridge.base.commonframeworkbridge static method)": [[14, "pfl.internal.bridge.base.CommonFrameworkBridge.save_state"]], "save_state() (pfl.internal.bridge.numpy.common.numpycommonbridge static method)": [[14, "pfl.internal.bridge.numpy.common.NumpyCommonBridge.save_state"]], "save_state() (pfl.internal.bridge.pytorch.common.pytorchcommonbridge static method)": [[14, "pfl.internal.bridge.pytorch.common.PyTorchCommonBridge.save_state"]], "save_state() (pfl.internal.bridge.tensorflow.common.tfcommonbridge static method)": [[14, "pfl.internal.bridge.tensorflow.common.TFCommonBridge.save_state"]], "terminate_fn() (pfl.internal.bridge.base.ftrlframeworkbridge static method)": [[14, "pfl.internal.bridge.base.FTRLFrameworkBridge.terminate_fn"]], "terminate_fn() (pfl.internal.bridge.pytorch.ftrl.pytorchftrlbridge static method)": [[14, "pfl.internal.bridge.pytorch.ftrl.PyTorchFTRLBridge.terminate_fn"]], "terminate_fn() (pfl.internal.bridge.tensorflow.ftrl.tfftrlbridge static method)": [[14, "pfl.internal.bridge.tensorflow.ftrl.TFFTRLBridge.terminate_fn"]], "diagonalgaussian (class in pfl.internal.distribution.diagonal_gaussian)": [[15, "pfl.internal.distribution.diagonal_gaussian.DiagonalGaussian"]], "distribution (class in pfl.internal.distribution.distribution)": [[15, "pfl.internal.distribution.distribution.Distribution"]], "logfloat (class in pfl.internal.distribution.log_float)": [[15, "pfl.internal.distribution.log_float.LogFloat"]], "mixture (class in pfl.internal.distribution.mixture)": [[15, "pfl.internal.distribution.mixture.Mixture"]], "any_product() (in module pfl.internal.distribution.distribution)": [[15, "pfl.internal.distribution.distribution.any_product"]], "any_sum() (in module pfl.internal.distribution.distribution)": [[15, "pfl.internal.distribution.distribution.any_sum"]], "beta_function() (in module pfl.internal.distribution.log_float_functions)": [[15, "pfl.internal.distribution.log_float_functions.beta_function"]], "binomial_coefficients() (in module pfl.internal.distribution.log_float_functions)": [[15, "pfl.internal.distribution.log_float_functions.binomial_coefficients"]], "components (pfl.internal.distribution.mixture.mixture property)": [[15, "pfl.internal.distribution.mixture.Mixture.components"]], "density() (pfl.internal.distribution.diagonal_gaussian.diagonalgaussian method)": [[15, "pfl.internal.distribution.diagonal_gaussian.DiagonalGaussian.density"]], "density() (pfl.internal.distribution.distribution.distribution method)": [[15, "pfl.internal.distribution.distribution.Distribution.density"]], "density() (pfl.internal.distribution.mixture.mixture method)": [[15, "pfl.internal.distribution.mixture.Mixture.density"]], "diagonal_standard_gaussian() (in module pfl.internal.distribution.diagonal_gaussian)": [[15, "pfl.internal.distribution.diagonal_gaussian.diagonal_standard_gaussian"]], "erfc() (in module pfl.internal.distribution.log_float_functions)": [[15, "pfl.internal.distribution.log_float_functions.erfc"]], "exp() (in module pfl.internal.distribution.log_float_functions)": [[15, "pfl.internal.distribution.log_float_functions.exp"]], "from_value() (pfl.internal.distribution.log_float.logfloat class method)": [[15, "pfl.internal.distribution.log_float.LogFloat.from_value"]], "incomplete_beta_function() (in module pfl.internal.distribution.log_float_functions)": [[15, "pfl.internal.distribution.log_float_functions.incomplete_beta_function"]], "log() (in module pfl.internal.distribution.log_float)": [[15, "pfl.internal.distribution.log_float.log"]], "log_densities() (pfl.internal.distribution.distribution.distribution method)": [[15, "pfl.internal.distribution.distribution.Distribution.log_densities"]], "log_value (pfl.internal.distribution.log_float.logfloat property)": [[15, "pfl.internal.distribution.log_float.LogFloat.log_value"]], "normal_cdf() (in module pfl.internal.distribution.log_float_functions)": [[15, "pfl.internal.distribution.log_float_functions.normal_cdf"]], "pfl.internal.distribution.diagonal_gaussian": [[15, "module-pfl.internal.distribution.diagonal_gaussian"]], "pfl.internal.distribution.distribution": [[15, "module-pfl.internal.distribution.distribution"]], "pfl.internal.distribution.log_float": [[15, "module-pfl.internal.distribution.log_float"]], "pfl.internal.distribution.log_float_functions": [[15, "module-pfl.internal.distribution.log_float_functions"]], "pfl.internal.distribution.mixture": [[15, "module-pfl.internal.distribution.mixture"]], "point_shape (pfl.internal.distribution.diagonal_gaussian.diagonalgaussian property)": [[15, "pfl.internal.distribution.diagonal_gaussian.DiagonalGaussian.point_shape"]], "point_shape (pfl.internal.distribution.distribution.distribution property)": [[15, "pfl.internal.distribution.distribution.Distribution.point_shape"]], "point_shape (pfl.internal.distribution.mixture.mixture property)": [[15, "pfl.internal.distribution.mixture.Mixture.point_shape"]], "responsibilities() (pfl.internal.distribution.mixture.mixture method)": [[15, "pfl.internal.distribution.mixture.Mixture.responsibilities"]], "sample() (pfl.internal.distribution.diagonal_gaussian.diagonalgaussian method)": [[15, "pfl.internal.distribution.diagonal_gaussian.DiagonalGaussian.sample"]], "sample() (pfl.internal.distribution.distribution.distribution method)": [[15, "pfl.internal.distribution.distribution.Distribution.sample"]], "sample() (pfl.internal.distribution.mixture.mixture method)": [[15, "pfl.internal.distribution.mixture.Mixture.sample"]], "sign (pfl.internal.distribution.log_float.logfloat property)": [[15, "pfl.internal.distribution.log_float.LogFloat.sign"]], "split() (pfl.internal.distribution.diagonal_gaussian.diagonalgaussian method)": [[15, "pfl.internal.distribution.diagonal_gaussian.DiagonalGaussian.split"]], "value (pfl.internal.distribution.log_float.logfloat property)": [[15, "pfl.internal.distribution.log_float.LogFloat.value"]], "barrier (class in pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.Barrier"]], "distributedcontext (class in pfl.internal.ops.distributed)": [[17, "pfl.internal.ops.distributed.DistributedContext"]], "gradaccumulationstate (class in pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.GradAccumulationState"]], "horovoddistributedcontext (class in pfl.internal.ops.distributed)": [[17, "pfl.internal.ops.distributed.HorovodDistributedContext"]], "kerasmetricvalue (class in pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.KerasMetricValue"]], "mlframework (class in pfl.internal.ops.framework_types)": [[17, "pfl.internal.ops.framework_types.MLFramework"]], "notdistributedcontext (class in pfl.internal.ops.distributed)": [[17, "pfl.internal.ops.distributed.NotDistributedContext"]], "numpyhorovoddistributedcontext (class in pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.NumpyHorovodDistributedContext"]], "numpyseedscope (class in pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.NumpySeedScope"]], "pytorchdistributedcontext (class in pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.PyTorchDistributedContext"]], "pytorchhorovoddistributedcontext (class in pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.PyTorchHorovodDistributedContext"]], "pytorchseedscope (class in pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.PyTorchSeedScope"]], "pytorchtrainstepargs (class in pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.PyTorchTrainStepArgs"]], "tfdistributedcontext (class in pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.TFDistributedContext"]], "tfhorovoddistributedcontext (class in pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.TFHorovodDistributedContext"]], "add_gaussian_noise() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.add_gaussian_noise"]], "add_gaussian_noise() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.add_gaussian_noise"]], "add_gaussian_noise() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.add_gaussian_noise"]], "add_laplacian_noise() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.add_laplacian_noise"]], "add_laplacian_noise() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.add_laplacian_noise"]], "add_laplacian_noise() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.add_laplacian_noise"]], "all_reduce() (pfl.internal.ops.distributed.distributedcontext method)": [[17, "pfl.internal.ops.distributed.DistributedContext.all_reduce"]], "all_reduce() (pfl.internal.ops.distributed.horovoddistributedcontext method)": [[17, "pfl.internal.ops.distributed.HorovodDistributedContext.all_reduce"]], "all_reduce() (pfl.internal.ops.distributed.notdistributedcontext method)": [[17, "pfl.internal.ops.distributed.NotDistributedContext.all_reduce"]], "all_reduce() (pfl.internal.ops.pytorch_ops.pytorchdistributedcontext method)": [[17, "pfl.internal.ops.pytorch_ops.PyTorchDistributedContext.all_reduce"]], "all_reduce() (pfl.internal.ops.tensorflow_ops.tfdistributedcontext method)": [[17, "pfl.internal.ops.tensorflow_ops.TFDistributedContext.all_reduce"]], "all_reduce_metrics() (in module pfl.internal.ops.common_ops)": [[17, "pfl.internal.ops.common_ops.all_reduce_metrics"]], "assign_variable() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.assign_variable"]], "assign_variable() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.assign_variable"]], "assign_variable() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.assign_variable"]], "check_mlx_installed() (in module pfl.internal.ops.common_ops)": [[17, "pfl.internal.ops.common_ops.check_mlx_installed"]], "check_pfl_tree_installed() (in module pfl.internal.ops.common_ops)": [[17, "pfl.internal.ops.common_ops.check_pfl_tree_installed"]], "clone() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.clone"]], "clone() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.clone"]], "clone() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.clone"]], "clone_variable() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.clone_variable"]], "clone_variable() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.clone_variable"]], "clone_variable() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.clone_variable"]], "concatenate() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.concatenate"]], "concatenate() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.concatenate"]], "concatenate() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.concatenate"]], "distribute_range() (pfl.internal.ops.distributed.distributedcontext method)": [[17, "pfl.internal.ops.distributed.DistributedContext.distribute_range"]], "distribute_value() (pfl.internal.ops.distributed.distributedcontext method)": [[17, "pfl.internal.ops.distributed.DistributedContext.distribute_value"]], "exponential_moving_average_update() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.exponential_moving_average_update"]], "exponential_moving_average_update() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.exponential_moving_average_update"]], "exponential_moving_average_update() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.exponential_moving_average_update"]], "flatten() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.flatten"]], "flatten() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.flatten"]], "flatten() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.flatten"]], "from_vector() (pfl.internal.ops.tensorflow_ops.kerasmetricvalue method)": [[17, "pfl.internal.ops.tensorflow_ops.KerasMetricValue.from_vector"]], "get_pytorch_major_version() (in module pfl.internal.ops.common_ops)": [[17, "pfl.internal.ops.common_ops.get_pytorch_major_version"]], "get_shape() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.get_shape"]], "get_shape() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.get_shape"]], "get_shape() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.get_shape"]], "get_tf_major_version() (in module pfl.internal.ops.common_ops)": [[17, "pfl.internal.ops.common_ops.get_tf_major_version"]], "global_norm() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.global_norm"]], "global_norm() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.global_norm"]], "global_norm() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.global_norm"]], "global_rank (pfl.internal.ops.distributed.distributedcontext property)": [[17, "pfl.internal.ops.distributed.DistributedContext.global_rank"]], "global_rank (pfl.internal.ops.distributed.horovoddistributedcontext property)": [[17, "pfl.internal.ops.distributed.HorovodDistributedContext.global_rank"]], "global_rank (pfl.internal.ops.distributed.notdistributedcontext property)": [[17, "pfl.internal.ops.distributed.NotDistributedContext.global_rank"]], "global_rank (pfl.internal.ops.pytorch_ops.pytorchdistributedcontext property)": [[17, "pfl.internal.ops.pytorch_ops.PyTorchDistributedContext.global_rank"]], "global_rank (pfl.internal.ops.tensorflow_ops.tfdistributedcontext property)": [[17, "pfl.internal.ops.tensorflow_ops.TFDistributedContext.global_rank"]], "horovod_is_active() (in module pfl.internal.ops.distributed)": [[17, "pfl.internal.ops.distributed.horovod_is_active"]], "is_mpi_running() (in module pfl.internal.ops.common_ops)": [[17, "pfl.internal.ops.common_ops.is_mpi_running"]], "is_pytest_running() (in module pfl.internal.ops.common_ops)": [[17, "pfl.internal.ops.common_ops.is_pytest_running"]], "is_tensor() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.is_tensor"]], "is_tensor() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.is_tensor"]], "is_tensor() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.is_tensor"]], "local_rank (pfl.internal.ops.distributed.distributedcontext property)": [[17, "pfl.internal.ops.distributed.DistributedContext.local_rank"]], "local_rank (pfl.internal.ops.distributed.horovoddistributedcontext property)": [[17, "pfl.internal.ops.distributed.HorovodDistributedContext.local_rank"]], "local_rank (pfl.internal.ops.distributed.notdistributedcontext property)": [[17, "pfl.internal.ops.distributed.NotDistributedContext.local_rank"]], "local_rank (pfl.internal.ops.pytorch_ops.pytorchdistributedcontext property)": [[17, "pfl.internal.ops.pytorch_ops.PyTorchDistributedContext.local_rank"]], "local_rank (pfl.internal.ops.tensorflow_ops.tfdistributedcontext property)": [[17, "pfl.internal.ops.tensorflow_ops.TFDistributedContext.local_rank"]], "local_size (pfl.internal.ops.distributed.distributedcontext property)": [[17, "pfl.internal.ops.distributed.DistributedContext.local_size"]], "local_size (pfl.internal.ops.distributed.horovoddistributedcontext property)": [[17, "pfl.internal.ops.distributed.HorovodDistributedContext.local_size"]], "local_size (pfl.internal.ops.distributed.notdistributedcontext property)": [[17, "pfl.internal.ops.distributed.NotDistributedContext.local_size"]], "local_size (pfl.internal.ops.pytorch_ops.pytorchdistributedcontext property)": [[17, "pfl.internal.ops.pytorch_ops.PyTorchDistributedContext.local_size"]], "local_size (pfl.internal.ops.tensorflow_ops.tfdistributedcontext property)": [[17, "pfl.internal.ops.tensorflow_ops.TFDistributedContext.local_size"]], "norm() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.norm"]], "norm() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.norm"]], "norm() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.norm"]], "one_hot() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.one_hot"]], "one_hot() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.one_hot"]], "one_hot() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.one_hot"]], "optimizer_should_update (pfl.internal.ops.pytorch_ops.gradaccumulationstate property)": [[17, "pfl.internal.ops.pytorch_ops.GradAccumulationState.optimizer_should_update"]], "overall_value (pfl.internal.ops.tensorflow_ops.kerasmetricvalue property)": [[17, "pfl.internal.ops.tensorflow_ops.KerasMetricValue.overall_value"]], "pfl.internal.ops.common_ops": [[17, "module-pfl.internal.ops.common_ops"]], "pfl.internal.ops.distributed": [[17, "module-pfl.internal.ops.distributed"]], "pfl.internal.ops.framework_types": [[17, "module-pfl.internal.ops.framework_types"]], "pfl.internal.ops.numpy_ops": [[17, "module-pfl.internal.ops.numpy_ops"]], "pfl.internal.ops.pytorch_ops": [[17, "module-pfl.internal.ops.pytorch_ops"]], "pfl.internal.ops.selector": [[17, "module-pfl.internal.ops.selector"]], "pfl.internal.ops.tensorflow_ops": [[17, "module-pfl.internal.ops.tensorflow_ops"]], "reshape() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.reshape"]], "reshape() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.reshape"]], "reshape() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.reshape"]], "setup_amp() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.setup_amp"]], "simulate_bfloat16_transport() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.simulate_bfloat16_transport"]], "simulate_bfloat16_transport() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.simulate_bfloat16_transport"]], "to_numpy() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.to_numpy"]], "to_numpy() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.to_numpy"]], "to_numpy() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.to_numpy"]], "to_tensor() (in module pfl.internal.ops.numpy_ops)": [[17, "pfl.internal.ops.numpy_ops.to_tensor"]], "to_tensor() (in module pfl.internal.ops.pytorch_ops)": [[17, "pfl.internal.ops.pytorch_ops.to_tensor"]], "to_tensor() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.to_tensor"]], "to_vector() (pfl.internal.ops.tensorflow_ops.kerasmetricvalue method)": [[17, "pfl.internal.ops.tensorflow_ops.KerasMetricValue.to_vector"]], "try_cached_call() (in module pfl.internal.ops.tensorflow_ops)": [[17, "pfl.internal.ops.tensorflow_ops.try_cached_call"]], "world_size (pfl.internal.ops.distributed.distributedcontext property)": [[17, "pfl.internal.ops.distributed.DistributedContext.world_size"]], "world_size (pfl.internal.ops.distributed.horovoddistributedcontext property)": [[17, "pfl.internal.ops.distributed.HorovodDistributedContext.world_size"]], "world_size (pfl.internal.ops.distributed.notdistributedcontext property)": [[17, "pfl.internal.ops.distributed.NotDistributedContext.world_size"]], "world_size (pfl.internal.ops.pytorch_ops.pytorchdistributedcontext property)": [[17, "pfl.internal.ops.pytorch_ops.PyTorchDistributedContext.world_size"]], "world_size (pfl.internal.ops.tensorflow_ops.tfdistributedcontext property)": [[17, "pfl.internal.ops.tensorflow_ops.TFDistributedContext.world_size"]], "genericplatform (class in pfl.internal.platform.generic_platform)": [[18, "pfl.internal.platform.generic_platform.GenericPlatform"]], "platform (class in pfl.internal.platform.generic_platform)": [[18, "pfl.internal.platform.generic_platform.Platform"]], "consume_metrics() (pfl.internal.platform.generic_platform.genericplatform method)": [[18, "pfl.internal.platform.generic_platform.GenericPlatform.consume_metrics"]], "consume_metrics() (pfl.internal.platform.generic_platform.platform method)": [[18, "pfl.internal.platform.generic_platform.Platform.consume_metrics"]], "create_checkpoint_directories() (pfl.internal.platform.generic_platform.genericplatform method)": [[18, "pfl.internal.platform.generic_platform.GenericPlatform.create_checkpoint_directories"]], "create_checkpoint_directories() (pfl.internal.platform.generic_platform.platform method)": [[18, "pfl.internal.platform.generic_platform.Platform.create_checkpoint_directories"]], "get_default_callbacks() (pfl.internal.platform.generic_platform.genericplatform method)": [[18, "pfl.internal.platform.generic_platform.GenericPlatform.get_default_callbacks"]], "get_default_callbacks() (pfl.internal.platform.generic_platform.platform method)": [[18, "pfl.internal.platform.generic_platform.Platform.get_default_callbacks"]], "get_distributed_addresses() (pfl.internal.platform.generic_platform.genericplatform method)": [[18, "pfl.internal.platform.generic_platform.GenericPlatform.get_distributed_addresses"]], "get_distributed_addresses() (pfl.internal.platform.generic_platform.platform method)": [[18, "pfl.internal.platform.generic_platform.Platform.get_distributed_addresses"]], "get_platform() (in module pfl.internal.platform.selector)": [[18, "pfl.internal.platform.selector.get_platform"]], "get_platform_context() (pfl.internal.platform.generic_platform.genericplatform method)": [[18, "pfl.internal.platform.generic_platform.GenericPlatform.get_platform_context"]], "get_platform_context() (pfl.internal.platform.generic_platform.platform method)": [[18, "pfl.internal.platform.generic_platform.Platform.get_platform_context"]], "pfl.internal.platform.generic_platform": [[18, "module-pfl.internal.platform.generic_platform"]], "pfl.internal.platform.selector": [[18, "module-pfl.internal.platform.selector"]], "set_platform() (in module pfl.internal.platform.selector)": [[18, "pfl.internal.platform.selector.set_platform"]], "approximateprivacylossbound (class in pfl.internal.privacy_loss_bound)": [[19, "pfl.internal.privacy_loss_bound.ApproximatePrivacyLossBound"]], "privacylossbound (class in pfl.internal.privacy_loss_bound)": [[19, "pfl.internal.privacy_loss_bound.PrivacyLossBound"]], "renyiprivacylossbound (class in pfl.internal.privacy_loss_bound)": [[19, "pfl.internal.privacy_loss_bound.RenyiPrivacyLossBound"]], "apply_multiple_times() (pfl.internal.privacy_loss_bound.approximateprivacylossbound method)": [[19, "pfl.internal.privacy_loss_bound.ApproximatePrivacyLossBound.apply_multiple_times"]], "apply_multiple_times() (pfl.internal.privacy_loss_bound.privacylossbound method)": [[19, "pfl.internal.privacy_loss_bound.PrivacyLossBound.apply_multiple_times"]], "apply_multiple_times() (pfl.internal.privacy_loss_bound.renyiprivacylossbound method)": [[19, "pfl.internal.privacy_loss_bound.RenyiPrivacyLossBound.apply_multiple_times"]], "convert_to_approximate_dp() (pfl.internal.privacy_loss_bound.renyiprivacylossbound method)": [[19, "pfl.internal.privacy_loss_bound.RenyiPrivacyLossBound.convert_to_approximate_dp"]], "pfl.internal.privacy_loss_bound": [[19, "module-pfl.internal.privacy_loss_bound"]], "boolquestiongenerator (class in pfl.internal.tree.questions)": [[20, "pfl.internal.tree.questions.BoolQuestionGenerator"]], "clippingbound (class in pfl.internal.tree.gbdt_adaptive_hyperparameters)": [[20, "pfl.internal.tree.gbdt_adaptive_hyperparameters.ClippingBound"]], "computesecondordergradients (class in pfl.internal.tree.gbdt_adaptive_hyperparameters)": [[20, "pfl.internal.tree.gbdt_adaptive_hyperparameters.ComputeSecondOrderGradients"]], "floatequidistantquestiongenerator (class in pfl.internal.tree.questions)": [[20, "pfl.internal.tree.questions.FloatEquidistantQuestionGenerator"]], "floatrandomquestiongenerator (class in pfl.internal.tree.questions)": [[20, "pfl.internal.tree.questions.FloatRandomQuestionGenerator"]], "gbdt (class in pfl.internal.tree.gbdt)": [[20, "pfl.internal.tree.gbdt.GBDT"]], "gbdtadaptivehyperparameter (class in pfl.internal.tree.gbdt_adaptive_hyperparameters)": [[20, "pfl.internal.tree.gbdt_adaptive_hyperparameters.GBDTAdaptiveHyperparameter"]], "gbdtclassifier (class in pfl.internal.tree.gbdt)": [[20, "pfl.internal.tree.gbdt.GBDTClassifier"]], "gbdtregressor (class in pfl.internal.tree.gbdt)": [[20, "pfl.internal.tree.gbdt.GBDTRegressor"]], "intequidistantquestiongenerator (class in pfl.internal.tree.questions)": [[20, "pfl.internal.tree.questions.IntEquidistantQuestionGenerator"]], "intrandomquestiongenerator (class in pfl.internal.tree.questions)": [[20, "pfl.internal.tree.questions.IntRandomQuestionGenerator"]], "node (class in pfl.internal.tree.node)": [[20, "pfl.internal.tree.node.Node"]], "questiongenerator (class in pfl.internal.tree.questions)": [[20, "pfl.internal.tree.questions.QuestionGenerator"]], "traincohortsize (class in pfl.internal.tree.gbdt_adaptive_hyperparameters)": [[20, "pfl.internal.tree.gbdt_adaptive_hyperparameters.TrainCohortSize"]], "validationcohortsize (class in pfl.internal.tree.gbdt_adaptive_hyperparameters)": [[20, "pfl.internal.tree.gbdt_adaptive_hyperparameters.ValidationCohortSize"]], "add_branch_node() (pfl.internal.tree.node.node method)": [[20, "pfl.internal.tree.node.Node.add_branch_node"]], "add_leaf_node() (pfl.internal.tree.node.node method)": [[20, "pfl.internal.tree.node.Node.add_leaf_node"]], "add_tree() (pfl.internal.tree.gbdt.gbdt method)": [[20, "pfl.internal.tree.gbdt.GBDT.add_tree"]], "current_value() (pfl.internal.tree.gbdt_adaptive_hyperparameters.clippingbound method)": [[20, "pfl.internal.tree.gbdt_adaptive_hyperparameters.ClippingBound.current_value"]], "current_value() (pfl.internal.tree.gbdt_adaptive_hyperparameters.computesecondordergradients method)": [[20, "pfl.internal.tree.gbdt_adaptive_hyperparameters.ComputeSecondOrderGradients.current_value"]], "current_value() (pfl.internal.tree.gbdt_adaptive_hyperparameters.gbdtadaptivehyperparameter method)": [[20, "pfl.internal.tree.gbdt_adaptive_hyperparameters.GBDTAdaptiveHyperparameter.current_value"]], "current_value() (pfl.internal.tree.gbdt_adaptive_hyperparameters.traincohortsize method)": [[20, "pfl.internal.tree.gbdt_adaptive_hyperparameters.TrainCohortSize.current_value"]], "current_value() (pfl.internal.tree.gbdt_adaptive_hyperparameters.validationcohortsize method)": [[20, "pfl.internal.tree.gbdt_adaptive_hyperparameters.ValidationCohortSize.current_value"]], "evaluate() (pfl.internal.tree.gbdt.gbdt method)": [[20, "pfl.internal.tree.gbdt.GBDT.evaluate"]], "evaluate() (pfl.internal.tree.gbdt.gbdtclassifier method)": [[20, "pfl.internal.tree.gbdt.GBDTClassifier.evaluate"]], "evaluate() (pfl.internal.tree.gbdt.gbdtregressor method)": [[20, "pfl.internal.tree.gbdt.GBDTRegressor.evaluate"]], "from_serialized_xgboost() (pfl.internal.tree.node.node static method)": [[20, "pfl.internal.tree.node.Node.from_serialized_xgboost"]], "generate() (pfl.internal.tree.questions.boolquestiongenerator method)": [[20, "pfl.internal.tree.questions.BoolQuestionGenerator.generate"]], "generate() (pfl.internal.tree.questions.floatequidistantquestiongenerator method)": [[20, "pfl.internal.tree.questions.FloatEquidistantQuestionGenerator.generate"]], "generate() (pfl.internal.tree.questions.floatrandomquestiongenerator method)": [[20, "pfl.internal.tree.questions.FloatRandomQuestionGenerator.generate"]], "generate() (pfl.internal.tree.questions.intequidistantquestiongenerator method)": [[20, "pfl.internal.tree.questions.IntEquidistantQuestionGenerator.generate"]], "generate() (pfl.internal.tree.questions.intrandomquestiongenerator method)": [[20, "pfl.internal.tree.questions.IntRandomQuestionGenerator.generate"]], "generate() (pfl.internal.tree.questions.questiongenerator method)": [[20, "pfl.internal.tree.questions.QuestionGenerator.generate"]], "get_leaf_values() (pfl.internal.tree.node.node method)": [[20, "pfl.internal.tree.node.Node.get_leaf_values"]], "get_max_min_predictions() (pfl.internal.tree.gbdt.gbdt method)": [[20, "pfl.internal.tree.gbdt.GBDT.get_max_min_predictions"]], "get_max_min_predictions() (pfl.internal.tree.gbdt.gbdtclassifier method)": [[20, "pfl.internal.tree.gbdt.GBDTClassifier.get_max_min_predictions"]], "is_leaf() (pfl.internal.tree.node.node method)": [[20, "pfl.internal.tree.node.Node.is_leaf"]], "max_depth() (pfl.internal.tree.node.node method)": [[20, "pfl.internal.tree.node.Node.max_depth"]], "num_nodes() (pfl.internal.tree.node.node method)": [[20, "pfl.internal.tree.node.Node.num_nodes"]], "pfl.internal.tree.gbdt": [[20, "module-pfl.internal.tree.gbdt"]], "pfl.internal.tree.gbdt_adaptive_hyperparameters": [[20, "module-pfl.internal.tree.gbdt_adaptive_hyperparameters"]], "pfl.internal.tree.node": [[20, "module-pfl.internal.tree.node"]], "pfl.internal.tree.questions": [[20, "module-pfl.internal.tree.questions"]], "predict() (pfl.internal.tree.gbdt.gbdt method)": [[20, "pfl.internal.tree.gbdt.GBDT.predict"]], "predict() (pfl.internal.tree.gbdt.gbdtclassifier method)": [[20, "pfl.internal.tree.gbdt.GBDTClassifier.predict"]], "predict() (pfl.internal.tree.node.node method)": [[20, "pfl.internal.tree.node.Node.predict"]], "predict_classes() (pfl.internal.tree.gbdt.gbdtclassifier method)": [[20, "pfl.internal.tree.gbdt.GBDTClassifier.predict_classes"]], "process_xgboost_node() (in module pfl.internal.tree.node)": [[20, "pfl.internal.tree.node.process_xgboost_node"]], "to_serialized_xgboost() (pfl.internal.tree.gbdt.gbdt method)": [[20, "pfl.internal.tree.gbdt.GBDT.to_serialized_xgboost"]], "to_serialized_xgboost() (pfl.internal.tree.node.node method)": [[20, "pfl.internal.tree.node.Node.to_serialized_xgboost"]], "training_complete() (pfl.internal.tree.node.node method)": [[20, "pfl.internal.tree.node.Node.training_complete"]], "composablemetricname (class in pfl.metrics)": [[21, "pfl.metrics.ComposableMetricName"]], "histogram (class in pfl.metrics)": [[21, "pfl.metrics.Histogram"]], "metricname (class in pfl.metrics)": [[21, "pfl.metrics.MetricName"]], "metricnamepostfix (class in pfl.metrics)": [[21, "pfl.metrics.MetricNamePostfix"]], "metricvalue (class in pfl.metrics)": [[21, "pfl.metrics.MetricValue"]], "metrics (class in pfl.metrics)": [[21, "pfl.metrics.Metrics"]], "metricszero (class in pfl.metrics)": [[21, "pfl.metrics.MetricsZero"]], "skipserialization (class in pfl.metrics)": [[21, "pfl.metrics.SkipSerialization"]], "stringmetricname (class in pfl.metrics)": [[21, "pfl.metrics.StringMetricName"]], "summed (class in pfl.metrics)": [[21, "pfl.metrics.Summed"]], "trainmetricname (class in pfl.metrics)": [[21, "pfl.metrics.TrainMetricName"]], "weighted (class in pfl.metrics)": [[21, "pfl.metrics.Weighted"]], "from_values_bins() (pfl.metrics.histogram class method)": [[21, "pfl.metrics.Histogram.from_values_bins"]], "from_values_range() (pfl.metrics.histogram class method)": [[21, "pfl.metrics.Histogram.from_values_range"]], "from_vector() (pfl.metrics.histogram method)": [[21, "pfl.metrics.Histogram.from_vector"]], "from_vector() (pfl.metrics.metricvalue method)": [[21, "pfl.metrics.MetricValue.from_vector"]], "from_vector() (pfl.metrics.summed method)": [[21, "pfl.metrics.Summed.from_vector"]], "from_vector() (pfl.metrics.weighted method)": [[21, "pfl.metrics.Weighted.from_vector"]], "get_overall_value() (in module pfl.metrics)": [[21, "pfl.metrics.get_overall_value"]], "overall_value (pfl.metrics.histogram property)": [[21, "pfl.metrics.Histogram.overall_value"]], "overall_value (pfl.metrics.metricvalue property)": [[21, "pfl.metrics.MetricValue.overall_value"]], "overall_value (pfl.metrics.summed property)": [[21, "pfl.metrics.Summed.overall_value"]], "overall_value (pfl.metrics.weighted property)": [[21, "pfl.metrics.Weighted.overall_value"]], "pfl.metrics": [[21, "module-pfl.metrics"]], "to_simple_dict() (pfl.metrics.metrics method)": [[21, "pfl.metrics.Metrics.to_simple_dict"]], "to_vector() (pfl.metrics.histogram method)": [[21, "pfl.metrics.Histogram.to_vector"]], "to_vector() (pfl.metrics.metricvalue method)": [[21, "pfl.metrics.MetricValue.to_vector"]], "to_vector() (pfl.metrics.summed method)": [[21, "pfl.metrics.Summed.to_vector"]], "to_vector() (pfl.metrics.weighted method)": [[21, "pfl.metrics.Weighted.to_vector"]], "to_vectors() (pfl.metrics.metrics method)": [[21, "pfl.metrics.Metrics.to_vectors"]], "user_average() (in module pfl.metrics)": [[21, "pfl.metrics.user_average"]], "centralexponentialmovingaverage (class in pfl.model.ema)": [[22, "pfl.model.ema.CentralExponentialMovingAverage"]], "evaluatablemodel (class in pfl.model.base)": [[22, "pfl.model.base.EvaluatableModel"]], "gmmhyperparams (class in pfl.model.gaussian_mixture_model)": [[22, "pfl.model.gaussian_mixture_model.GMMHyperParams"]], "gaussianmixturemodel (class in pfl.model.gaussian_mixture_model)": [[22, "pfl.model.gaussian_mixture_model.GaussianMixtureModel"]], "model (class in pfl.model.base)": [[22, "pfl.model.base.Model"]], "pytorchmodel (class in pfl.model.pytorch)": [[22, "pfl.model.pytorch.PyTorchModel"]], "statefulmodel (class in pfl.model.base)": [[22, "pfl.model.base.StatefulModel"]], "tfmodel (class in pfl.model.tensorflow)": [[22, "pfl.model.tensorflow.TFModel"]], "allows_distributed_evaluation (pfl.model.base.evaluatablemodel property)": [[22, "pfl.model.base.EvaluatableModel.allows_distributed_evaluation"]], "allows_distributed_evaluation (pfl.model.gaussian_mixture_model.gaussianmixturemodel property)": [[22, "pfl.model.gaussian_mixture_model.GaussianMixtureModel.allows_distributed_evaluation"]], "allows_distributed_evaluation (pfl.model.pytorch.pytorchmodel property)": [[22, "pfl.model.pytorch.PyTorchModel.allows_distributed_evaluation"]], "allows_distributed_evaluation (pfl.model.tensorflow.tfmodel property)": [[22, "pfl.model.tensorflow.TFModel.allows_distributed_evaluation"]], "apply_model_update() (pfl.model.base.model method)": [[22, "pfl.model.base.Model.apply_model_update"]], "apply_model_update() (pfl.model.gaussian_mixture_model.gaussianmixturemodel method)": [[22, "pfl.model.gaussian_mixture_model.GaussianMixtureModel.apply_model_update"]], "apply_model_update() (pfl.model.pytorch.pytorchmodel method)": [[22, "pfl.model.pytorch.PyTorchModel.apply_model_update"]], "apply_model_update() (pfl.model.tensorflow.tfmodel method)": [[22, "pfl.model.tensorflow.TFModel.apply_model_update"]], "assign() (pfl.model.ema.centralexponentialmovingaverage method)": [[22, "pfl.model.ema.CentralExponentialMovingAverage.assign"]], "components (pfl.model.gaussian_mixture_model.gaussianmixturemodel property)": [[22, "pfl.model.gaussian_mixture_model.GaussianMixtureModel.components"]], "decay (pfl.model.ema.centralexponentialmovingaverage property)": [[22, "pfl.model.ema.CentralExponentialMovingAverage.decay"]], "do_multiple_epochs_of() (pfl.model.pytorch.pytorchmodel method)": [[22, "pfl.model.pytorch.PyTorchModel.do_multiple_epochs_of"]], "do_multiple_epochs_of() (pfl.model.tensorflow.tfmodel method)": [[22, "pfl.model.tensorflow.TFModel.do_multiple_epochs_of"]], "evaluate() (pfl.model.base.evaluatablemodel method)": [[22, "pfl.model.base.EvaluatableModel.evaluate"]], "evaluate() (pfl.model.gaussian_mixture_model.gaussianmixturemodel method)": [[22, "pfl.model.gaussian_mixture_model.GaussianMixtureModel.evaluate"]], "evaluate() (pfl.model.pytorch.pytorchmodel method)": [[22, "pfl.model.pytorch.PyTorchModel.evaluate"]], "evaluate() (pfl.model.tensorflow.tfmodel method)": [[22, "pfl.model.tensorflow.TFModel.evaluate"]], "get_mixture_statistics() (pfl.model.gaussian_mixture_model.gaussianmixturemodel method)": [[22, "pfl.model.gaussian_mixture_model.GaussianMixtureModel.get_mixture_statistics"]], "get_model_difference() (pfl.model.base.statefulmodel method)": [[22, "pfl.model.base.StatefulModel.get_model_difference"]], "get_model_difference() (pfl.model.pytorch.pytorchmodel method)": [[22, "pfl.model.pytorch.PyTorchModel.get_model_difference"]], "get_model_difference() (pfl.model.tensorflow.tfmodel method)": [[22, "pfl.model.tensorflow.TFModel.get_model_difference"]], "get_parameters() (pfl.model.base.statefulmodel method)": [[22, "pfl.model.base.StatefulModel.get_parameters"]], "get_parameters() (pfl.model.pytorch.pytorchmodel method)": [[22, "pfl.model.pytorch.PyTorchModel.get_parameters"]], "get_parameters() (pfl.model.tensorflow.tfmodel method)": [[22, "pfl.model.tensorflow.TFModel.get_parameters"]], "global_gaussian() (pfl.model.gaussian_mixture_model.gaussianmixturemodel method)": [[22, "pfl.model.gaussian_mixture_model.GaussianMixtureModel.global_gaussian"]], "load() (pfl.model.pytorch.pytorchmodel method)": [[22, "pfl.model.pytorch.PyTorchModel.load"]], "load() (pfl.model.tensorflow.tfmodel method)": [[22, "pfl.model.tensorflow.TFModel.load"]], "mix_up() (pfl.model.gaussian_mixture_model.gaussianmixturemodel method)": [[22, "pfl.model.gaussian_mixture_model.GaussianMixtureModel.mix_up"]], "model (pfl.model.gaussian_mixture_model.gaussianmixturemodel property)": [[22, "pfl.model.gaussian_mixture_model.GaussianMixtureModel.model"]], "pfl.model.base": [[22, "module-pfl.model.base"]], "pfl.model.ema": [[22, "module-pfl.model.ema"]], "pfl.model.gaussian_mixture_model": [[22, "module-pfl.model.gaussian_mixture_model"]], "pfl.model.pytorch": [[22, "module-pfl.model.pytorch"]], "pfl.model.tensorflow": [[22, "module-pfl.model.tensorflow"]], "save() (pfl.model.ema.centralexponentialmovingaverage method)": [[22, "pfl.model.ema.CentralExponentialMovingAverage.save"]], "save() (pfl.model.pytorch.pytorchmodel method)": [[22, "pfl.model.pytorch.PyTorchModel.save"]], "save() (pfl.model.tensorflow.tfmodel method)": [[22, "pfl.model.tensorflow.TFModel.save"]], "set_parameters() (pfl.model.base.statefulmodel method)": [[22, "pfl.model.base.StatefulModel.set_parameters"]], "set_parameters() (pfl.model.pytorch.pytorchmodel method)": [[22, "pfl.model.pytorch.PyTorchModel.set_parameters"]], "set_parameters() (pfl.model.tensorflow.tfmodel method)": [[22, "pfl.model.tensorflow.TFModel.set_parameters"]], "shadow_variable_map (pfl.model.ema.centralexponentialmovingaverage property)": [[22, "pfl.model.ema.CentralExponentialMovingAverage.shadow_variable_map"]], "update() (pfl.model.ema.centralexponentialmovingaverage method)": [[22, "pfl.model.ema.CentralExponentialMovingAverage.update"]], "postprocessor (class in pfl.postprocessor.base)": [[23, "pfl.postprocessor.base.Postprocessor"]], "summarymetrics (class in pfl.postprocessor.metrics)": [[23, "pfl.postprocessor.metrics.SummaryMetrics"]], "pfl.postprocessor.base": [[23, "module-pfl.postprocessor.base"]], "pfl.postprocessor.metrics": [[23, "module-pfl.postprocessor.metrics"]], "postprocess_one_user() (pfl.postprocessor.base.postprocessor method)": [[23, "pfl.postprocessor.base.Postprocessor.postprocess_one_user"]], "postprocess_one_user() (pfl.postprocessor.metrics.summarymetrics method)": [[23, "pfl.postprocessor.metrics.SummaryMetrics.postprocess_one_user"]], "postprocess_server() (pfl.postprocessor.base.postprocessor method)": [[23, "pfl.postprocessor.base.Postprocessor.postprocess_server"]], "postprocess_server() (pfl.postprocessor.metrics.summarymetrics method)": [[23, "pfl.postprocessor.metrics.SummaryMetrics.postprocess_server"]], "postprocess_server_live() (pfl.postprocessor.base.postprocessor method)": [[23, "pfl.postprocessor.base.Postprocessor.postprocess_server_live"]], "adaptiveclippinggaussianmechanism (class in pfl.privacy.adaptive_clipping)": [[24, "pfl.privacy.adaptive_clipping.AdaptiveClippingGaussianMechanism"]], "analyticgm_robust() (in module pfl.privacy.compute_parameters)": [[24, "pfl.privacy.compute_parameters.AnalyticGM_robust"]], "analyticgm_robust_impl() (in module pfl.privacy.compute_parameters)": [[24, "pfl.privacy.compute_parameters.AnalyticGM_robust_impl"]], "bandedmatrixfactorizationmechanism (class in pfl.privacy.ftrl_mechanism)": [[24, "pfl.privacy.ftrl_mechanism.BandedMatrixFactorizationMechanism"]], "centralprivacymechanism (class in pfl.privacy.privacy_mechanism)": [[24, "pfl.privacy.privacy_mechanism.CentralPrivacyMechanism"]], "centrallyapplicableprivacymechanism (class in pfl.privacy.privacy_mechanism)": [[24, "pfl.privacy.privacy_mechanism.CentrallyApplicablePrivacyMechanism"]], "centrallyappliedprivacymechanism (class in pfl.privacy.privacy_mechanism)": [[24, "pfl.privacy.privacy_mechanism.CentrallyAppliedPrivacyMechanism"]], "ftrlmatrixfactorizer (class in pfl.privacy.ftrl_mechanism)": [[24, "pfl.privacy.ftrl_mechanism.FTRLMatrixFactorizer"]], "forwardsubstitution (class in pfl.privacy.ftrl_mechanism)": [[24, "pfl.privacy.ftrl_mechanism.ForwardSubstitution"]], "gaussianapproximatedprivacymechanism (class in pfl.privacy.approximate_mechanism)": [[24, "pfl.privacy.approximate_mechanism.GaussianApproximatedPrivacyMechanism"]], "gaussianmechanism (class in pfl.privacy.gaussian_mechanism)": [[24, "pfl.privacy.gaussian_mechanism.GaussianMechanism"]], "jointmechanism (class in pfl.privacy.joint_mechanism)": [[24, "pfl.privacy.joint_mechanism.JointMechanism"]], "jointprivacyaccountant (class in pfl.privacy)": [[24, "pfl.privacy.JointPrivacyAccountant"]], "laplacemechanism (class in pfl.privacy.laplace_mechanism)": [[24, "pfl.privacy.laplace_mechanism.LaplaceMechanism"]], "localprivacymechanism (class in pfl.privacy.privacy_mechanism)": [[24, "pfl.privacy.privacy_mechanism.LocalPrivacyMechanism"]], "mutableclippingbound (class in pfl.privacy.adaptive_clipping)": [[24, "pfl.privacy.adaptive_clipping.MutableClippingBound"]], "noprivacy (class in pfl.privacy)": [[24, "pfl.privacy.NoPrivacy"]], "normclipping (class in pfl.privacy.privacy_mechanism)": [[24, "pfl.privacy.privacy_mechanism.NormClipping"]], "normclippingonly (class in pfl.privacy)": [[24, "pfl.privacy.NormClippingOnly"]], "pldprivacyaccountant (class in pfl.privacy)": [[24, "pfl.privacy.PLDPrivacyAccountant"]], "prvprivacyaccountant (class in pfl.privacy)": [[24, "pfl.privacy.PRVPrivacyAccountant"]], "privacyaccountant (class in pfl.privacy)": [[24, "pfl.privacy.PrivacyAccountant"]], "privacymechanism (class in pfl.privacy.privacy_mechanism)": [[24, "pfl.privacy.privacy_mechanism.PrivacyMechanism"]], "privacymetricname (class in pfl.privacy.privacy_mechanism)": [[24, "pfl.privacy.privacy_mechanism.PrivacyMetricName"]], "rdpprivacyaccountant (class in pfl.privacy)": [[24, "pfl.privacy.RDPPrivacyAccountant"]], "snrmetric (class in pfl.privacy.privacy_snr)": [[24, "pfl.privacy.privacy_snr.SNRMetric"]], "splitprivacymechanism (class in pfl.privacy.privacy_mechanism)": [[24, "pfl.privacy.privacy_mechanism.SplitPrivacyMechanism"]], "squarederrorlocalprivacymechanism (class in pfl.privacy.approximate_mechanism)": [[24, "pfl.privacy.approximate_mechanism.SquaredErrorLocalPrivacyMechanism"]], "add_noise() (pfl.privacy.noprivacy method)": [[24, "pfl.privacy.NoPrivacy.add_noise"]], "add_noise() (pfl.privacy.ftrl_mechanism.bandedmatrixfactorizationmechanism method)": [[24, "pfl.privacy.ftrl_mechanism.BandedMatrixFactorizationMechanism.add_noise"]], "add_noise() (pfl.privacy.gaussian_mechanism.gaussianmechanism method)": [[24, "pfl.privacy.gaussian_mechanism.GaussianMechanism.add_noise"]], "add_noise() (pfl.privacy.joint_mechanism.jointmechanism method)": [[24, "pfl.privacy.joint_mechanism.JointMechanism.add_noise"]], "add_noise() (pfl.privacy.laplace_mechanism.laplacemechanism method)": [[24, "pfl.privacy.laplace_mechanism.LaplaceMechanism.add_noise"]], "add_noise() (pfl.privacy.privacy_mechanism.splitprivacymechanism method)": [[24, "pfl.privacy.privacy_mechanism.SplitPrivacyMechanism.add_noise"]], "add_noise_squared_error() (pfl.privacy.approximate_mechanism.squarederrorlocalprivacymechanism method)": [[24, "pfl.privacy.approximate_mechanism.SquaredErrorLocalPrivacyMechanism.add_noise_squared_error"]], "add_noise_squared_error() (pfl.privacy.gaussian_mechanism.gaussianmechanism method)": [[24, "pfl.privacy.gaussian_mechanism.GaussianMechanism.add_noise_squared_error"]], "add_noise_squared_error() (pfl.privacy.laplace_mechanism.laplacemechanism method)": [[24, "pfl.privacy.laplace_mechanism.LaplaceMechanism.add_noise_squared_error"]], "approximate_as_central_mechanism() (pfl.privacy.approximate_mechanism.squarederrorlocalprivacymechanism method)": [[24, "pfl.privacy.approximate_mechanism.SquaredErrorLocalPrivacyMechanism.approximate_as_central_mechanism"]], "check_valid_parameter_settings() (pfl.privacy.jointprivacyaccountant method)": [[24, "pfl.privacy.JointPrivacyAccountant.check_valid_parameter_settings"]], "cohort_noise_parameter (pfl.privacy.privacyaccountant property)": [[24, "pfl.privacy.PrivacyAccountant.cohort_noise_parameter"]], "cohort_noise_parameters (pfl.privacy.jointprivacyaccountant property)": [[24, "pfl.privacy.JointPrivacyAccountant.cohort_noise_parameters"]], "compute_for_each_mechanism() (pfl.privacy.jointprivacyaccountant method)": [[24, "pfl.privacy.JointPrivacyAccountant.compute_for_each_mechanism"]], "constrain_sensitivity() (pfl.privacy.noprivacy method)": [[24, "pfl.privacy.NoPrivacy.constrain_sensitivity"]], "constrain_sensitivity() (pfl.privacy.joint_mechanism.jointmechanism method)": [[24, "pfl.privacy.joint_mechanism.JointMechanism.constrain_sensitivity"]], "constrain_sensitivity() (pfl.privacy.privacy_mechanism.normclipping method)": [[24, "pfl.privacy.privacy_mechanism.NormClipping.constrain_sensitivity"]], "constrain_sensitivity() (pfl.privacy.privacy_mechanism.splitprivacymechanism method)": [[24, "pfl.privacy.privacy_mechanism.SplitPrivacyMechanism.constrain_sensitivity"]], "construct_from_privacy_accountant() (pfl.privacy.adaptive_clipping.adaptiveclippinggaussianmechanism class method)": [[24, "pfl.privacy.adaptive_clipping.AdaptiveClippingGaussianMechanism.construct_from_privacy_accountant"]], "construct_single_iteration() (pfl.privacy.gaussian_mechanism.gaussianmechanism class method)": [[24, "pfl.privacy.gaussian_mechanism.GaussianMechanism.construct_single_iteration"]], "from_privacy_accountant() (pfl.privacy.gaussian_mechanism.gaussianmechanism class method)": [[24, "pfl.privacy.gaussian_mechanism.GaussianMechanism.from_privacy_accountant"]], "from_vector() (pfl.privacy.privacy_snr.snrmetric method)": [[24, "pfl.privacy.privacy_snr.SNRMetric.from_vector"]], "get_squared_error() (pfl.privacy.approximate_mechanism.squarederrorlocalprivacymechanism method)": [[24, "pfl.privacy.approximate_mechanism.SquaredErrorLocalPrivacyMechanism.get_squared_error"]], "optimize() (pfl.privacy.ftrl_mechanism.ftrlmatrixfactorizer method)": [[24, "pfl.privacy.ftrl_mechanism.FTRLMatrixFactorizer.optimize"]], "overall_value (pfl.privacy.privacy_snr.snrmetric property)": [[24, "pfl.privacy.privacy_snr.SNRMetric.overall_value"]], "pfl.privacy.adaptive_clipping": [[24, "module-pfl.privacy.adaptive_clipping"]], "pfl.privacy.approximate_mechanism": [[24, "module-pfl.privacy.approximate_mechanism"]], "pfl.privacy.compute_parameters": [[24, "module-pfl.privacy.compute_parameters"]], "pfl.privacy.ftrl_mechanism": [[24, "module-pfl.privacy.ftrl_mechanism"]], "pfl.privacy.gaussian_mechanism": [[24, "module-pfl.privacy.gaussian_mechanism"]], "pfl.privacy.joint_mechanism": [[24, "module-pfl.privacy.joint_mechanism"]], "pfl.privacy.laplace_mechanism": [[24, "module-pfl.privacy.laplace_mechanism"]], "pfl.privacy.privacy_mechanism": [[24, "module-pfl.privacy.privacy_mechanism"]], "pfl.privacy.privacy_snr": [[24, "module-pfl.privacy.privacy_snr"]], "postprocess_one_user() (pfl.privacy.adaptive_clipping.adaptiveclippinggaussianmechanism method)": [[24, "pfl.privacy.adaptive_clipping.AdaptiveClippingGaussianMechanism.postprocess_one_user"]], "postprocess_one_user() (pfl.privacy.approximate_mechanism.gaussianapproximatedprivacymechanism method)": [[24, "pfl.privacy.approximate_mechanism.GaussianApproximatedPrivacyMechanism.postprocess_one_user"]], "postprocess_one_user() (pfl.privacy.privacy_mechanism.centrallyappliedprivacymechanism method)": [[24, "pfl.privacy.privacy_mechanism.CentrallyAppliedPrivacyMechanism.postprocess_one_user"]], "postprocess_one_user() (pfl.privacy.privacy_mechanism.localprivacymechanism method)": [[24, "pfl.privacy.privacy_mechanism.LocalPrivacyMechanism.postprocess_one_user"]], "postprocess_server() (pfl.privacy.adaptive_clipping.adaptiveclippinggaussianmechanism method)": [[24, "pfl.privacy.adaptive_clipping.AdaptiveClippingGaussianMechanism.postprocess_server"]], "postprocess_server() (pfl.privacy.approximate_mechanism.gaussianapproximatedprivacymechanism method)": [[24, "pfl.privacy.approximate_mechanism.GaussianApproximatedPrivacyMechanism.postprocess_server"]], "postprocess_server() (pfl.privacy.privacy_mechanism.centrallyappliedprivacymechanism method)": [[24, "pfl.privacy.privacy_mechanism.CentrallyAppliedPrivacyMechanism.postprocess_server"]], "postprocess_server() (pfl.privacy.privacy_mechanism.localprivacymechanism method)": [[24, "pfl.privacy.privacy_mechanism.LocalPrivacyMechanism.postprocess_server"]], "postprocess_server_live() (pfl.privacy.adaptive_clipping.adaptiveclippinggaussianmechanism method)": [[24, "pfl.privacy.adaptive_clipping.AdaptiveClippingGaussianMechanism.postprocess_server_live"]], "postprocess_server_live() (pfl.privacy.privacy_mechanism.centrallyappliedprivacymechanism method)": [[24, "pfl.privacy.privacy_mechanism.CentrallyAppliedPrivacyMechanism.postprocess_server_live"]], "postprocess_server_live() (pfl.privacy.privacy_mechanism.localprivacymechanism method)": [[24, "pfl.privacy.privacy_mechanism.LocalPrivacyMechanism.postprocess_server_live"]], "privatize() (pfl.privacy.privacy_mechanism.localprivacymechanism method)": [[24, "pfl.privacy.privacy_mechanism.LocalPrivacyMechanism.privatize"]], "privatize() (pfl.privacy.privacy_mechanism.splitprivacymechanism method)": [[24, "pfl.privacy.privacy_mechanism.SplitPrivacyMechanism.privatize"]], "sensitivity_scaling() (pfl.privacy.approximate_mechanism.squarederrorlocalprivacymechanism method)": [[24, "pfl.privacy.approximate_mechanism.SquaredErrorLocalPrivacyMechanism.sensitivity_scaling"]], "sensitivity_scaling() (pfl.privacy.gaussian_mechanism.gaussianmechanism method)": [[24, "pfl.privacy.gaussian_mechanism.GaussianMechanism.sensitivity_scaling"]], "sensitivity_scaling() (pfl.privacy.laplace_mechanism.laplacemechanism method)": [[24, "pfl.privacy.laplace_mechanism.LaplaceMechanism.sensitivity_scaling"]], "sensitivity_squared_error() (pfl.privacy.approximate_mechanism.squarederrorlocalprivacymechanism method)": [[24, "pfl.privacy.approximate_mechanism.SquaredErrorLocalPrivacyMechanism.sensitivity_squared_error"]], "sensitivity_squared_error() (pfl.privacy.gaussian_mechanism.gaussianmechanism method)": [[24, "pfl.privacy.gaussian_mechanism.GaussianMechanism.sensitivity_squared_error"]], "sensitivity_squared_error() (pfl.privacy.laplace_mechanism.laplacemechanism method)": [[24, "pfl.privacy.laplace_mechanism.LaplaceMechanism.sensitivity_squared_error"]], "signal_l2_norm (pfl.privacy.privacy_snr.snrmetric property)": [[24, "pfl.privacy.privacy_snr.SNRMetric.signal_l2_norm"]], "squared_error (pfl.privacy.privacy_snr.snrmetric property)": [[24, "pfl.privacy.privacy_snr.SNRMetric.squared_error"]], "step() (pfl.privacy.ftrl_mechanism.forwardsubstitution method)": [[24, "pfl.privacy.ftrl_mechanism.ForwardSubstitution.step"]], "to_vector() (pfl.privacy.privacy_snr.snrmetric method)": [[24, "pfl.privacy.privacy_snr.SNRMetric.to_vector"]], "value() (pfl.privacy.adaptive_clipping.mutableclippingbound method)": [[24, "pfl.privacy.adaptive_clipping.MutableClippingBound.value"]], "elementweightedmappedvectorstatistics (class in pfl.stats)": [[25, "pfl.stats.ElementWeightedMappedVectorStatistics"]], "mappedvectorstatistics (class in pfl.stats)": [[25, "pfl.stats.MappedVectorStatistics"]], "tensorlike (class in pfl.stats)": [[25, "pfl.stats.TensorLike"]], "trainingstatistics (class in pfl.stats)": [[25, "pfl.stats.TrainingStatistics"]], "weightedstatistics (class in pfl.stats)": [[25, "pfl.stats.WeightedStatistics"]], "apply() (pfl.stats.trainingstatistics method)": [[25, "pfl.stats.TrainingStatistics.apply"]], "apply_elementwise() (pfl.stats.trainingstatistics method)": [[25, "pfl.stats.TrainingStatistics.apply_elementwise"]], "average() (pfl.stats.elementweightedmappedvectorstatistics method)": [[25, "pfl.stats.ElementWeightedMappedVectorStatistics.average"]], "average() (pfl.stats.weightedstatistics method)": [[25, "pfl.stats.WeightedStatistics.average"]], "from_weights() (pfl.stats.elementweightedmappedvectorstatistics method)": [[25, "pfl.stats.ElementWeightedMappedVectorStatistics.from_weights"]], "from_weights() (pfl.stats.mappedvectorstatistics method)": [[25, "pfl.stats.MappedVectorStatistics.from_weights"]], "from_weights() (pfl.stats.trainingstatistics method)": [[25, "pfl.stats.TrainingStatistics.from_weights"]], "get_weights() (pfl.stats.elementweightedmappedvectorstatistics method)": [[25, "pfl.stats.ElementWeightedMappedVectorStatistics.get_weights"]], "get_weights() (pfl.stats.mappedvectorstatistics method)": [[25, "pfl.stats.MappedVectorStatistics.get_weights"]], "get_weights() (pfl.stats.trainingstatistics method)": [[25, "pfl.stats.TrainingStatistics.get_weights"]], "num_parameters (pfl.stats.mappedvectorstatistics property)": [[25, "pfl.stats.MappedVectorStatistics.num_parameters"]], "num_parameters (pfl.stats.trainingstatistics property)": [[25, "pfl.stats.TrainingStatistics.num_parameters"]], "pfl.stats": [[25, "module-pfl.stats"]], "reweight() (pfl.stats.elementweightedmappedvectorstatistics method)": [[25, "pfl.stats.ElementWeightedMappedVectorStatistics.reweight"]], "reweight() (pfl.stats.mappedvectorstatistics method)": [[25, "pfl.stats.MappedVectorStatistics.reweight"]], "reweight() (pfl.stats.weightedstatistics method)": [[25, "pfl.stats.WeightedStatistics.reweight"]], "weight (pfl.stats.elementweightedmappedvectorstatistics property)": [[25, "pfl.stats.ElementWeightedMappedVectorStatistics.weight"]], "weight (pfl.stats.weightedstatistics property)": [[25, "pfl.stats.WeightedStatistics.weight"]], "feature (class in pfl.tree.tree_utils)": [[26, "pfl.tree.tree_utils.Feature"]], "federatedgbdt (class in pfl.tree.federated_gbdt)": [[26, "pfl.tree.federated_gbdt.FederatedGBDT"]], "gbdtalgorithmhyperparams (class in pfl.tree.federated_gbdt)": [[26, "pfl.tree.federated_gbdt.GBDTAlgorithmHyperParams"]], "gbdtclassificationmodelhyperparams (class in pfl.tree.gbdt_model)": [[26, "pfl.tree.gbdt_model.GBDTClassificationModelHyperParams"]], "gbdtclippingbound (class in pfl.tree.federated_gbdt)": [[26, "pfl.tree.federated_gbdt.GBDTClippingBound"]], "gbdtmodel (class in pfl.tree.gbdt_model)": [[26, "pfl.tree.gbdt_model.GBDTModel"]], "gbdtmodelclassifier (class in pfl.tree.gbdt_model)": [[26, "pfl.tree.gbdt_model.GBDTModelClassifier"]], "gbdtmodelhyperparams (class in pfl.tree.gbdt_model)": [[26, "pfl.tree.gbdt_model.GBDTModelHyperParams"]], "gbdtmodelregressor (class in pfl.tree.gbdt_model)": [[26, "pfl.tree.gbdt_model.GBDTModelRegressor"]], "noderecord (class in pfl.tree.gbdt_model)": [[26, "pfl.tree.gbdt_model.NodeRecord"]], "after_central_iteration() (pfl.tree.federated_gbdt.gbdtclippingbound method)": [[26, "pfl.tree.federated_gbdt.GBDTClippingBound.after_central_iteration"]], "apply_model_update() (pfl.tree.gbdt_model.gbdtmodel method)": [[26, "pfl.tree.gbdt_model.GBDTModel.apply_model_update"]], "choose_questions() (in module pfl.tree.tree_utils)": [[26, "pfl.tree.tree_utils.choose_questions"]], "compute_first_order_gradient() (pfl.tree.gbdt_model.gbdtmodel method)": [[26, "pfl.tree.gbdt_model.GBDTModel.compute_first_order_gradient"]], "compute_first_order_gradient() (pfl.tree.gbdt_model.gbdtmodelclassifier method)": [[26, "pfl.tree.gbdt_model.GBDTModelClassifier.compute_first_order_gradient"]], "compute_first_order_gradient() (pfl.tree.gbdt_model.gbdtmodelregressor method)": [[26, "pfl.tree.gbdt_model.GBDTModelRegressor.compute_first_order_gradient"]], "compute_second_order_gradient() (pfl.tree.gbdt_model.gbdtmodel method)": [[26, "pfl.tree.gbdt_model.GBDTModel.compute_second_order_gradient"]], "compute_second_order_gradient() (pfl.tree.gbdt_model.gbdtmodelclassifier method)": [[26, "pfl.tree.gbdt_model.GBDTModelClassifier.compute_second_order_gradient"]], "compute_second_order_gradient() (pfl.tree.gbdt_model.gbdtmodelregressor method)": [[26, "pfl.tree.gbdt_model.GBDTModelRegressor.compute_second_order_gradient"]], "current_depth (pfl.tree.gbdt_model.gbdtmodel property)": [[26, "pfl.tree.gbdt_model.GBDTModel.current_depth"]], "current_tree (pfl.tree.gbdt_model.gbdtmodel property)": [[26, "pfl.tree.gbdt_model.GBDTModel.current_tree"]], "evaluate() (pfl.tree.gbdt_model.gbdtmodel method)": [[26, "pfl.tree.gbdt_model.GBDTModel.evaluate"]], "generate_feature_questions() (pfl.tree.tree_utils.feature method)": [[26, "pfl.tree.tree_utils.Feature.generate_feature_questions"]], "load() (pfl.tree.gbdt_model.gbdtmodel method)": [[26, "pfl.tree.gbdt_model.GBDTModel.load"]], "on_train_begin() (pfl.tree.federated_gbdt.gbdtclippingbound method)": [[26, "pfl.tree.federated_gbdt.GBDTClippingBound.on_train_begin"]], "pfl.tree.federated_gbdt": [[26, "module-pfl.tree.federated_gbdt"]], "pfl.tree.gbdt_model": [[26, "module-pfl.tree.gbdt_model"]], "pfl.tree.tree_utils": [[26, "module-pfl.tree.tree_utils"]], "postprocess_training_statistics() (pfl.tree.federated_gbdt.federatedgbdt static method)": [[26, "pfl.tree.federated_gbdt.FederatedGBDT.postprocess_training_statistics"]], "predict() (pfl.tree.gbdt_model.gbdtmodel method)": [[26, "pfl.tree.gbdt_model.GBDTModel.predict"]], "predict_classes() (pfl.tree.gbdt_model.gbdtmodelclassifier method)": [[26, "pfl.tree.gbdt_model.GBDTModelClassifier.predict_classes"]], "process_aggregated_statistics() (pfl.tree.federated_gbdt.federatedgbdt method)": [[26, "pfl.tree.federated_gbdt.FederatedGBDT.process_aggregated_statistics"]], "save() (pfl.tree.gbdt_model.gbdtmodel method)": [[26, "pfl.tree.gbdt_model.GBDTModel.save"]], "simulate_one_user() (pfl.tree.federated_gbdt.federatedgbdt method)": [[26, "pfl.tree.federated_gbdt.FederatedGBDT.simulate_one_user"]], "value() (pfl.tree.federated_gbdt.gbdtclippingbound method)": [[26, "pfl.tree.federated_gbdt.GBDTClippingBound.value"]]}})